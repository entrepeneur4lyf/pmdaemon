{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/pmdaemon/docs/getting-started/introduction","docId":"getting-started/introduction","unlisted":false},{"type":"link","label":"Installation","href":"/pmdaemon/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start","href":"/pmdaemon/docs/getting-started/quick-start","docId":"getting-started/quick-start","unlisted":false},{"type":"link","label":"Migration from PM2","href":"/pmdaemon/docs/getting-started/migration-from-pm2","docId":"getting-started/migration-from-pm2","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Architecture Overview","href":"/pmdaemon/docs/architecture/overview","docId":"architecture/overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Features","items":[{"type":"link","label":"Process Management","href":"/pmdaemon/docs/features/process-management","docId":"features/process-management","unlisted":false},{"type":"link","label":"Port Management","href":"/pmdaemon/docs/features/port-management","docId":"features/port-management","unlisted":false},{"type":"link","label":"Health Checks","href":"/pmdaemon/docs/features/health-checks","docId":"features/health-checks","unlisted":false},{"type":"link","label":"Monitoring","href":"/pmdaemon/docs/features/monitoring","docId":"features/monitoring","unlisted":false},{"type":"link","label":"Web API","href":"/pmdaemon/docs/features/web-api","docId":"features/web-api","unlisted":false},{"type":"link","label":"Configuration","href":"/pmdaemon/docs/features/configuration","docId":"features/configuration","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"CLI Reference","items":[{"type":"link","label":"CLI Commands Reference","href":"/pmdaemon/docs/cli/commands","docId":"cli/commands","unlisted":false},{"type":"link","label":"Configuration Options","href":"/pmdaemon/docs/cli/configuration-options","docId":"cli/configuration-options","unlisted":false},{"type":"link","label":"Environment Variables","href":"/pmdaemon/docs/cli/environment-variables","docId":"cli/environment-variables","unlisted":false},{"type":"link","label":"Exit Codes","href":"/pmdaemon/docs/cli/exit-codes","docId":"cli/exit-codes","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Configuration","items":[{"type":"link","label":"Ecosystem Configuration Files","href":"/pmdaemon/docs/configuration/ecosystem-files","docId":"configuration/ecosystem-files","unlisted":false},{"type":"link","label":"Process Configuration","href":"/pmdaemon/docs/configuration/process-configuration","docId":"configuration/process-configuration","unlisted":false},{"type":"link","label":"Advanced Configuration","href":"/pmdaemon/docs/configuration/advanced-configuration","docId":"configuration/advanced-configuration","unlisted":false},{"type":"link","label":"Schema Validation","href":"/pmdaemon/docs/configuration/schema-validation","docId":"configuration/schema-validation","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Documentation","items":[{"type":"link","label":"REST API Reference","href":"/pmdaemon/docs/api/rest-api","docId":"api/rest-api","unlisted":false},{"type":"link","label":"WebSocket API","href":"/pmdaemon/docs/api/websocket-api","docId":"api/websocket-api","unlisted":false},{"type":"link","label":"Library Usage","href":"/pmdaemon/docs/api/library-usage","docId":"api/library-usage","unlisted":false},{"type":"link","label":"API Examples","href":"/pmdaemon/docs/api/api-examples","docId":"api/api-examples","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples & Tutorials","items":[{"type":"link","label":"Real-World Use Cases","href":"/pmdaemon/docs/examples/use-cases","docId":"examples/use-cases","unlisted":false},{"type":"link","label":"Deployment Examples","href":"/pmdaemon/docs/examples/deployment-examples","docId":"examples/deployment-examples","unlisted":false},{"type":"link","label":"Integration Examples","href":"/pmdaemon/docs/examples/integration-examples","docId":"examples/integration-examples","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced Topics","items":[{"type":"link","label":"Performance Tuning","href":"/pmdaemon/docs/advanced/performance-tuning","docId":"advanced/performance-tuning","unlisted":false},{"type":"link","label":"Security","href":"/pmdaemon/docs/advanced/security","docId":"advanced/security","unlisted":false},{"type":"link","label":"Clustering","href":"/pmdaemon/docs/advanced/clustering","docId":"advanced/clustering","unlisted":false},{"type":"link","label":"Logging","href":"/pmdaemon/docs/advanced/logging","docId":"advanced/logging","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/pmdaemon/docs/advanced/troubleshooting","docId":"advanced/troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Comparison","items":[{"type":"link","label":"PM2 vs PMDaemon Comparison","href":"/pmdaemon/docs/comparison/pm2-vs-pmdaemon","docId":"comparison/pm2-vs-pmdaemon","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"advanced/clustering":{"id":"advanced/clustering","title":"Clustering","description":"PMDaemon's advanced clustering capabilities enable you to scale applications horizontally across multiple instances with intelligent load distribution, automatic failover, and sophisticated process management strategies.","sidebar":"tutorialSidebar"},"advanced/logging":{"id":"advanced/logging","title":"Logging","description":"PMDaemon provides comprehensive logging capabilities for process output, system events, and operational monitoring. This guide covers advanced logging configuration, log management, and integration with external logging systems.","sidebar":"tutorialSidebar"},"advanced/performance-tuning":{"id":"advanced/performance-tuning","title":"Performance Tuning","description":"This guide covers optimization strategies for PMDaemon to achieve maximum performance in production environments. Learn how to tune system resources, optimize process configurations, and scale effectively.","sidebar":"tutorialSidebar"},"advanced/security":{"id":"advanced/security","title":"Security","description":"This comprehensive security guide covers best practices for securing PMDaemon deployments, protecting sensitive data, and implementing defense-in-depth strategies for production environments.","sidebar":"tutorialSidebar"},"advanced/troubleshooting":{"id":"advanced/troubleshooting","title":"Troubleshooting","description":"This comprehensive troubleshooting guide helps you diagnose and resolve common issues with PMDaemon. From process startup failures to performance problems, find solutions to keep your applications running smoothly.","sidebar":"tutorialSidebar"},"api/api-examples":{"id":"api/api-examples","title":"API Examples","description":"This guide provides practical examples of using PMDaemon's REST and WebSocket APIs in various programming languages and scenarios. From simple process management to complex monitoring dashboards, these examples will help you integrate PMDaemon into your applications.","sidebar":"tutorialSidebar"},"api/authentication":{"id":"api/authentication","title":"API Authentication","description":"PMDaemon provides API key authentication to secure your process management API from unauthorized access."},"api/error-handling":{"id":"api/error-handling","title":"Error Handling","description":"PMDaemon's REST API provides comprehensive error handling with detailed error messages, status codes, and troubleshooting guidance."},"api/library-usage":{"id":"api/library-usage","title":"Library Usage","description":"PMDaemon can be used as a Rust library, allowing you to embed process management capabilities directly into your applications. This guide shows how to integrate PMDaemon's powerful process management features into your Rust projects.","sidebar":"tutorialSidebar"},"api/rest-api":{"id":"api/rest-api","title":"REST API Reference","description":"PMDaemon provides a comprehensive REST API for remote process management and monitoring. The API is PM2-compatible and includes additional features unique to PMDaemon.","sidebar":"tutorialSidebar"},"api/websocket-api":{"id":"api/websocket-api","title":"WebSocket API","description":"PMDaemon's WebSocket API provides real-time communication for monitoring process status, receiving live updates, and managing processes interactively. Built for high performance and low latency, it's perfect for dashboards, monitoring tools, and real-time applications.","sidebar":"tutorialSidebar"},"architecture/overview":{"id":"architecture/overview","title":"Architecture Overview","description":"GitHub Stars","sidebar":"tutorialSidebar"},"cli/commands":{"id":"cli/commands","title":"CLI Commands Reference","description":"PMDaemon provides a comprehensive command-line interface with PM2-compatible commands plus enhanced features. This reference covers all available commands with examples and options.","sidebar":"tutorialSidebar"},"cli/configuration-options":{"id":"cli/configuration-options","title":"Configuration Options","description":"This comprehensive reference covers all CLI configuration options available in PMDaemon. Each option includes its purpose, default value, accepted formats, and practical examples.","sidebar":"tutorialSidebar"},"cli/environment-variables":{"id":"cli/environment-variables","title":"Environment Variables","description":"PMDaemon uses environment variables for system-level configuration and automatically injects process-specific variables into managed processes. This reference covers both PMDaemon's own environment variables and those it provides to your applications.","sidebar":"tutorialSidebar"},"cli/exit-codes":{"id":"cli/exit-codes","title":"Exit Codes","description":"PMDaemon uses standard Unix exit codes for all operations.","sidebar":"tutorialSidebar"},"comparison/pm2-vs-pmdaemon":{"id":"comparison/pm2-vs-pmdaemon","title":"PM2 vs PMDaemon Comparison","description":"This comprehensive comparison shows how PMDaemon builds upon PM2's foundation while adding innovative features that address real-world production needs.","sidebar":"tutorialSidebar"},"configuration/advanced-configuration":{"id":"configuration/advanced-configuration","title":"Advanced Configuration","description":"This guide covers advanced PMDaemon configuration patterns, complex scenarios, and sophisticated deployment strategies. Learn how to leverage PMDaemon's full potential for enterprise-grade process management.","sidebar":"tutorialSidebar"},"configuration/best-practices":{"id":"configuration/best-practices","title":"Configuration Best Practices","description":"This guide covers best practices for configuring PMDaemon ecosystem files, ensuring optimal performance, reliability, and maintainability across different environments."},"configuration/ecosystem-files":{"id":"configuration/ecosystem-files","title":"Ecosystem Configuration Files","description":"PMDaemon supports ecosystem configuration files in multiple formats (JSON, YAML, TOML), allowing you to define complex application setups in a declarative way. This is similar to PM2's ecosystem.config.js but with enhanced features and multiple format support.","sidebar":"tutorialSidebar"},"configuration/environment-specific":{"id":"configuration/environment-specific","title":"Environment-Specific Configuration","description":"PMDaemon supports environment-specific configurations to manage different deployment stages (development, staging, production) with tailored settings for each environment."},"configuration/process-configuration":{"id":"configuration/process-configuration","title":"Process Configuration","description":"PMDaemon provides comprehensive process configuration options that allow you to define every aspect of how your applications run. This guide covers individual process configuration in detail, from basic settings to advanced clustering and health checks.","sidebar":"tutorialSidebar"},"configuration/schema-validation":{"id":"configuration/schema-validation","title":"Schema Validation","description":"PMDaemon provides comprehensive configuration validation to ensure your process configurations are correct before deployment. This prevents runtime errors and helps catch configuration issues early in the development cycle.","sidebar":"tutorialSidebar"},"examples/clustering":{"id":"examples/clustering","title":"Clustering Examples","description":"This guide demonstrates how to implement clustering and load balancing with PMDaemon, including port management strategies for multi-instance applications."},"examples/deployment-examples":{"id":"examples/deployment-examples","title":"Deployment Examples","description":"This guide provides real-world deployment examples for PMDaemon across different environments and use cases. From simple single-server deployments to complex multi-tier architectures, these examples will help you deploy your applications effectively.","sidebar":"tutorialSidebar"},"examples/integration-examples":{"id":"examples/integration-examples","title":"Integration Examples","description":"This guide provides practical examples of integrating PMDaemon with popular frameworks, platforms, and tools. Learn how to seamlessly incorporate PMDaemon into your existing development and deployment workflows.","sidebar":"tutorialSidebar"},"examples/use-cases":{"id":"examples/use-cases","title":"Real-World Use Cases","description":"This guide showcases practical, real-world scenarios where PMDaemon excels, demonstrating how its advanced features solve common deployment and management challenges.","sidebar":"tutorialSidebar"},"features/configuration":{"id":"features/configuration","title":"Configuration","description":"PMDaemon provides flexible configuration options that allow you to customize every aspect of process management. From basic process settings to advanced clustering and health checks, PMDaemon's configuration system is designed for both simplicity and power.","sidebar":"tutorialSidebar"},"features/cross-platform":{"id":"features/cross-platform","title":"Cross-Platform Support","description":"PMDaemon is designed from the ground up to be truly cross-platform, providing native performance and full feature parity across Linux, Windows, and macOS."},"features/health-checks":{"id":"features/health-checks","title":"Health Checks","description":"PMDaemon's health check system provides robust monitoring and validation of your processes, ensuring they're not just running but actually functioning correctly. This goes beyond basic process monitoring to verify that your applications are healthy and ready to serve traffic.","sidebar":"tutorialSidebar"},"features/load-balancing":{"id":"features/load-balancing","title":"Clustering & Process Distribution","description":"PMDaemon provides clustering capabilities that allow you to run multiple instances of your application for improved performance and reliability. While PMDaemon handles process management and port distribution, external load balancing is handled by reverse proxies or load balancers."},"features/monitoring":{"id":"features/monitoring","title":"Monitoring","description":"PMDaemon provides comprehensive real-time monitoring capabilities that give you deep insights into your processes and system performance. With configurable update intervals, beautiful table formatting, and detailed metrics collection, you can monitor everything from CPU usage to health check status.","sidebar":"tutorialSidebar"},"features/port-management":{"id":"features/port-management","title":"Port Management","description":"PMDaemon's advanced port management is one of its most innovative features, going far beyond what traditional process managers offer. This system provides automatic port allocation, conflict detection, and runtime flexibility that makes deploying clustered applications effortless.","sidebar":"tutorialSidebar"},"features/process-management":{"id":"features/process-management","title":"Process Management","description":"PMDaemon provides comprehensive process lifecycle management with enhanced features that go beyond traditional process managers. This guide covers all aspects of managing processes with PMDaemon.","sidebar":"tutorialSidebar"},"features/web-api":{"id":"features/web-api","title":"Web API","description":"PMDaemon provides a comprehensive REST API and real-time WebSocket interface for remote process management and monitoring. Built on the high-performance Axum web framework, it offers PM2-compatible endpoints with additional advanced features.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"PMDaemon is fully cross-platform and can be installed on Linux, Windows, and macOS through multiple methods. Choose the one that works best for your environment.","sidebar":"tutorialSidebar"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Introduction","description":"PMDaemon is a high-performance process manager built in Rust, inspired by PM2 with innovative features that exceed the original. It's designed for modern application deployment with advanced port management, real-time monitoring, and production-ready web APIs.","sidebar":"tutorialSidebar"},"getting-started/migration-from-pm2":{"id":"getting-started/migration-from-pm2","title":"Migration from PM2","description":"Migrating from PM2 to PMDaemon is straightforward thanks to PMDaemon's PM2-compatible command interface. This guide helps you transition smoothly while taking advantage of PMDaemon's enhanced features.","sidebar":"tutorialSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start","description":"Get up and running with PMDaemon in just 5 minutes! This guide covers the essential commands and features you need to start managing processes.","sidebar":"tutorialSidebar"},"monitoring/overview":{"id":"monitoring/overview","title":"Monitoring Overview","description":"PMDaemon provides comprehensive monitoring capabilities to help you track the health and performance of your applications and the daemon itself."},"performance/optimization":{"id":"performance/optimization","title":"Performance Optimization","description":"This guide covers strategies and techniques for optimizing PMDaemon performance and the applications it manages."},"security/overview":{"id":"security/overview","title":"Security Overview","description":"PMDaemon provides multiple layers of security to protect your applications and the daemon itself. This guide covers security features, best practices, and configuration options."}}}}