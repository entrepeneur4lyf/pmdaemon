{"archive":{"blogPosts":[{"id":"v0.1.2-ecosystem-config-files","metadata":{"permalink":"/pmdaemon/changelog/v0.1.2-ecosystem-config-files","source":"@site/changelog/2025-05-27-v0.1.2.md","title":"PMDaemon v0.1.2 - Ecosystem Configuration Files & Multi-App Management","description":"We're excited to announce PMDaemon v0.1.2, a major productivity update that introduces Ecosystem Configuration File Support, enabling seamless management of multiple applications through JSON, YAML, and TOML configuration files.","date":"2025-05-27T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/pmdaemon/changelog/tags/release"},{"inline":true,"label":"ecosystem","permalink":"/pmdaemon/changelog/tags/ecosystem"},{"inline":true,"label":"config-files","permalink":"/pmdaemon/changelog/tags/config-files"},{"inline":true,"label":"multi-app","permalink":"/pmdaemon/changelog/tags/multi-app"}],"hasTruncateMarker":true,"authors":[{"name":"Shawn McAllister","title":"PMDaemon Developer","url":"https://github.com/entrepeneur4lyf","imageURL":"https://github.com/entrepeneur4lyf.png","key":"shawn","page":null}],"frontMatter":{"slug":"v0.1.2-ecosystem-config-files","title":"PMDaemon v0.1.2 - Ecosystem Configuration Files & Multi-App Management","authors":["shawn"],"tags":["release","ecosystem","config-files","multi-app"]},"unlisted":false,"nextItem":{"title":"PMDaemon v0.1.1 - Enhanced Delete Operations, Health Checks & Monitoring","permalink":"/pmdaemon/changelog/v0.1.1"}},"content":"We're excited to announce PMDaemon v0.1.2, a major productivity update that introduces **Ecosystem Configuration File Support**, enabling seamless management of multiple applications through JSON, YAML, and TOML configuration files.\n\n<!-- truncate -->\n\n## üéâ What's New in v0.1.2\n\nThis release focuses on developer productivity and deployment automation by introducing comprehensive ecosystem configuration support. PMDaemon now allows you to define and manage complex multi-application setups through simple configuration files, making it ideal for microservices, development environments, and production deployments.\n\n## ‚ú® Key Features\n\n### üìÅ Ecosystem Configuration Files\n- **Multi-Format Support** - JSON, YAML, and TOML configuration files\n- **Full Feature Parity** - All CLI options available in config files\n- **App-Specific Targeting** - Start specific applications from config files\n\n### üéØ Advanced Configuration Management\n- **Comprehensive Field Support** - All process options configurable via files\n- **Environment-Specific Configs** - Separate config files for different environments\n- **Validation & Error Handling** - Detailed error messages for configuration issues\n\n## üöÄ Getting Started\n\n### Create Your Ecosystem File\n\n**ecosystem.json:**\n```json\n{\n  \"apps\": [\n    {\n      \"name\": \"web-server\",\n      \"script\": \"node\",\n      \"args\": [\"server.js\"],\n      \"instances\": 2,\n      \"port\": \"3000-3001\",\n      \"env\": {\n        \"NODE_ENV\": \"production\"\n      }\n    }\n  ]\n}\n```\n\n### Start Your Applications\n```bash\n# Start all apps from config\npmdaemon --config ecosystem.json start\n\n# Start specific app\npmdaemon --config ecosystem.json start --name web-server\n```\n\n## üìä Technical Highlights\n\n- **267 total tests** with comprehensive ecosystem config coverage\n- **9 completed development phases** including ecosystem configuration\n- **Production-ready** stability with comprehensive configuration support\n- **Backward compatible** - existing CLI workflows unchanged\n\n## üÜö Beyond PM2\n\nPMDaemon v0.1.2 now matches and exceeds PM2's ecosystem capabilities:\n\n| Feature                 | PMDaemon v0.1.2 | PM2 |\n|-------------------------|:---------------:|:---:|\n| Ecosystem config files | ‚úÖ              | ‚úÖ  |\n| Multiple config formats| ‚úÖ (JSON/YAML/TOML) | ‚ùå (JS only) |\n| Port range distribution | ‚úÖ              | ‚ùå  |\n| Auto port assignment   | ‚úÖ              | ‚ùå  |\n| Built-in health checks | ‚úÖ              | ‚ùå  |\n| Configuration validation| ‚úÖ              | ‚ùå  |\n\n## üìö Migration from PM2\n\nConverting from PM2 is straightforward:\n\n**PM2 ecosystem.config.js:**\n```javascript\nmodule.exports = {\n  apps: [{\n    name: 'my-app',\n    script: 'server.js',\n    instances: 4\n  }]\n};\n```\n\n**PMDaemon ecosystem.json:**\n```json\n{\n  \"apps\": [{\n    \"name\": \"my-app\",\n    \"script\": \"node\",\n    \"args\": [\"server.js\"],\n    \"instances\": 4\n  }]\n}\n```\n\n## üîó Resources\n\n- **[Configuration Guide](/docs/configuration/ecosystem-files)** - Complete ecosystem config documentation\n- **[Examples](/docs/examples/ecosystem-configs)** - Real-world configuration examples\n- **[Migration Guide](/docs/comparison/migration-from-pm2)** - Step-by-step PM2 migration\n\n---\n\nPMDaemon v0.1.2 represents a significant step forward in making process management more accessible and powerful for modern development workflows. Try it today!\n\n**Download:** [GitHub Releases](https://github.com/entrepeneur4lyf/pmdaemon/releases)\n**Documentation:** [https://entrepeneur4lyf.github.io/pmdaemon](https://entrepeneur4lyf.github.io/pmdaemon)"},{"id":"v0.1.1","metadata":{"permalink":"/pmdaemon/changelog/v0.1.1","source":"@site/changelog/2025-05-26-v0.1.1.md","title":"PMDaemon v0.1.1 - Enhanced Delete Operations, Health Checks & Monitoring","description":"We're excited to announce PMDaemon v0.1.1, a significant update that brings powerful new features for production environments, enhanced safety mechanisms, and comprehensive health monitoring capabilities.","date":"2025-05-26T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/pmdaemon/changelog/tags/release"},{"inline":true,"label":"health-checks","permalink":"/pmdaemon/changelog/tags/health-checks"},{"inline":true,"label":"monitoring","permalink":"/pmdaemon/changelog/tags/monitoring"},{"inline":true,"label":"delete-operations","permalink":"/pmdaemon/changelog/tags/delete-operations"},{"inline":true,"label":"testing","permalink":"/pmdaemon/changelog/tags/testing"}],"hasTruncateMarker":true,"authors":[{"name":"PMDaemon Team","title":"PMDaemon Maintainers","url":"https://github.com/entrepeneur4lyf/pmdaemon","imageURL":"https://github.com/entrepeneur4lyf.png","key":"pmdaemon","page":null}],"frontMatter":{"slug":"v0.1.1","title":"PMDaemon v0.1.1 - Enhanced Delete Operations, Health Checks & Monitoring","authors":["pmdaemon"],"tags":["release","health-checks","monitoring","delete-operations","testing"],"date":"2025-05-26T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"PMDaemon v0.1.2 - Ecosystem Configuration Files & Multi-App Management","permalink":"/pmdaemon/changelog/v0.1.2-ecosystem-config-files"},"nextItem":{"title":"PMDaemon v0.1.0 - Initial Release","permalink":"/pmdaemon/changelog/v0.1.0"}},"content":"We're excited to announce PMDaemon v0.1.1, a significant update that brings powerful new features for production environments, enhanced safety mechanisms, and comprehensive health monitoring capabilities.\n\n<!-- truncate -->\n\n## üöÄ Major New Features\n\n### Enhanced Delete Operations\n\nThis release introduces robust bulk deletion capabilities with safety mechanisms:\n\n- **Bulk deletion**: Added `delete all` command to stop and delete all processes at once\n- **Status-based deletion**: Added `delete <status> --status` to delete processes by their current state\n  - Valid statuses: `starting`, `online`, `stopping`, `stopped`, `errored`, `restarting`\n- **Force flag**: Added `--force` / `-f` flag to skip confirmation prompts for automation\n- **Safety confirmations**: Interactive prompts for bulk operations to prevent accidental deletions\n- **Process shutdown**: All delete operations now properly stop running processes before deletion\n- **Enhanced feedback**: Clear reporting of how many processes were stopped vs. deleted\n\n```bash\n# Delete all stopped processes\npmdaemon delete stopped --status --force\n\n# Delete all processes with confirmation\npmdaemon delete all\n\n# Force delete without prompts (for scripts)\npmdaemon delete all --force\n```\n\n### Health Checks & Monitoring\n\nAdvanced health monitoring capabilities that go beyond basic process tracking:\n\n- **HTTP Health Checks**: Monitor process health via HTTP endpoints (`--health-check-url`)\n- **Script-based Health Checks**: Custom health check scripts for complex validation (`--health-check-script`)\n- **Configurable Health Parameters**: Timeout (`--health-check-timeout`), interval, and retry settings (`--health-check-retries`)\n- **Health-based Auto-restart**: Automatic restart when health checks fail\n- **Monitoring Integration**: Health status visible in process listings (`pmdaemon monit`) and web API\n\n```bash\n# Start with HTTP health check\npmdaemon start app.js --health-check-url http://localhost:3000/health\n\n# Start with custom health script\npmdaemon start app.js --health-check-script ./health-check.sh\n```\n\n### Blocking Start Command\n\nPerfect for deployment scripts that need to wait for services to be ready:\n\n- **Wait for Ready**: Block start command until processes are healthy (`--wait-ready`)\n- **Configurable Wait Timeout**: Set maximum wait time for process readiness (`--wait-timeout`)\n- **Progress Indicators**: Real-time status updates during health check waiting\n- **Script-friendly**: Ideal for deployment scripts that need to wait for services\n\n```bash\n# Wait for process to be healthy before continuing\npmdaemon start app.js --wait-ready --wait-timeout 30s\n```\n\n### Configurable Monitoring Intervals\n\nOptimize monitoring performance for your specific needs:\n\n- **Library**: Added `monitor_with_interval(Duration)` method for configurable update intervals\n- **CLI**: Added `--interval` / `-i` flag to `monit` command for custom refresh rates\n- **Performance optimization**: Users can now balance responsiveness vs. resource usage:\n  - Fast updates (1s) for debugging and development\n  - Balanced updates (2s) for general use (library default)\n  - Slower updates (5s+) for reduced system load\n\n```bash\n# Monitor with 5-second intervals\npmdaemon monit --interval 5\n```\n\n## üîß Enhanced Features\n\n### Professional Monitoring Display\n\n- **Beautiful table formatting**: Integrated `comfy-table` for professional display\n- **Color-coded status indicators**:\n  - üü¢ Green for Online processes\n  - üî¥ Red for Stopped/Errored processes\n  - üü° Yellow for Starting/Stopping processes\n  - üîµ Blue for Restarting processes\n- **PID column**: Added Process ID display for better debugging and system integration\n- **Enhanced system overview**: Improved system metrics display with proper formatting\n\n### Enhanced Log Management\n\n- **Real-time log following**: Implemented `follow_logs()` method with `tail -f` functionality\n- **Configurable log retrieval**: Enhanced `get_logs()` method with proper line limiting\n- **Missing file handling**: Graceful handling of non-existent log files\n- **CLI integration**: `pmdaemon logs --follow` for real-time log monitoring\n\n## üß™ Comprehensive Testing\n\nThis release significantly expands our test coverage:\n\n- **Test count**: 267 total tests (up from 158 before health checks & blocking start)\n- **New coverage**: Delete operations (bulk, status-based, safe shutdown), Health Checks (HTTP, script, params), Blocking Start (`--wait-ready`, `--wait-timeout`), CLI argument parsing and utility functions, and process lifecycle management.\n- **Enhanced test suites**: Added comprehensive tests for all new delete, health check, blocking start functionality, and complete CLI binary test coverage.\n- **Quality**: 100% test success rate with comprehensive error path testing and 80%+ code coverage.\n\n## üêõ Bug Fixes\n\n- **Production-ready code**: Eliminated all TODO comments from production codebase\n- **Thread safety**: Improved async/await patterns and lock management\n- **Memory efficiency**: Optimized file reading and monitoring operations\n\n## üìä Technical Details\n\n- **Dependencies**: Added `comfy-table` for professional table formatting\n- **Performance**: Configurable intervals allow optimization for different use cases. Health checks add minimal overhead\n- **Compatibility**: Backward compatible - no breaking changes to existing API\n\n## Download & Install\n\n```bash\n# Install from crates.io\ncargo install pmdaemon\n\n# Or build from source\ngit clone https://github.com/entrepeneur4lyf/pmdaemon.git\ncd pmdaemon\ncargo build --release\n```\n\n## What's Next\n\nWe're continuing to enhance PMDaemon with more advanced features. Stay tuned for upcoming releases!\n\n---\n\n**Full Changelog**: [v0.1.0...v0.1.1](https://github.com/entrepeneur4lyf/pmdaemon/compare/v0.1.0...v0.1.1)"},{"id":"v0.1.0","metadata":{"permalink":"/pmdaemon/changelog/v0.1.0","source":"@site/changelog/2025-05-25-v0.1.0.md","title":"PMDaemon v0.1.0 - Initial Release","description":"We're thrilled to announce the initial release of PMDaemon, a high-performance process manager built in Rust that takes inspiration from PM2 while adding innovative features that exceed the original.","date":"2025-05-25T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/pmdaemon/changelog/tags/release"},{"inline":true,"label":"initial","permalink":"/pmdaemon/changelog/tags/initial"},{"inline":true,"label":"process-manager","permalink":"/pmdaemon/changelog/tags/process-manager"},{"inline":true,"label":"rust","permalink":"/pmdaemon/changelog/tags/rust"},{"inline":true,"label":"pm2","permalink":"/pmdaemon/changelog/tags/pm-2"}],"hasTruncateMarker":true,"authors":[{"name":"PMDaemon Team","title":"PMDaemon Maintainers","url":"https://github.com/entrepeneur4lyf/pmdaemon","imageURL":"https://github.com/entrepeneur4lyf.png","key":"pmdaemon","page":null}],"frontMatter":{"slug":"v0.1.0","title":"PMDaemon v0.1.0 - Initial Release","authors":["pmdaemon"],"tags":["release","initial","process-manager","rust","pm2"],"date":"2025-05-25T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"PMDaemon v0.1.1 - Enhanced Delete Operations, Health Checks & Monitoring","permalink":"/pmdaemon/changelog/v0.1.1"}},"content":"We're thrilled to announce the initial release of PMDaemon, a high-performance process manager built in Rust that takes inspiration from PM2 while adding innovative features that exceed the original.\n\n<!-- truncate -->\n\n## üéØ Why PMDaemon?\n\nPMDaemon was created to address the limitations of existing process managers while providing a familiar interface for PM2 users. Built with Rust, it offers memory safety, blazing performance, and advanced features not available in other process managers.\n\n## üöÄ Core Features\n\n### Complete Process Management\n\n- **Lifecycle management**: Full control over process start, stop, restart, reload, and delete operations\n- **Process clustering**: Automatic load balancing across multiple instances\n- **Auto-restart on crash**: Configurable limits and intelligent restart logic\n- **Graceful shutdown**: Proper signal handling (SIGTERM/SIGINT) for clean process termination\n- **Configuration persistence**: Multi-session support with persistent process configurations\n\n### Advanced Port Management (Beyond PM2)\n\nOne of PMDaemon's standout features is its sophisticated port management system:\n\n- **Port range distribution**: Automatically distribute ports across cluster instances (`--port 3000-3003`)\n- **Auto-assignment from ranges**: Smart port allocation (`--port auto:5000-5100`)\n- **Built-in conflict detection**: Prevents port conflicts before they happen\n- **Runtime port overrides**: Change ports without modifying configuration files\n- **Port visibility**: See assigned ports in process listings\n\n```bash\n# Start a cluster with automatic port distribution\npmdaemon start app.js --instances 4 --port 3000-3003\n\n# Auto-assign ports from a range\npmdaemon start api.js --port auto:8000-8100\n```\n\n### Real-time Monitoring\n\n- **System metrics**: CPU, memory, uptime tracking with system-wide statistics\n- **Load average monitoring**: Track system load across 1, 5, and 15-minute intervals\n- **Memory limit enforcement**: Automatic restart when processes exceed memory limits\n- **Process health checks**: Built-in health monitoring with auto-restart capabilities\n\n### Professional CLI Interface\n\nPMDaemon provides a familiar yet enhanced command-line experience:\n\n- **PM2-compatible commands**: All the commands you know and love\n- **Enhanced display**: Color-coded statuses and professional table formatting\n- **Rich monitoring**: Real-time process monitoring with system overview\n\n```bash\n# Familiar PM2-style commands\npmdaemon start app.js --name my-app --instances 2\npmdaemon list\npmdaemon monit\npmdaemon logs my-app --follow\n```\n\n### Web API & WebSocket Support\n\n- **REST API**: Complete process management via HTTP endpoints\n- **PM2-compatible responses**: Drop-in replacement for PM2 API consumers\n- **Real-time updates**: WebSocket support for live process monitoring\n- **Security**: CORS support and proper security headers\n\n### Robust Log Management\n\n- **Separate streams**: Individual stdout/stderr file handling\n- **PID file management**: Proper process tracking and cleanup\n- **Log viewing**: Built-in log viewing and following capabilities\n- **Graceful handling**: Robust error handling for missing or corrupted log files\n\n## üèóÔ∏è Technical Excellence\n\n### Built with Rust\n\n- **Memory safety**: Zero-cost abstractions without garbage collection overhead\n- **Performance**: Native performance with minimal resource usage\n- **Concurrency**: Async/await architecture using Tokio for efficient I/O\n\n### Modern Architecture\n\n- **Web server**: Powered by Axum for high-performance HTTP handling\n- **System monitoring**: Leverages sysinfo for cross-platform system metrics\n- **Cross-platform**: Full support for Linux, macOS, and Windows\n\n### Comprehensive Testing\n\n- **158 comprehensive tests**: Unit, integration, end-to-end, and documentation tests\n- **Complete documentation**: Full Rust documentation with examples\n- **Usage guides**: Comprehensive examples and migration guides\n\n## üöÄ Getting Started\n\n### Installation\n\n```bash\n# Install from crates.io\ncargo install pmdaemon\n\n# Or build from source\ngit clone https://github.com/entrepeneur4lyf/pmdaemon.git\ncd pmdaemon\ncargo build --release\n```\n\n### Quick Start\n\n```bash\n# Start a simple application\npmdaemon start app.js --name my-app\n\n# Start a cluster with port management\npmdaemon start server.js --instances 4 --port 3000-3003\n\n# Monitor processes in real-time\npmdaemon monit\n\n# View and follow logs\npmdaemon logs my-app --follow\n```\n\n### Migration from PM2\n\nPMDaemon is designed to be a drop-in replacement for most PM2 use cases. Check out our [migration guide](/docs/getting-started/migration-from-pm2) for detailed instructions.\n\n## üó∫Ô∏è What's Next\n\nThis initial release establishes PMDaemon as a robust, production-ready process manager. Future releases will continue to expand capabilities while maintaining the familiar interface that makes PMDaemon easy to adopt.\n\n## üôè Community\n\nWe're excited to see what the community builds with PMDaemon. Join us:\n\n- **GitHub**: [entrepeneur4lyf/pmdaemon](https://github.com/entrepeneur4lyf/pmdaemon)\n- **Issues**: Report bugs and request features\n- **Discussions**: Share your use cases and get help\n\n---\n\n**Release**: [v0.1.0](https://github.com/entrepeneur4lyf/pmdaemon/releases/tag/v0.1.0)"}]}}