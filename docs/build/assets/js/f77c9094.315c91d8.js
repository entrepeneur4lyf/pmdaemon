"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[168],{2465:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"features/monitoring","title":"Monitoring","description":"PMDaemon provides comprehensive real-time monitoring capabilities that give you deep insights into your processes and system performance. With configurable update intervals, beautiful table formatting, and detailed metrics collection, you can monitor everything from CPU usage to health check status.","source":"@site/docs/features/monitoring.md","sourceDirName":"features","slug":"/features/monitoring","permalink":"/pmdaemon/docs/features/monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/features/monitoring.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Health Checks","permalink":"/pmdaemon/docs/features/health-checks"},"next":{"title":"Web API","permalink":"/pmdaemon/docs/features/web-api"}}');var i=r(4848),t=r(8453);const o={},l="Monitoring",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Real-time Monitoring",id:"real-time-monitoring",level:2},{value:"Basic Monitoring",id:"basic-monitoring",level:3},{value:"Monitoring Display",id:"monitoring-display",level:3},{value:"Status Indicators",id:"status-indicators",level:3},{value:"Metrics Collection",id:"metrics-collection",level:2},{value:"Process Metrics",id:"process-metrics",level:3},{value:"System Metrics",id:"system-metrics",level:3},{value:"Metric History",id:"metric-history",level:3},{value:"Configurable Update Intervals",id:"configurable-update-intervals",level:2},{value:"Performance vs Responsiveness",id:"performance-vs-responsiveness",level:3},{value:"Library Usage",id:"library-usage",level:3},{value:"Process Information",id:"process-information",level:2},{value:"Detailed Process View",id:"detailed-process-view",level:3},{value:"Process List",id:"process-list",level:3},{value:"Log Monitoring",id:"log-monitoring",level:2},{value:"View Process Logs",id:"view-process-logs",level:3},{value:"Log File Management",id:"log-file-management",level:3},{value:"Web-based Monitoring",id:"web-based-monitoring",level:2},{value:"Web Interface",id:"web-interface",level:3},{value:"REST API Monitoring",id:"rest-api-monitoring",level:3},{value:"WebSocket Real-time Updates",id:"websocket-real-time-updates",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Monitoring Overhead",id:"monitoring-overhead",level:3},{value:"Optimization Tips",id:"optimization-tips",level:3},{value:"Alerting and Notifications",id:"alerting-and-notifications",level:2},{value:"Built-in Alerting",id:"built-in-alerting",level:3},{value:"Custom Alerting",id:"custom-alerting",level:3},{value:"Monitoring Best Practices",id:"monitoring-best-practices",level:2},{value:"1. Choose Appropriate Intervals",id:"1-choose-appropriate-intervals",level:3},{value:"2. Monitor Key Metrics",id:"2-monitor-key-metrics",level:3},{value:"3. Set Up Proper Logging",id:"3-set-up-proper-logging",level:3},{value:"4. Use Health Checks",id:"4-use-health-checks",level:3},{value:"Troubleshooting Monitoring",id:"troubleshooting-monitoring",level:2},{value:"High CPU Usage in Monitoring",id:"high-cpu-usage-in-monitoring",level:3},{value:"Missing Metrics",id:"missing-metrics",level:3},{value:"Inaccurate Metrics",id:"inaccurate-metrics",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"monitoring",children:"Monitoring"})}),"\n",(0,i.jsxs)(n.p,{children:["PMDaemon provides comprehensive ",(0,i.jsx)(n.strong,{children:"real-time monitoring"})," capabilities that give you deep insights into your processes and system performance. With configurable update intervals, beautiful table formatting, and detailed metrics collection, you can monitor everything from CPU usage to health check status."]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon's monitoring system includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcca Real-time metrics"})," - CPU, memory, uptime, restart count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83c\udfa8 Beautiful table formatting"})," - Professional display with color-coded status"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u23f1\ufe0f Configurable intervals"})," - Customize refresh rates from 1s to minutes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udd0d Process details"})," - PID, port assignments, health status"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcc8 System overview"})," - CPU, memory, load average, uptime"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcf1 Multiple interfaces"})," - CLI, Web API, WebSocket"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"real-time-monitoring",children:"Real-time Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"basic-monitoring",children:"Basic Monitoring"}),"\n",(0,i.jsxs)(n.p,{children:["Start real-time monitoring with the ",(0,i.jsx)(n.code,{children:"monit"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Default monitoring (1-second updates)\r\npmdaemon monit\r\n\r\n# Custom update interval\r\npmdaemon monit --interval 5\r\n\r\n# Specific interval formats\r\npmdaemon monit --interval 2s    # 2 seconds\r\npmdaemon monit --interval 30s   # 30 seconds\r\npmdaemon monit --interval 1m    # 1 minute\n"})}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-display",children:"Monitoring Display"}),"\n",(0,i.jsx)(n.p,{children:"The monitoring interface shows a comprehensive table:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 ID \u2502 Name        \u2502 Status \u2502 PID \u2502 Port \u2502 CPU \u2502 Memory \u2502 Uptime  \u2502 Restarts \u2502 Health \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 0  \u2502 web-api     \u2502 \ud83d\udfe2     \u2502 123 \u2502 3000 \u2502 2.5%\u2502 45.2MB \u2502 2h 15m  \u2502 0        \u2502 \u2705     \u2502\r\n\u2502 1  \u2502 worker      \u2502 \ud83d\udfe2     \u2502 124 \u2502 -    \u2502 1.8%\u2502 32.1MB \u2502 1h 30m  \u2502 1        \u2502 \u26a0\ufe0f     \u2502\r\n\u2502 2  \u2502 processor   \u2502 \ud83d\udfe1     \u2502 125 \u2502 8000 \u2502 0.1%\u2502 28.5MB \u2502 45m     \u2502 2        \u2502 \u2705     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"System Overview:\r\nCPU Usage: 15.2% | Memory: 2.1GB/8.0GB (26%) | Load: 0.85 | Uptime: 5d 12h\n"})}),"\n",(0,i.jsx)(n.h3,{id:"status-indicators",children:"Status Indicators"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process Status Colors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udfe2 ",(0,i.jsx)(n.strong,{children:"Online"})," - Process running normally"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd34 ",(0,i.jsx)(n.strong,{children:"Stopped"})," - Process not running"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udfe1 ",(0,i.jsx)(n.strong,{children:"Starting"})," - Process starting up"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udfe0 ",(0,i.jsx)(n.strong,{children:"Stopping"})," - Process shutting down"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd35 ",(0,i.jsx)(n.strong,{children:"Restarting"})," - Process restarting"]}),"\n",(0,i.jsxs)(n.li,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Errored"})," - Process crashed or failed"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Health Status Indicators:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Healthy"})," - All health checks passing"]}),"\n",(0,i.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Warning"})," - Some health checks failing"]}),"\n",(0,i.jsxs)(n.li,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Unhealthy"})," - Health checks failed"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2753 ",(0,i.jsx)(n.strong,{children:"Unknown"})," - No health checks configured"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"metrics-collection",children:"Metrics Collection"}),"\n",(0,i.jsx)(n.h3,{id:"process-metrics",children:"Process Metrics"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon collects detailed metrics for each process:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Metric"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Source"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"CPU Usage"})}),(0,i.jsx)(n.td,{children:"Percentage of CPU time used"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"sysinfo"})," crate"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Memory (RSS)"})}),(0,i.jsx)(n.td,{children:"Resident Set Size in MB"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"sysinfo"})," crate"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Process Uptime"})}),(0,i.jsx)(n.td,{children:"Time since process started"}),(0,i.jsx)(n.td,{children:"Process start time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Restart Count"})}),(0,i.jsx)(n.td,{children:"Number of times restarted"}),(0,i.jsx)(n.td,{children:"PMDaemon tracking"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PID"})}),(0,i.jsx)(n.td,{children:"System process identifier"}),(0,i.jsx)(n.td,{children:"Process spawn"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Port"})}),(0,i.jsx)(n.td,{children:"Assigned port number(s)"}),(0,i.jsx)(n.td,{children:"PMDaemon port management"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Health Status"})}),(0,i.jsx)(n.td,{children:"Health check results"}),(0,i.jsx)(n.td,{children:"Health check system"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"system-metrics",children:"System Metrics"}),"\n",(0,i.jsx)(n.p,{children:"System-wide metrics provide context:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Metric"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"System CPU"})}),(0,i.jsx)(n.td,{children:"Overall CPU usage percentage"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"System Memory"})}),(0,i.jsx)(n.td,{children:"Total memory usage and available"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Load Average"})}),(0,i.jsx)(n.td,{children:"System load (1, 5, 15 minute averages)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"System Uptime"})}),(0,i.jsx)(n.td,{children:"How long the system has been running"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"metric-history",children:"Metric History"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon maintains metric history for analysis:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View process information with metric history\r\npmdaemon info web-api\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Process Metrics:\r\n  Current:\r\n    CPU: 2.5%\r\n    Memory: 45.2MB\r\n    Uptime: 2h 15m\r\n  Averages (last hour):\r\n    CPU: 3.1%\r\n    Memory: 42.8MB\r\n  Peak Values:\r\n    CPU: 15.2% (at 14:23)\r\n    Memory: 67.1MB (at 13:45)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configurable-update-intervals",children:"Configurable Update Intervals"}),"\n",(0,i.jsx)(n.h3,{id:"performance-vs-responsiveness",children:"Performance vs Responsiveness"}),"\n",(0,i.jsx)(n.p,{children:"Choose update intervals based on your needs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# High-frequency monitoring (development/debugging)\r\npmdaemon monit --interval 1s    # Very responsive, higher CPU usage\r\n\r\n# Balanced monitoring (general use)\r\npmdaemon monit --interval 2s    # Good balance (default)\r\n\r\n# Low-frequency monitoring (production)\r\npmdaemon monit --interval 10s   # Lower overhead, less responsive\r\n\r\n# Very low frequency (background monitoring)\r\npmdaemon monit --interval 1m    # Minimal overhead\n"})}),"\n",(0,i.jsx)(n.h3,{id:"library-usage",children:"Library Usage"}),"\n",(0,i.jsx)(n.p,{children:"When using PMDaemon as a library, you can configure monitoring intervals:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"use pmdaemon::ProcessManager;\r\nuse std::time::Duration;\r\n\r\n#[tokio::main]\r\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\r\n    let mut manager = ProcessManager::new().await?;\r\n    \r\n    // Start monitoring with custom interval\r\n    manager.monitor_with_interval(Duration::from_secs(5)).await?;\r\n    \r\n    Ok(())\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"process-information",children:"Process Information"}),"\n",(0,i.jsx)(n.h3,{id:"detailed-process-view",children:"Detailed Process View"}),"\n",(0,i.jsx)(n.p,{children:"Get comprehensive information about a specific process:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon info web-api\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'Process Information:\r\n  Basic:\r\n    Name: web-api\r\n    ID: 0\r\n    Status: Online\r\n    PID: 1234\r\n    Port: 3000\r\n    \r\n  Configuration:\r\n    Script: node\r\n    Args: ["server.js"]\r\n    Working Directory: /app\r\n    Environment: NODE_ENV=production\r\n    \r\n  Runtime:\r\n    CPU Usage: 2.5%\r\n    Memory Usage: 45.2MB\r\n    Uptime: 2h 15m 30s\r\n    Restart Count: 0\r\n    \r\n  Health Check:\r\n    Type: HTTP\r\n    URL: http://localhost:3000/health\r\n    Status: Healthy\r\n    Last Check: 2024-01-15 14:30:25\r\n    Success Rate: 98.5%\r\n    \r\n  Logs:\r\n    Stdout: /var/log/pmdaemon/web-api-0-out.log\r\n    Stderr: /var/log/pmdaemon/web-api-0-err.log\r\n    PID File: /var/run/pmdaemon/web-api-0.pid\n'})}),"\n",(0,i.jsx)(n.h3,{id:"process-list",children:"Process List"}),"\n",(0,i.jsx)(n.p,{children:"View all processes with key metrics:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon list\n"})}),"\n",(0,i.jsx)(n.p,{children:"The list command provides a snapshot of all processes with their current status and key metrics."}),"\n",(0,i.jsx)(n.h2,{id:"log-monitoring",children:"Log Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"view-process-logs",children:"View Process Logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View recent logs\r\npmdaemon logs web-api\r\n\r\n# View specific number of lines\r\npmdaemon logs web-api --lines 50\r\n\r\n# Follow logs in real-time\r\npmdaemon logs web-api --follow\r\n\r\n# View logs with timestamps\r\npmdaemon logs web-api --timestamps\n"})}),"\n",(0,i.jsx)(n.h3,{id:"log-file-management",children:"Log File Management"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon automatically manages log files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stdout logs"}),": ",(0,i.jsx)(n.code,{children:"{name}-{instance}-out.log"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stderr logs"}),": ",(0,i.jsx)(n.code,{children:"{name}-{instance}-err.log"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic rotation"}),": Prevents logs from growing too large"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structured naming"}),": Easy to identify logs for specific processes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"web-based-monitoring",children:"Web-based Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"web-interface",children:"Web Interface"}),"\n",(0,i.jsx)(n.p,{children:"Start the web monitoring server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start web server on default port (9615)\r\npmdaemon web\r\n\r\n# Custom port and host\r\npmdaemon web --port 8080 --host 0.0.0.0\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Access the web interface at ",(0,i.jsx)(n.code,{children:"http://localhost:9615"})," for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Real-time process monitoring"}),"\n",(0,i.jsx)(n.li,{children:"Interactive process management"}),"\n",(0,i.jsx)(n.li,{children:"System metrics dashboard"}),"\n",(0,i.jsx)(n.li,{children:"Log viewing and searching"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rest-api-monitoring",children:"REST API Monitoring"}),"\n",(0,i.jsx)(n.p,{children:"Get monitoring data via REST API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Get all processes with metrics\r\ncurl http://localhost:9615/api/processes\r\n\r\n# Get system metrics\r\ncurl http://localhost:9615/api/system\r\n\r\n# Get specific process information\r\ncurl http://localhost:9615/api/processes/web-api\r\n\r\n# Get process logs\r\ncurl http://localhost:9615/api/logs/web-api?lines=100\n"})}),"\n",(0,i.jsx)(n.h3,{id:"websocket-real-time-updates",children:"WebSocket Real-time Updates"}),"\n",(0,i.jsx)(n.p,{children:"Connect to WebSocket for live updates:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Connect with wscat\r\nwscat -c ws://localhost:9615/ws\n"})}),"\n",(0,i.jsx)(n.p,{children:"Receive real-time updates for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process status changes"}),"\n",(0,i.jsx)(n.li,{children:"Metric updates"}),"\n",(0,i.jsx)(n.li,{children:"Health check results"}),"\n",(0,i.jsx)(n.li,{children:"System metrics"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-overhead",children:"Monitoring Overhead"}),"\n",(0,i.jsx)(n.p,{children:"Different intervals have different performance impacts:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Interval"}),(0,i.jsx)(n.th,{children:"CPU Impact"}),(0,i.jsx)(n.th,{children:"Memory Impact"}),(0,i.jsx)(n.th,{children:"Use Case"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1s"}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Development, debugging"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2s"}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"General monitoring"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"5s"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Production monitoring"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"30s+"}),(0,i.jsx)(n.td,{children:"Minimal"}),(0,i.jsx)(n.td,{children:"Minimal"}),(0,i.jsx)(n.td,{children:"Background monitoring"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"optimization-tips",children:"Optimization Tips"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use appropriate intervals"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Development\r\npmdaemon monit --interval 1s\r\n\r\n# Production\r\npmdaemon monit --interval 5s\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Monitor selectively"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Monitor specific processes only\r\npmdaemon info critical-service\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use web interface for continuous monitoring"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start web server for dashboard\r\npmdaemon web --port 9615\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"alerting-and-notifications",children:"Alerting and Notifications"}),"\n",(0,i.jsx)(n.h3,{id:"built-in-alerting",children:"Built-in Alerting"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon provides built-in alerting through:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Health check failures"})," - Automatic restart on health failures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory limit exceeded"})," - Restart when memory limits are breached"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process crashes"})," - Automatic restart with configurable limits"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"custom-alerting",children:"Custom Alerting"}),"\n",(0,i.jsx)(n.p,{children:"Integrate with external alerting systems:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Monitor via script\r\n#!/bin/bash\r\nwhile true; do\r\n    STATUS=$(pmdaemon list --format json | jq -r \'.processes[] | select(.name=="critical-service") | .status\')\r\n    if [ "$STATUS" != "online" ]; then\r\n        # Send alert (email, Slack, etc.)\r\n        send_alert "Critical service is down: $STATUS"\r\n    fi\r\n    sleep 30\r\ndone\n'})}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-best-practices",children:"Monitoring Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-choose-appropriate-intervals",children:"1. Choose Appropriate Intervals"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Critical services - frequent monitoring\r\npmdaemon monit --interval 2s\r\n\r\n# Background services - less frequent\r\npmdaemon monit --interval 30s\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-monitor-key-metrics",children:"2. Monitor Key Metrics"}),"\n",(0,i.jsx)(n.p,{children:"Focus on metrics that matter:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU usage"})," - Detect performance issues"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory usage"})," - Prevent memory leaks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Restart count"})," - Identify unstable processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Health status"})," - Ensure functionality"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-set-up-proper-logging",children:"3. Set Up Proper Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Ensure logs are captured\r\npmdaemon start "node server.js" \\\r\n  --name web-api \\\r\n  --out-file /var/log/web-api.out \\\r\n  --error-file /var/log/web-api.err\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-health-checks",children:"4. Use Health Checks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Combine monitoring with health checks\r\npmdaemon start "node api.js" \\\r\n  --name api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --health-check-interval 30s\n'})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-monitoring",children:"Troubleshooting Monitoring"}),"\n",(0,i.jsx)(n.h3,{id:"high-cpu-usage-in-monitoring",children:"High CPU Usage in Monitoring"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Reduce monitoring frequency\r\npmdaemon monit --interval 10s\r\n\r\n# Check system load\r\npmdaemon monit  # Look at system CPU usage\n"})}),"\n",(0,i.jsx)(n.h3,{id:"missing-metrics",children:"Missing Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify process is running\r\npmdaemon list\r\n\r\n# Check process permissions\r\npmdaemon info process-name\r\n\r\n# Restart PMDaemon if needed\r\npmdaemon restart process-name\n"})}),"\n",(0,i.jsx)(n.h3,{id:"inaccurate-metrics",children:"Inaccurate Metrics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify system tools are available\r\nwhich ps htop\r\n\r\n# Check PMDaemon version\r\npmdaemon --version\r\n\r\n# Review logs for errors\r\npmdaemon logs process-name\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/health-checks",children:"Health Checks"})})," - Set up health monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/web-api",children:"Web API"})})," - Access monitoring via API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/advanced/performance-tuning",children:"Performance Tuning"})})," - Optimize monitoring performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/advanced/troubleshooting",children:"Troubleshooting"})})," - Solve monitoring issues"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);