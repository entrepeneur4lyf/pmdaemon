"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[8830],{6735:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"features/web-api","title":"Web API","description":"PMDaemon provides a comprehensive REST API and real-time WebSocket interface for remote process management and monitoring. Built on the high-performance Axum web framework, it offers PM2-compatible endpoints with additional advanced features.","source":"@site/docs/features/web-api.md","sourceDirName":"features","slug":"/features/web-api","permalink":"/pmdaemon/docs/features/web-api","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/features/web-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Monitoring","permalink":"/pmdaemon/docs/features/monitoring"},"next":{"title":"Configuration","permalink":"/pmdaemon/docs/features/configuration"}}');var t=n(4848),a=n(8453);const i={},c="Web API",l={},o=[{value:"Overview",id:"overview",level:2},{value:"Starting the Web Server",id:"starting-the-web-server",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"REST API Endpoints",id:"rest-api-endpoints",level:2},{value:"Process Management",id:"process-management",level:3},{value:"List All Processes",id:"list-all-processes",level:4},{value:"Get Process Details",id:"get-process-details",level:4},{value:"Start a Process",id:"start-a-process",level:4},{value:"Stop a Process",id:"stop-a-process",level:4},{value:"Restart a Process",id:"restart-a-process",level:4},{value:"System Information",id:"system-information",level:3},{value:"Get System Metrics",id:"get-system-metrics",level:4},{value:"Log Management",id:"log-management",level:3},{value:"Get Process Logs",id:"get-process-logs",level:4},{value:"Health Checks",id:"health-checks",level:3},{value:"Get Process Health Status",id:"get-process-health-status",level:4},{value:"WebSocket API",id:"websocket-api",level:2},{value:"Connection",id:"connection",level:3},{value:"Message Types",id:"message-types",level:3},{value:"Process Status Updates",id:"process-status-updates",level:4},{value:"System Metrics Updates",id:"system-metrics-updates",level:4},{value:"Health Check Updates",id:"health-check-updates",level:4},{value:"Process Events",id:"process-events",level:4},{value:"Client Examples",id:"client-examples",level:2},{value:"JavaScript/Node.js",id:"javascriptnodejs",level:3},{value:"Python",id:"python",level:3},{value:"cURL Examples",id:"curl-examples",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"HTTP Status Codes",id:"http-status-codes",level:3},{value:"Error Response Format",id:"error-response-format",level:3},{value:"Security Features",id:"security-features",level:2},{value:"CORS Support",id:"cors-support",level:3},{value:"Security Headers",id:"security-headers",level:3},{value:"Authentication (Future)",id:"authentication-future",level:3},{value:"Performance",id:"performance",level:2},{value:"Benchmarks",id:"benchmarks",level:3},{value:"Optimization Tips",id:"optimization-tips",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"web-api",children:"Web API"})}),"\n",(0,t.jsxs)(s.p,{children:["PMDaemon provides a ",(0,t.jsx)(s.strong,{children:"comprehensive REST API"})," and ",(0,t.jsx)(s.strong,{children:"real-time WebSocket interface"})," for remote process management and monitoring. Built on the high-performance Axum web framework, it offers PM2-compatible endpoints with additional advanced features."]}),"\n",(0,t.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"The Web API provides:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\ud83c\udf10 REST API"})," - Full process management via HTTP"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\u26a1 WebSocket support"})," - Real-time updates and monitoring"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\ud83d\udd12 Security features"})," - CORS support and security headers"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\ud83d\udcca System metrics"})," - CPU, memory, load average monitoring"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\ud83d\udcdd Log access"})," - Retrieve and stream process logs"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"\ud83d\udd04 PM2 compatibility"})," - Compatible JSON response format"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"starting-the-web-server",children:"Starting the Web Server"}),"\n",(0,t.jsx)(s.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Start on default port (9615) without authentication\npmdaemon web\n\n# With API key authentication (recommended for production)\npmdaemon web --api-key "your-secret-api-key"\n\n# Custom port and host with authentication\npmdaemon web --port 8080 --host 0.0.0.0 --api-key "$API_KEY"\n'})}),"\n",(0,t.jsx)(s.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Option"}),(0,t.jsx)(s.th,{children:"Default"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--port"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"9615"})}),(0,t.jsx)(s.td,{children:"Port to bind the web server"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--host"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"127.0.0.1"})}),(0,t.jsx)(s.td,{children:"Host address to bind"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"--api-key"})}),(0,t.jsx)(s.td,{children:"None"}),(0,t.jsx)(s.td,{children:"API key for authentication (optional)"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Local development (no authentication needed)\npmdaemon web --host 127.0.0.1\n\n# Production with authentication (recommended)\npmdaemon web --host 127.0.0.1 --api-key "$API_KEY"\n\n# Behind reverse proxy with SSL\npmdaemon web --host 127.0.0.1 --api-key "$API_KEY"\n# Use nginx/Apache as reverse proxy with HTTPS\n\n# Environment variable for API key\nexport PMDAEMON_API_KEY="your-secret-key"\npmdaemon web --host 0.0.0.0\n'})}),"\n",(0,t.jsx)(s.h2,{id:"rest-api-endpoints",children:"REST API Endpoints"}),"\n",(0,t.jsx)(s.h3,{id:"process-management",children:"Process Management"}),"\n",(0,t.jsx)(s.h4,{id:"list-all-processes",children:"List All Processes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"GET /api/processes\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "processes": [\n    {\n      "id": 0,\n      "name": "web-api",\n      "status": "online",\n      "pid": 1234,\n      "port": 3000,\n      "cpu": 2.5,\n      "memory": 47185920,\n      "uptime": 7890000,\n      "restarts": 0,\n      "health": "healthy"\n    }\n  ],\n  "total": 1\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"get-process-details",children:"Get Process Details"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"GET /api/processes/{name_or_id}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl http://localhost:9615/api/processes/web-api\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "id": 0,\n  "name": "web-api",\n  "status": "online",\n  "pid": 1234,\n  "port": 3000,\n  "cpu": 2.5,\n  "memory": 47185920,\n  "uptime": 7890000,\n  "restarts": 0,\n  "health": "healthy",\n  "config": {\n    "script": "node",\n    "args": ["server.js"],\n    "cwd": "/app",\n    "env": {\n      "NODE_ENV": "production",\n      "PORT": "3000"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"start-a-process",children:"Start a Process"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"POST /api/processes\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Request Body:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "name": "new-api",\n  "script": "node",\n  "args": ["app.js"],\n  "port": "3001",\n  "instances": 1,\n  "env": {\n    "NODE_ENV": "production"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process \'new-api\' started successfully",\n  "process": {\n    "id": 1,\n    "name": "new-api",\n    "status": "starting",\n    "pid": null,\n    "port": 3001\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"stop-a-process",children:"Stop a Process"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"DELETE /api/processes/{name_or_id}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -X DELETE http://localhost:9615/api/processes/web-api\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process \'web-api\' stopped successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"restart-a-process",children:"Restart a Process"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"POST /api/processes/{name_or_id}/restart\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Optional Request Body:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "port": "3002",\n  "instances": 2\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process \'web-api\' restarted successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"system-information",children:"System Information"}),"\n",(0,t.jsx)(s.h4,{id:"get-system-metrics",children:"Get System Metrics"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"GET /api/system\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "cpu": {\n    "usage": 15.2,\n    "cores": 8\n  },\n  "memory": {\n    "total": 8589934592,\n    "used": 2147483648,\n    "available": 6442450944,\n    "usage_percent": 25.0\n  },\n  "load": {\n    "one": 0.85,\n    "five": 1.2,\n    "fifteen": 0.9\n  },\n  "uptime": 432000,\n  "timestamp": "2024-01-15T14:30:25Z"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"log-management",children:"Log Management"}),"\n",(0,t.jsx)(s.h4,{id:"get-process-logs",children:"Get Process Logs"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"GET /api/logs/{name_or_id}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Query Parameters:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"lines"})," - Number of lines to retrieve (default: 20)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"type"})," - Log type: ",(0,t.jsx)(s.code,{children:"stdout"}),", ",(0,t.jsx)(s.code,{children:"stderr"}),", or ",(0,t.jsx)(s.code,{children:"all"})," (default: all)"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'curl "http://localhost:9615/api/logs/web-api?lines=50&type=stdout"\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "logs": [\n    {\n      "timestamp": "2024-01-15T14:30:25Z",\n      "type": "stdout",\n      "message": "Server started on port 3000"\n    },\n    {\n      "timestamp": "2024-01-15T14:30:26Z", \n      "type": "stdout",\n      "message": "Database connected successfully"\n    }\n  ],\n  "total_lines": 50,\n  "process": "web-api"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,t.jsx)(s.h4,{id:"get-process-health-status",children:"Get Process Health Status"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"GET /api/processes/{name_or_id}/health\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Response:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "process": "web-api",\n  "health": {\n    "status": "healthy",\n    "last_check": "2024-01-15T14:30:25Z",\n    "check_type": "http",\n    "url": "http://localhost:3000/health",\n    "success_rate": 98.5,\n    "total_checks": 200,\n    "successful_checks": 197\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"websocket-api",children:"WebSocket API"}),"\n",(0,t.jsx)(s.h3,{id:"connection",children:"Connection"}),"\n",(0,t.jsx)(s.p,{children:"Connect to the WebSocket endpoint for real-time updates:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const ws = new WebSocket('ws://localhost:9615/ws');\n\nws.onopen = function() {\n    console.log('Connected to PMDaemon WebSocket');\n};\n\nws.onmessage = function(event) {\n    const data = JSON.parse(event.data);\n    console.log('Received update:', data);\n};\n"})}),"\n",(0,t.jsx)(s.h3,{id:"message-types",children:"Message Types"}),"\n",(0,t.jsx)(s.h4,{id:"process-status-updates",children:"Process Status Updates"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "type": "process_update",\n  "data": {\n    "id": 0,\n    "name": "web-api",\n    "status": "online",\n    "pid": 1234,\n    "cpu": 2.5,\n    "memory": 47185920,\n    "timestamp": "2024-01-15T14:30:25Z"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"system-metrics-updates",children:"System Metrics Updates"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "type": "system_update",\n  "data": {\n    "cpu": 15.2,\n    "memory": {\n      "usage_percent": 25.0,\n      "used": 2147483648\n    },\n    "load": {\n      "one": 0.85\n    },\n    "timestamp": "2024-01-15T14:30:25Z"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"health-check-updates",children:"Health Check Updates"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "type": "health_update",\n  "data": {\n    "process": "web-api",\n    "status": "healthy",\n    "timestamp": "2024-01-15T14:30:25Z"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"process-events",children:"Process Events"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "type": "process_event",\n  "data": {\n    "event": "started",\n    "process": "new-api",\n    "timestamp": "2024-01-15T14:30:25Z"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"client-examples",children:"Client Examples"}),"\n",(0,t.jsx)(s.h3,{id:"javascriptnodejs",children:"JavaScript/Node.js"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// REST API client\nconst axios = require('axios');\n\nclass PMDaemonClient {\n  constructor(baseURL = 'http://localhost:9615') {\n    this.api = axios.create({ baseURL });\n  }\n\n  async listProcesses() {\n    const response = await this.api.get('/api/processes');\n    return response.data;\n  }\n\n  async startProcess(config) {\n    const response = await this.api.post('/api/processes', config);\n    return response.data;\n  }\n\n  async stopProcess(nameOrId) {\n    const response = await this.api.delete(`/api/processes/${nameOrId}`);\n    return response.data;\n  }\n\n  async getSystemMetrics() {\n    const response = await this.api.get('/api/system');\n    return response.data;\n  }\n}\n\n// Usage\nconst client = new PMDaemonClient();\nconst processes = await client.listProcesses();\nconsole.log(processes);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"python",children:"Python"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"import requests\nimport websocket\nimport json\n\nclass PMDaemonClient:\n    def __init__(self, base_url='http://localhost:9615'):\n        self.base_url = base_url\n\n    def list_processes(self):\n        response = requests.get(f'{self.base_url}/api/processes')\n        return response.json()\n\n    def start_process(self, config):\n        response = requests.post(f'{self.base_url}/api/processes', json=config)\n        return response.json()\n\n    def stop_process(self, name_or_id):\n        response = requests.delete(f'{self.base_url}/api/processes/{name_or_id}')\n        return response.json()\n\n    def get_system_metrics(self):\n        response = requests.get(f'{self.base_url}/api/system')\n        return response.json()\n\n# WebSocket client\ndef on_message(ws, message):\n    data = json.loads(message)\n    print(f\"Received: {data}\")\n\ndef on_error(ws, error):\n    print(f\"Error: {error}\")\n\ndef on_close(ws, close_status_code, close_msg):\n    print(\"Connection closed\")\n\n# Connect to WebSocket\nws = websocket.WebSocketApp(\"ws://localhost:9615/ws\",\n                          on_message=on_message,\n                          on_error=on_error,\n                          on_close=on_close)\nws.run_forever()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"curl-examples",children:"cURL Examples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# List all processes\ncurl http://localhost:9615/api/processes\n\n# Start a new process\ncurl -X POST http://localhost:9615/api/processes \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "test-api",\n    "script": "node",\n    "args": ["server.js"],\n    "port": "3000"\n  }\'\n\n# Get system metrics\ncurl http://localhost:9615/api/system\n\n# Get process logs\ncurl "http://localhost:9615/api/logs/test-api?lines=100"\n\n# Stop a process\ncurl -X DELETE http://localhost:9615/api/processes/test-api\n'})}),"\n",(0,t.jsx)(s.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(s.h3,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Code"}),(0,t.jsx)(s.th,{children:"Meaning"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"200"}),(0,t.jsx)(s.td,{children:"OK"}),(0,t.jsx)(s.td,{children:"Request successful"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"201"}),(0,t.jsx)(s.td,{children:"Created"}),(0,t.jsx)(s.td,{children:"Process created successfully"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"Bad Request"}),(0,t.jsx)(s.td,{children:"Invalid request parameters"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"404"}),(0,t.jsx)(s.td,{children:"Not Found"}),(0,t.jsx)(s.td,{children:"Process not found"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"409"}),(0,t.jsx)(s.td,{children:"Conflict"}),(0,t.jsx)(s.td,{children:"Process name already exists"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"500"}),(0,t.jsx)(s.td,{children:"Internal Server Error"}),(0,t.jsx)(s.td,{children:"Server error"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"error-response-format",children:"Error Response Format"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PROCESS_NOT_FOUND",\n    "message": "Process \'nonexistent\' not found",\n    "details": {\n      "requested_process": "nonexistent",\n      "available_processes": ["web-api", "worker"]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"security-features",children:"Security Features"}),"\n",(0,t.jsx)(s.h3,{id:"cors-support",children:"CORS Support"}),"\n",(0,t.jsx)(s.p,{children:"PMDaemon includes built-in CORS support for web applications:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"Access-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, DELETE, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, Authorization\n"})}),"\n",(0,t.jsx)(s.h3,{id:"security-headers",children:"Security Headers"}),"\n",(0,t.jsx)(s.p,{children:"Standard security headers are included:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-http",children:"X-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n"})}),"\n",(0,t.jsx)(s.h3,{id:"authentication-future",children:"Authentication (Future)"}),"\n",(0,t.jsx)(s.p,{children:"Authentication features planned for future releases:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"API key authentication"}),"\n",(0,t.jsx)(s.li,{children:"JWT token support"}),"\n",(0,t.jsx)(s.li,{children:"Role-based access control"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"performance",children:"Performance"}),"\n",(0,t.jsx)(s.h3,{id:"benchmarks",children:"Benchmarks"}),"\n",(0,t.jsx)(s.p,{children:"The Axum-based web server provides excellent performance:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Concurrent connections"}),": 10,000+"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Request throughput"}),": 50,000+ req/s"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Memory usage"}),": Low overhead"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"WebSocket connections"}),": 1,000+ concurrent"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"optimization-tips",children:"Optimization Tips"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Use WebSocket for real-time data"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// Efficient for live updates\nconst ws = new WebSocket('ws://localhost:9615/ws');\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Batch API requests"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// Get all data in one request\nconst [processes, system] = await Promise.all([\n  client.listProcesses(),\n  client.getSystemMetrics()\n]);\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Limit log retrieval"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Don\'t retrieve too many log lines\ncurl "http://localhost:9615/api/logs/app?lines=100"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/api/websocket-api",children:"WebSocket API"})})," - Detailed WebSocket documentation"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/api/api-examples",children:"API Examples"})})," - More client examples"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/advanced/security",children:"Security"})})," - Security best practices"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/examples/integration-examples",children:"Integration Examples"})})," - Framework integration"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var r=n(6540);const t={},a=r.createContext(t);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);