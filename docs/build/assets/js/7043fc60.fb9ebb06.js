"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[3686],{3458:e=>{e.exports=JSON.parse('{"permalink":"/pmdaemon/changelog/v0.1.0","source":"@site/changelog/2025-05-25-v0.1.0.md","title":"PMDaemon v0.1.0 - Initial Release","description":"We\'re thrilled to announce the initial release of PMDaemon, a high-performance process manager built in Rust that takes inspiration from PM2 while adding innovative features that exceed the original.","date":"2025-05-25T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/pmdaemon/changelog/tags/release"},{"inline":true,"label":"initial","permalink":"/pmdaemon/changelog/tags/initial"},{"inline":true,"label":"process-manager","permalink":"/pmdaemon/changelog/tags/process-manager"},{"inline":true,"label":"rust","permalink":"/pmdaemon/changelog/tags/rust"},{"inline":true,"label":"pm2","permalink":"/pmdaemon/changelog/tags/pm-2"}],"hasTruncateMarker":true,"authors":[{"name":"Shawn McAllister","title":"Lead Developer","url":"https://github.com/entrepeneur4lyf","imageURL":"https://github.com/entrepeneur4lyf.png","key":"shawn","page":null}],"frontMatter":{"slug":"v0.1.0","title":"PMDaemon v0.1.0 - Initial Release","authors":["shawn"],"tags":["release","initial","process-manager","rust","pm2"],"date":"2025-05-25T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"PMDaemon v0.1.1 - Enhanced Delete Operations, Health Checks & Monitoring","permalink":"/pmdaemon/changelog/v0.1.1"}}')},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},9061:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var i=s(3458),r=s(4848),t=s(8453);const a={slug:"v0.1.0",title:"PMDaemon v0.1.0 - Initial Release",authors:["shawn"],tags:["release","initial","process-manager","rust","pm2"],date:new Date("2025-05-25T00:00:00.000Z")},l="PMDaemon v0.1.0 - Initial Release",o={authorsImageUrls:[void 0]},c=[{value:"\ud83c\udfaf Why PMDaemon?",id:"-why-pmdaemon",level:2},{value:"\ud83d\ude80 Core Features",id:"-core-features",level:2},{value:"Complete Process Management",id:"complete-process-management",level:3},{value:"Advanced Port Management (Beyond PM2)",id:"advanced-port-management-beyond-pm2",level:3},{value:"Real-time Monitoring",id:"real-time-monitoring",level:3},{value:"Professional CLI Interface",id:"professional-cli-interface",level:3},{value:"Web API &amp; WebSocket Support",id:"web-api--websocket-support",level:3},{value:"Robust Log Management",id:"robust-log-management",level:3},{value:"\ud83c\udfd7\ufe0f Technical Excellence",id:"\ufe0f-technical-excellence",level:2},{value:"Built with Rust",id:"built-with-rust",level:3},{value:"Modern Architecture",id:"modern-architecture",level:3},{value:"Comprehensive Testing",id:"comprehensive-testing",level:3},{value:"\ud83d\ude80 Getting Started",id:"-getting-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Quick Start",id:"quick-start",level:3},{value:"Migration from PM2",id:"migration-from-pm2",level:3},{value:"\ud83d\uddfa\ufe0f What&#39;s Next",id:"\ufe0f-whats-next",level:2},{value:"\ud83d\ude4f Community",id:"-community",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"We're thrilled to announce the initial release of PMDaemon, a high-performance process manager built in Rust that takes inspiration from PM2 while adding innovative features that exceed the original."}),"\n",(0,r.jsx)(n.h2,{id:"-why-pmdaemon",children:"\ud83c\udfaf Why PMDaemon?"}),"\n",(0,r.jsx)(n.p,{children:"PMDaemon was created to address the limitations of existing process managers while providing a familiar interface for PM2 users. Built with Rust, it offers memory safety, blazing performance, and advanced features not available in other process managers."}),"\n",(0,r.jsx)(n.h2,{id:"-core-features",children:"\ud83d\ude80 Core Features"}),"\n",(0,r.jsx)(n.h3,{id:"complete-process-management",children:"Complete Process Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle management"}),": Full control over process start, stop, restart, reload, and delete operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process clustering"}),": Automatic load balancing across multiple instances"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Auto-restart on crash"}),": Configurable limits and intelligent restart logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful shutdown"}),": Proper signal handling (SIGTERM/SIGINT) for clean process termination"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration persistence"}),": Multi-session support with persistent process configurations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-port-management-beyond-pm2",children:"Advanced Port Management (Beyond PM2)"}),"\n",(0,r.jsx)(n.p,{children:"One of PMDaemon's standout features is its sophisticated port management system:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Port range distribution"}),": Automatically distribute ports across cluster instances (",(0,r.jsx)(n.code,{children:"--port 3000-3003"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Auto-assignment from ranges"}),": Smart port allocation (",(0,r.jsx)(n.code,{children:"--port auto:5000-5100"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Built-in conflict detection"}),": Prevents port conflicts before they happen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Runtime port overrides"}),": Change ports without modifying configuration files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Port visibility"}),": See assigned ports in process listings"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start a cluster with automatic port distribution\r\npmdaemon start app.js --instances 4 --port 3000-3003\r\n\r\n# Auto-assign ports from a range\r\npmdaemon start api.js --port auto:8000-8100\n"})}),"\n",(0,r.jsx)(n.h3,{id:"real-time-monitoring",children:"Real-time Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"System metrics"}),": CPU, memory, uptime tracking with system-wide statistics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load average monitoring"}),": Track system load across 1, 5, and 15-minute intervals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory limit enforcement"}),": Automatic restart when processes exceed memory limits"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process health checks"}),": Built-in health monitoring with auto-restart capabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"professional-cli-interface",children:"Professional CLI Interface"}),"\n",(0,r.jsx)(n.p,{children:"PMDaemon provides a familiar yet enhanced command-line experience:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PM2-compatible commands"}),": All the commands you know and love"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced display"}),": Color-coded statuses and professional table formatting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rich monitoring"}),": Real-time process monitoring with system overview"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Familiar PM2-style commands\r\npmdaemon start app.js --name my-app --instances 2\r\npmdaemon list\r\npmdaemon monit\r\npmdaemon logs my-app --follow\n"})}),"\n",(0,r.jsx)(n.h3,{id:"web-api--websocket-support",children:"Web API & WebSocket Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REST API"}),": Complete process management via HTTP endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PM2-compatible responses"}),": Drop-in replacement for PM2 API consumers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time updates"}),": WebSocket support for live process monitoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security"}),": CORS support and proper security headers"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"robust-log-management",children:"Robust Log Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Separate streams"}),": Individual stdout/stderr file handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PID file management"}),": Proper process tracking and cleanup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log viewing"}),": Built-in log viewing and following capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful handling"}),": Robust error handling for missing or corrupted log files"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-technical-excellence",children:"\ud83c\udfd7\ufe0f Technical Excellence"}),"\n",(0,r.jsx)(n.h3,{id:"built-with-rust",children:"Built with Rust"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory safety"}),": Zero-cost abstractions without garbage collection overhead"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Native performance with minimal resource usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Concurrency"}),": Async/await architecture using Tokio for efficient I/O"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modern-architecture",children:"Modern Architecture"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web server"}),": Powered by Axum for high-performance HTTP handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"System monitoring"}),": Leverages sysinfo for cross-platform system metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-platform"}),": Full support for Linux, macOS, and Windows"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"comprehensive-testing",children:"Comprehensive Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"158 comprehensive tests"}),": Unit, integration, end-to-end, and documentation tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete documentation"}),": Full Rust documentation with examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage guides"}),": Comprehensive examples and migration guides"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-getting-started",children:"\ud83d\ude80 Getting Started"}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install from crates.io\r\ncargo install pmdaemon\r\n\r\n# Or build from source\r\ngit clone https://github.com/entrepeneur4lyf/pmdaemon.git\r\ncd pmdaemon\r\ncargo build --release\n"})}),"\n",(0,r.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start a simple application\r\npmdaemon start app.js --name my-app\r\n\r\n# Start a cluster with port management\r\npmdaemon start server.js --instances 4 --port 3000-3003\r\n\r\n# Monitor processes in real-time\r\npmdaemon monit\r\n\r\n# View and follow logs\r\npmdaemon logs my-app --follow\n"})}),"\n",(0,r.jsx)(n.h3,{id:"migration-from-pm2",children:"Migration from PM2"}),"\n",(0,r.jsxs)(n.p,{children:["PMDaemon is designed to be a drop-in replacement for most PM2 use cases. Check out our ",(0,r.jsx)(n.a,{href:"/docs/getting-started/migration-from-pm2",children:"migration guide"})," for detailed instructions."]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-whats-next",children:"\ud83d\uddfa\ufe0f What's Next"}),"\n",(0,r.jsx)(n.p,{children:"This initial release establishes PMDaemon as a robust, production-ready process manager. Future releases will continue to expand capabilities while maintaining the familiar interface that makes PMDaemon easy to adopt."}),"\n",(0,r.jsx)(n.h2,{id:"-community",children:"\ud83d\ude4f Community"}),"\n",(0,r.jsx)(n.p,{children:"We're excited to see what the community builds with PMDaemon. Join us:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GitHub"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon",children:"entrepeneur4lyf/pmdaemon"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Issues"}),": Report bugs and request features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Discussions"}),": Share your use cases and get help"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Release"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/releases/tag/v0.1.0",children:"v0.1.0"})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);