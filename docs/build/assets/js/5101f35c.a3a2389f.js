"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[9409],{8240:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"configuration/best-practices","title":"Configuration Best Practices","description":"This guide covers best practices for configuring PMDaemon ecosystem files, ensuring optimal performance, reliability, and maintainability across different environments.","source":"@site/docs/configuration/best-practices.md","sourceDirName":"configuration","slug":"/configuration/best-practices","permalink":"/pmdaemon/docs/configuration/best-practices","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/configuration/best-practices.md","tags":[],"version":"current","frontMatter":{}}');var s=r(4848),o=r(8453);const t={},a="Configuration Best Practices",l={},c=[{value:"General Configuration Principles",id:"general-configuration-principles",level:2},{value:"1. Keep It Simple",id:"1-keep-it-simple",level:3},{value:"2. Environment Parity",id:"2-environment-parity",level:3},{value:"3. Version Control",id:"3-version-control",level:3},{value:"File Organization",id:"file-organization",level:2},{value:"Directory Structure",id:"directory-structure",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"1. Instance Management",id:"1-instance-management",level:3},{value:"2. Memory Management",id:"2-memory-management",level:3},{value:"3. Resource Optimization",id:"3-resource-optimization",level:3},{value:"Reliability Configuration",id:"reliability-configuration",level:2},{value:"1. Restart Policies",id:"1-restart-policies",level:3},{value:"2. Health Checks",id:"2-health-checks",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"1. Environment Variables",id:"1-environment-variables",level:3},{value:"2. User and Permissions",id:"2-user-and-permissions",level:3},{value:"3. Network Security",id:"3-network-security",level:3},{value:"Logging Best Practices",id:"logging-best-practices",level:2},{value:"1. Log Configuration",id:"1-log-configuration",level:3},{value:"2. Log Rotation",id:"2-log-rotation",level:3},{value:"Monitoring Configuration",id:"monitoring-configuration",level:2},{value:"1. Basic Monitoring",id:"1-basic-monitoring",level:3},{value:"2. Advanced Monitoring",id:"2-advanced-monitoring",level:3},{value:"Configuration Templates",id:"configuration-templates",level:2},{value:"1. Web Application Template",id:"1-web-application-template",level:3},{value:"2. Worker Template",id:"2-worker-template",level:3},{value:"3. Microservice Template",id:"3-microservice-template",level:3},{value:"Validation and Testing",id:"validation-and-testing",level:2},{value:"1. Configuration Validation",id:"1-configuration-validation",level:3},{value:"2. Testing Scripts",id:"2-testing-scripts",level:3},{value:"Common Pitfalls to Avoid",id:"common-pitfalls-to-avoid",level:2},{value:"1. Configuration Issues",id:"1-configuration-issues",level:3},{value:"2. Performance Issues",id:"2-performance-issues",level:3},{value:"3. Security Issues",id:"3-security-issues",level:3},{value:"4. Monitoring Issues",id:"4-monitoring-issues",level:3},{value:"Migration Strategies",id:"migration-strategies",level:2},{value:"1. Configuration Updates",id:"1-configuration-updates",level:3},{value:"2. Rolling Updates",id:"2-rolling-updates",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"configuration-best-practices",children:"Configuration Best Practices"})}),"\n",(0,s.jsx)(e.p,{children:"This guide covers best practices for configuring PMDaemon ecosystem files, ensuring optimal performance, reliability, and maintainability across different environments."}),"\n",(0,s.jsx)(e.h2,{id:"general-configuration-principles",children:"General Configuration Principles"}),"\n",(0,s.jsx)(e.h3,{id:"1-keep-it-simple",children:"1. Keep It Simple"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Start with minimal configuration and add complexity as needed"}),"\n",(0,s.jsx)(e.li,{children:"Use defaults when possible"}),"\n",(0,s.jsx)(e.li,{children:"Document any non-obvious configurations"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"2-environment-parity",children:"2. Environment Parity"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Maintain similar configurations across environments"}),"\n",(0,s.jsx)(e.li,{children:"Use environment variables for differences"}),"\n",(0,s.jsx)(e.li,{children:"Test configurations in staging before production"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"3-version-control",children:"3. Version Control"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Store all configuration files in version control"}),"\n",(0,s.jsx)(e.li,{children:"Use meaningful commit messages for config changes"}),"\n",(0,s.jsx)(e.li,{children:"Tag configurations with release versions"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"file-organization",children:"File Organization"}),"\n",(0,s.jsx)(e.h3,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"config/\r\n\u251c\u2500\u2500 ecosystem.json              # Main configuration\r\n\u251c\u2500\u2500 ecosystem.dev.json          # Development overrides\r\n\u251c\u2500\u2500 ecosystem.staging.json      # Staging configuration\r\n\u251c\u2500\u2500 ecosystem.prod.json         # Production configuration\r\n\u251c\u2500\u2500 schemas/\r\n\u2502   \u251c\u2500\u2500 base.schema.json        # Base validation schema\r\n\u2502   \u251c\u2500\u2500 dev.schema.json         # Development schema\r\n\u2502   \u2514\u2500\u2500 prod.schema.json        # Production schema\r\n\u2514\u2500\u2500 templates/\r\n    \u251c\u2500\u2500 web-app.json            # Web application template\r\n    \u251c\u2500\u2500 worker.json             # Background worker template\r\n    \u2514\u2500\u2500 microservice.json       # Microservice template\n"})}),"\n",(0,s.jsx)(e.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "apps": [\r\n    {\r\n      "name": "myapp-web-prod",        // Format: {app}-{type}-{env}\r\n      "script": "dist/server.js",\r\n      "log_file": "/var/log/myapp/web.log",\r\n      "pid_file": "/var/run/myapp/web.pid"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(e.h3,{id:"1-instance-management",children:"1. Instance Management"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Development (Single Instance):"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "instances": 1,\r\n  "exec_mode": "fork"\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Production (Cluster Mode):"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "instances": "max",              // Use all CPU cores\r\n  "exec_mode": "cluster",\r\n  "kill_timeout": 5000,           // Graceful shutdown\r\n  "wait_ready": true              // Wait for ready signal\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Custom Scaling:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "instances": 4,                 // Specific instance count\r\n  "exec_mode": "cluster",\r\n  "increment_var": "PORT",        // Auto-increment PORT\r\n  "instance_var": "INSTANCE_ID"   // Inject instance ID\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-memory-management",children:"2. Memory Management"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Memory Limits:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "max_memory_restart": "1G",     // Restart if memory exceeds 1GB\r\n  "kill_timeout": 5000,           // Grace period for cleanup\r\n  "max_restarts": 3,              // Limit restart loops\r\n  "min_uptime": "10s"             // Minimum runtime before restart\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Memory Monitoring:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "monitoring": {\r\n    "memory_threshold": 85,       // Alert at 85% memory usage\r\n    "cpu_threshold": 80,          // Alert at 80% CPU usage\r\n    "check_interval": 30          // Check every 30 seconds\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-resource-optimization",children:"3. Resource Optimization"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"File System:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "watch": false,                 // Disable in production\r\n  "ignore_watch": [               // Ignore unnecessary files\r\n    "node_modules",\r\n    "*.log",\r\n    ".git",\r\n    "tmp"\r\n  ],\r\n  "watch_options": {\r\n    "ignored": /node_modules|\\.git/,\r\n    "persistent": true,\r\n    "ignoreInitial": true\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Network Optimization:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "port": {\r\n    "start": 3000,\r\n    "increment": 1,\r\n    "max": 3010\r\n  },\r\n  "health_check": {\r\n    "enabled": true,\r\n    "url": "http://localhost:3000/health",\r\n    "interval": 30,\r\n    "timeout": 5,\r\n    "retries": 3\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"reliability-configuration",children:"Reliability Configuration"}),"\n",(0,s.jsx)(e.h3,{id:"1-restart-policies",children:"1. Restart Policies"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Development (Lenient):"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "max_restarts": 15,\r\n  "min_uptime": "1s",\r\n  "restart_delay": 100,\r\n  "autorestart": true\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Production (Strict):"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "max_restarts": 3,\r\n  "min_uptime": "10s",\r\n  "restart_delay": 4000,\r\n  "autorestart": true,\r\n  "exponential_backoff_restart_delay": 150\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-health-checks",children:"2. Health Checks"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Basic Health Check:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "health_check": {\r\n    "enabled": true,\r\n    "url": "http://localhost:3000/health",\r\n    "interval": 30,\r\n    "timeout": 10,\r\n    "retries": 3\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Advanced Health Check:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "health_check": {\r\n    "enabled": true,\r\n    "url": "http://localhost:3000/health",\r\n    "interval": 30,\r\n    "timeout": 10,\r\n    "retries": 3,\r\n    "headers": {\r\n      "Authorization": "Bearer ${HEALTH_CHECK_TOKEN}"\r\n    },\r\n    "expected_status": [200, 201],\r\n    "expected_body": "OK"\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Graceful Shutdown:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "kill_timeout": 5000,           // 5 seconds for graceful shutdown\r\n  "shutdown_with_message": true,  // Send shutdown message\r\n  "wait_ready": true,             // Wait for ready signal\r\n  "listen_timeout": 3000          // Timeout for listen signal\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Error Recovery:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "max_restarts": 3,\r\n  "min_uptime": "10s",\r\n  "restart_delay": 4000,\r\n  "autorestart": true,\r\n  "crash_action": "restart",      // Action on crash: restart|stop|ignore\r\n  "pmx": false                    // Disable PMX if not needed\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,s.jsx)(e.h3,{id:"1-environment-variables",children:"1. Environment Variables"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Secure Configuration:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "env": {\r\n    "NODE_ENV": "production",\r\n    "PORT": "3000",\r\n    "DATABASE_URL": "${DATABASE_URL}",\r\n    "JWT_SECRET": "${JWT_SECRET}",\r\n    "API_KEY": "${API_KEY}"\r\n  },\r\n  "env_file": ".env.production"\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Secret Management:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "env": {\r\n    "DATABASE_PASSWORD_FILE": "/run/secrets/db_password",\r\n    "JWT_SECRET_FILE": "/run/secrets/jwt_secret"\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-user-and-permissions",children:"2. User and Permissions"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"User Configuration:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "user": "appuser",              // Run as specific user\r\n  "group": "appgroup",            // Run as specific group\r\n  "uid": 1000,                    // Specific UID\r\n  "gid": 1000                     // Specific GID\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"File Permissions:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "cwd": "/app",\r\n  "log_file": "/var/log/app/app.log",\r\n  "pid_file": "/var/run/app/app.pid",\r\n  "umask": "0022"                 // Set file creation mask\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-network-security",children:"3. Network Security"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Binding Configuration:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "env": {\r\n    "HOST": "127.0.0.1",          // Bind to localhost only\r\n    "PORT": "3000"\r\n  },\r\n  "instances": 1,                 // Single instance for security\r\n  "exec_mode": "fork"\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"logging-best-practices",children:"Logging Best Practices"}),"\n",(0,s.jsx)(e.h3,{id:"1-log-configuration",children:"1. Log Configuration"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Development Logging:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "log_file": "logs/app.log",\r\n  "error_file": "logs/error.log",\r\n  "out_file": "logs/out.log",\r\n  "log_date_format": "YYYY-MM-DD HH:mm:ss Z",\r\n  "merge_logs": false,\r\n  "log_type": "json"\r\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Production Logging:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "log_file": "/var/log/myapp/app.log",\r\n  "error_file": "/var/log/myapp/error.log",\r\n  "out_file": "/var/log/myapp/out.log",\r\n  "log_date_format": "YYYY-MM-DD HH:mm:ss Z",\r\n  "merge_logs": true,\r\n  "log_type": "json",\r\n  "log_options": {\r\n    "max_size": "10m",\r\n    "max_files": 5,\r\n    "tailable": true,\r\n    "zippedArchive": true\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-log-rotation",children:"2. Log Rotation"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "log_file": "/var/log/myapp/app.log",\r\n  "log_options": {\r\n    "max_size": "50m",            // Rotate when file reaches 50MB\r\n    "max_files": 10,              // Keep 10 old files\r\n    "tailable": true,             // Keep watching newest file\r\n    "zippedArchive": true         // Compress old files\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"monitoring-configuration",children:"Monitoring Configuration"}),"\n",(0,s.jsx)(e.h3,{id:"1-basic-monitoring",children:"1. Basic Monitoring"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "monitoring": {\r\n    "http": true,                 // Enable HTTP monitoring\r\n    "https": false,\r\n    "port": 9615,\r\n    "host": "localhost"\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-advanced-monitoring",children:"2. Advanced Monitoring"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "monitoring": {\r\n    "enabled": true,\r\n    "port": 9615,\r\n    "host": "0.0.0.0",\r\n    "auth": {\r\n      "username": "admin",\r\n      "password": "${MONITORING_PASSWORD}"\r\n    },\r\n    "metrics": {\r\n      "cpu": true,\r\n      "memory": true,\r\n      "disk": true,\r\n      "network": true\r\n    },\r\n    "alerts": {\r\n      "cpu_threshold": 80,\r\n      "memory_threshold": 85,\r\n      "disk_threshold": 90\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"configuration-templates",children:"Configuration Templates"}),"\n",(0,s.jsx)(e.h3,{id:"1-web-application-template",children:"1. Web Application Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "apps": [\r\n    {\r\n      "name": "${APP_NAME}-web",\r\n      "script": "${SCRIPT_PATH}",\r\n      "cwd": "${APP_ROOT}",\r\n      "instances": "${INSTANCES:-1}",\r\n      "exec_mode": "${EXEC_MODE:-fork}",\r\n      "env": {\r\n        "NODE_ENV": "${NODE_ENV}",\r\n        "PORT": "${PORT:-3000}",\r\n        "HOST": "${HOST:-localhost}"\r\n      },\r\n      "max_memory_restart": "${MAX_MEMORY:-500M}",\r\n      "max_restarts": "${MAX_RESTARTS:-3}",\r\n      "min_uptime": "${MIN_UPTIME:-10s}",\r\n      "health_check": {\r\n        "enabled": true,\r\n        "url": "http://${HOST:-localhost}:${PORT:-3000}/health",\r\n        "interval": 30\r\n      },\r\n      "log_file": "${LOG_DIR}/${APP_NAME}.log",\r\n      "error_file": "${LOG_DIR}/${APP_NAME}-error.log"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-worker-template",children:"2. Worker Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "apps": [\r\n    {\r\n      "name": "${APP_NAME}-worker",\r\n      "script": "${WORKER_SCRIPT}",\r\n      "cwd": "${APP_ROOT}",\r\n      "instances": "${WORKER_INSTANCES:-1}",\r\n      "exec_mode": "fork",\r\n      "env": {\r\n        "NODE_ENV": "${NODE_ENV}",\r\n        "WORKER_TYPE": "${WORKER_TYPE}",\r\n        "QUEUE_URL": "${QUEUE_URL}"\r\n      },\r\n      "max_memory_restart": "${WORKER_MAX_MEMORY:-1G}",\r\n      "max_restarts": 10,\r\n      "min_uptime": "30s",\r\n      "autorestart": true,\r\n      "watch": false\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"3-microservice-template",children:"3. Microservice Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\r\n  "apps": [\r\n    {\r\n      "name": "${SERVICE_NAME}",\r\n      "script": "dist/server.js",\r\n      "cwd": "/app",\r\n      "instances": "${INSTANCES:-max}",\r\n      "exec_mode": "cluster",\r\n      "env": {\r\n        "NODE_ENV": "production",\r\n        "PORT": "${PORT}",\r\n        "SERVICE_NAME": "${SERVICE_NAME}",\r\n        "DATABASE_URL": "${DATABASE_URL}",\r\n        "REDIS_URL": "${REDIS_URL}"\r\n      },\r\n      "max_memory_restart": "1G",\r\n      "max_restarts": 3,\r\n      "min_uptime": "10s",\r\n      "health_check": {\r\n        "enabled": true,\r\n        "url": "http://localhost:${PORT}/health",\r\n        "interval": 30,\r\n        "timeout": 10,\r\n        "retries": 3\r\n      },\r\n      "log_file": "/var/log/${SERVICE_NAME}/${SERVICE_NAME}.log",\r\n      "error_file": "/var/log/${SERVICE_NAME}/${SERVICE_NAME}-error.log"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"validation-and-testing",children:"Validation and Testing"}),"\n",(0,s.jsx)(e.h3,{id:"1-configuration-validation",children:"1. Configuration Validation"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Validate configuration syntax\r\npmdaemon validate ecosystem.json\r\n\r\n# Validate against schema\r\npmdaemon validate ecosystem.json --schema production.schema.json\r\n\r\n# Test configuration without starting\r\npmdaemon start ecosystem.json --dry-run\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-testing-scripts",children:"2. Testing Scripts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\r\n# test-config.sh\r\n\r\nset -e\r\n\r\nCONFIG_FILE=${1:-ecosystem.json}\r\nENV=${2:-development}\r\n\r\necho "Testing configuration: $CONFIG_FILE for environment: $ENV"\r\n\r\n# Syntax validation\r\necho "Validating JSON syntax..."\r\njq empty "$CONFIG_FILE"\r\n\r\n# Schema validation\r\necho "Validating against schema..."\r\npmdaemon validate "$CONFIG_FILE" --schema="${ENV}.schema.json"\r\n\r\n# Dry run\r\necho "Testing configuration..."\r\npmdaemon start "$CONFIG_FILE" --dry-run\r\n\r\n# Environment variable check\r\necho "Checking environment variables..."\r\nnode scripts/check-env.js "$CONFIG_FILE"\r\n\r\necho "Configuration test passed!"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"common-pitfalls-to-avoid",children:"Common Pitfalls to Avoid"}),"\n",(0,s.jsx)(e.h3,{id:"1-configuration-issues",children:"1. Configuration Issues"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't hardcode environment-specific values"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid overly complex configurations"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't ignore error handling configuration"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid insufficient resource limits"})}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"2-performance-issues",children:"2. Performance Issues"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't use file watching in production"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid too many instances on small servers"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't ignore memory limits"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid blocking startup procedures"})}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"3-security-issues",children:"3. Security Issues"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Never commit secrets to version control"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't run as root user"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid exposing internal services"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't use weak authentication"})}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"4-monitoring-issues",children:"4. Monitoring Issues"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't disable health checks in production"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid insufficient logging"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Don't ignore resource monitoring"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Avoid missing alerting configuration"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"migration-strategies",children:"Migration Strategies"}),"\n",(0,s.jsx)(e.h3,{id:"1-configuration-updates",children:"1. Configuration Updates"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\r\n# migrate-config.sh\r\n\r\nOLD_CONFIG="ecosystem.old.json"\r\nNEW_CONFIG="ecosystem.json"\r\nBACKUP_DIR="config-backups"\r\n\r\n# Create backup\r\nmkdir -p "$BACKUP_DIR"\r\ncp "$NEW_CONFIG" "$BACKUP_DIR/ecosystem-$(date +%Y%m%d-%H%M%S).json"\r\n\r\n# Stop current processes\r\npmdaemon stop all\r\n\r\n# Update configuration\r\ncp "$OLD_CONFIG" "$NEW_CONFIG"\r\n\r\n# Validate new configuration\r\npmdaemon validate "$NEW_CONFIG"\r\n\r\n# Start with new configuration\r\npmdaemon start "$NEW_CONFIG"\r\n\r\necho "Configuration migration completed"\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-rolling-updates",children:"2. Rolling Updates"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\r\n# rolling-update.sh\r\n\r\nNEW_CONFIG="ecosystem.new.json"\r\n\r\n# Validate new configuration\r\npmdaemon validate "$NEW_CONFIG"\r\n\r\n# Reload configuration\r\npmdaemon reload "$NEW_CONFIG"\r\n\r\n# Verify all processes are running\r\npmdaemon status\r\n\r\necho "Rolling update completed"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"/pmdaemon/docs/configuration/ecosystem-files",children:"Ecosystem Files"})})," - Complete ecosystem configuration reference"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"/pmdaemon/docs/configuration/environment-specific",children:"Environment-Specific"})})," - Environment-specific configurations"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"/pmdaemon/docs/security/overview",children:"Security"})})," - Security best practices"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:(0,s.jsx)(e.a,{href:"/pmdaemon/docs/monitoring/overview",children:"Monitoring"})})," - Monitoring and alerting setup"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>t,x:()=>a});var i=r(6540);const s={},o=i.createContext(s);function t(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);