"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[8896],{8453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>l});var s=n(6540);const i={},o=s.createContext(i);function c(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:r},e.children)}},8848:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/error-handling","title":"Error Handling","description":"PMDaemon\'s REST API provides comprehensive error handling with detailed error messages, status codes, and troubleshooting guidance.","source":"@site/docs/api/error-handling.md","sourceDirName":"api","slug":"/api/error-handling","permalink":"/pmdaemon/docs/api/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/api/error-handling.md","tags":[],"version":"current","frontMatter":{}}');var i=n(4848),o=n(8453);const c={},l="Error Handling",t={},a=[{value:"Error Response Format",id:"error-response-format",level:2},{value:"HTTP Status Codes",id:"http-status-codes",level:2},{value:"2xx Success",id:"2xx-success",level:3},{value:"4xx Client Errors",id:"4xx-client-errors",level:3},{value:"5xx Server Errors",id:"5xx-server-errors",level:3},{value:"Common Error Codes",id:"common-error-codes",level:2},{value:"Process Management Errors",id:"process-management-errors",level:3},{value:"PROCESS_NOT_FOUND",id:"process_not_found",level:4},{value:"PROCESS_ALREADY_RUNNING",id:"process_already_running",level:4},{value:"PROCESS_START_FAILED",id:"process_start_failed",level:4},{value:"Configuration Errors",id:"configuration-errors",level:3},{value:"INVALID_CONFIG",id:"invalid_config",level:4},{value:"CONFIG_PARSE_ERROR",id:"config_parse_error",level:4},{value:"Resource Errors",id:"resource-errors",level:3},{value:"PORT_IN_USE",id:"port_in_use",level:4},{value:"INSUFFICIENT_RESOURCES",id:"insufficient_resources",level:4},{value:"Error Handling Best Practices",id:"error-handling-best-practices",level:2},{value:"1. Check Response Status",id:"1-check-response-status",level:3},{value:"2. Handle Specific Error Codes",id:"2-handle-specific-error-codes",level:3},{value:"3. Implement Retry Logic",id:"3-implement-retry-logic",level:3},{value:"4. Log Errors Appropriately",id:"4-log-errors-appropriately",level:3},{value:"Troubleshooting Guide",id:"troubleshooting-guide",level:2},{value:"Connection Issues",id:"connection-issues",level:3},{value:"Authentication Issues",id:"authentication-issues",level:3},{value:"Process Issues",id:"process-issues",level:3},{value:"Configuration Issues",id:"configuration-issues",level:3},{value:"Error Recovery Strategies",id:"error-recovery-strategies",level:2},{value:"Automatic Recovery",id:"automatic-recovery",level:3},{value:"Manual Recovery",id:"manual-recovery",level:3},{value:"Prevention",id:"prevention",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"error-handling",children:"Error Handling"})}),"\n",(0,i.jsx)(r.p,{children:"PMDaemon's REST API provides comprehensive error handling with detailed error messages, status codes, and troubleshooting guidance."}),"\n",(0,i.jsx)(r.h2,{id:"error-response-format",children:"Error Response Format"}),"\n",(0,i.jsx)(r.p,{children:"All API errors follow a consistent JSON format:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Human-readable error description"\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,i.jsx)(r.h3,{id:"2xx-success",children:"2xx Success"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"200 OK"})," - Request successful"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"201 Created"})," - Resource created successfully"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"204 No Content"})," - Request successful, no content returned"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"4xx-client-errors",children:"4xx Client Errors"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"400 Bad Request"})," - Invalid request syntax or parameters"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"401 Unauthorized"})," - Authentication required"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"403 Forbidden"})," - Insufficient permissions"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"404 Not Found"})," - Resource not found"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"409 Conflict"})," - Resource conflict (e.g., process already exists)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"422 Unprocessable Entity"})," - Valid syntax but semantic errors"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"5xx-server-errors",children:"5xx Server Errors"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"500 Internal Server Error"})," - Unexpected server error"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"503 Service Unavailable"})," - Server temporarily unavailable"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"common-error-codes",children:"Common Error Codes"}),"\n",(0,i.jsx)(r.h3,{id:"process-management-errors",children:"Process Management Errors"}),"\n",(0,i.jsx)(r.h4,{id:"process_not_found",children:"PROCESS_NOT_FOUND"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PROCESS_NOT_FOUND",\n    "message": "Process with ID \'web-app\' not found",\n    "details": {\n      "process_id": "web-app",\n      "suggestion": "Check \'pmdaemon list\' for available processes"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"process_already_running",children:"PROCESS_ALREADY_RUNNING"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PROCESS_ALREADY_RUNNING",\n    "message": "Process \'web-app\' is already running",\n    "details": {\n      "process_id": "web-app",\n      "pid": 12345,\n      "suggestion": "Use restart endpoint to restart the process"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"process_start_failed",children:"PROCESS_START_FAILED"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PROCESS_START_FAILED",\n    "message": "Failed to start process \'web-app\'",\n    "details": {\n      "process_id": "web-app",\n      "reason": "Command not found: node",\n      "suggestion": "Verify the command and working directory"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"configuration-errors",children:"Configuration Errors"}),"\n",(0,i.jsx)(r.h4,{id:"invalid_config",children:"INVALID_CONFIG"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "INVALID_CONFIG",\n    "message": "Invalid ecosystem configuration",\n    "details": {\n      "field": "apps[0].script",\n      "value": null,\n      "suggestion": "Script field is required for each application"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"config_parse_error",children:"CONFIG_PARSE_ERROR"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "CONFIG_PARSE_ERROR",\n    "message": "Failed to parse configuration file",\n    "details": {\n      "file": "ecosystem.json",\n      "line": 15,\n      "suggestion": "Check JSON syntax near line 15"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"resource-errors",children:"Resource Errors"}),"\n",(0,i.jsx)(r.h4,{id:"port_in_use",children:"PORT_IN_USE"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PORT_IN_USE",\n    "message": "Port 3000 is already in use",\n    "details": {\n      "port": 3000,\n      "suggestion": "Use a different port or stop the conflicting process"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"insufficient_resources",children:"INSUFFICIENT_RESOURCES"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "INSUFFICIENT_RESOURCES",\n    "message": "Insufficient system resources",\n    "details": {\n      "resource": "memory",\n      "available": "512MB",\n      "required": "1GB",\n      "suggestion": "Free up memory or reduce process requirements"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"error-handling-best-practices",children:"Error Handling Best Practices"}),"\n",(0,i.jsx)(r.h3,{id:"1-check-response-status",children:"1. Check Response Status"}),"\n",(0,i.jsx)(r.p,{children:"Always check the HTTP status code before processing the response:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"const response = await fetch('/api/processes');\nif (!response.ok) {\n  const error = await response.json();\n  console.error('API Error:', error.error.message);\n  return;\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"2-handle-specific-error-codes",children:"2. Handle Specific Error Codes"}),"\n",(0,i.jsx)(r.p,{children:"Implement specific handling for known error codes:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"async function startProcess(processId) {\n  try {\n    const response = await fetch(`/api/processes/${processId}/start`, {\n      method: 'POST'\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n\n      switch (error.error.code) {\n        case 'PROCESS_ALREADY_RUNNING':\n          console.log('Process is already running');\n          break;\n        case 'PROCESS_NOT_FOUND':\n          console.error('Process not found:', processId);\n          break;\n        case 'PROCESS_START_FAILED':\n          console.error('Start failed:', error.error.details.reason);\n          break;\n        default:\n          console.error('Unknown error:', error.error.message);\n      }\n    }\n  } catch (err) {\n    console.error('Network error:', err);\n  }\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"3-implement-retry-logic",children:"3. Implement Retry Logic"}),"\n",(0,i.jsx)(r.p,{children:"For transient errors, implement exponential backoff:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"async function apiCallWithRetry(url, options, maxRetries = 3) {\n  for (let i = 0; i < maxRetries; i++) {\n    try {\n      const response = await fetch(url, options);\n\n      if (response.ok) {\n        return response;\n      }\n\n      // Don't retry client errors (4xx)\n      if (response.status >= 400 && response.status < 500) {\n        throw new Error(`Client error: ${response.status}`);\n      }\n\n      // Retry server errors (5xx) with backoff\n      if (i < maxRetries - 1) {\n        await new Promise(resolve => setTimeout(resolve, Math.pow(2, i) * 1000));\n      }\n    } catch (err) {\n      if (i === maxRetries - 1) throw err;\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"4-log-errors-appropriately",children:"4. Log Errors Appropriately"}),"\n",(0,i.jsx)(r.p,{children:"Log errors with context for debugging:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"function logApiError(endpoint, error, context = {}) {\n  console.error('API Error:', {\n    endpoint,\n    code: error.error.code,\n    message: error.error.message,\n    details: error.error.details,\n    context,\n    timestamp: new Date().toISOString()\n  });\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"troubleshooting-guide",children:"Troubleshooting Guide"}),"\n",(0,i.jsx)(r.h3,{id:"connection-issues",children:"Connection Issues"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Cannot connect to API"}),": Verify PMDaemon web server is running"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"CORS errors"}),": Check if requests are from allowed origins"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Timeout errors"}),": Increase request timeout or check server load"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"authentication-issues",children:"Authentication Issues"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"401 Unauthorized"}),": Verify API key or authentication token"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"403 Forbidden"}),": Check user permissions for the requested operation"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"process-issues",children:"Process Issues"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Process won't start"}),": Check command, working directory, and environment"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Process keeps crashing"}),": Review logs and error output"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Resource conflicts"}),": Check port availability and system resources"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"configuration-issues",children:"Configuration Issues"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Config validation fails"}),": Verify JSON/YAML/TOML syntax"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Missing required fields"}),": Check against the ecosystem schema"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Environment variables"}),": Ensure all required env vars are set"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"error-recovery-strategies",children:"Error Recovery Strategies"}),"\n",(0,i.jsx)(r.h3,{id:"automatic-recovery",children:"Automatic Recovery"}),"\n",(0,i.jsx)(r.p,{children:"PMDaemon includes built-in recovery mechanisms:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Auto-restart"}),": Crashed processes are automatically restarted"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Health checks"}),": Failed health checks trigger restarts"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Resource monitoring"}),": Processes exceeding limits are managed"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"manual-recovery",children:"Manual Recovery"}),"\n",(0,i.jsx)(r.p,{children:"For manual intervention:"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:["Check process status: ",(0,i.jsx)(r.code,{children:"GET /api/processes"})]}),"\n",(0,i.jsxs)(r.li,{children:["Review logs: ",(0,i.jsx)(r.code,{children:"GET /api/processes/{id}/logs"})]}),"\n",(0,i.jsxs)(r.li,{children:["Restart if needed: ",(0,i.jsx)(r.code,{children:"POST /api/processes/{id}/restart"})]}),"\n",(0,i.jsx)(r.li,{children:"Update configuration if required"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"prevention",children:"Prevention"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Use health checks to detect issues early"}),"\n",(0,i.jsx)(r.li,{children:"Set appropriate resource limits"}),"\n",(0,i.jsx)(r.li,{children:"Monitor system metrics"}),"\n",(0,i.jsx)(r.li,{children:"Implement proper logging and alerting"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/pmdaemon/docs/api/rest-api",children:"REST API Reference"})})," - Complete API documentation"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/pmdaemon/docs/api/websocket-api",children:"WebSocket API"})})," - Real-time events and monitoring"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.a,{href:"/pmdaemon/docs/api/authentication",children:"Authentication"})})," - API security and authentication"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);