"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[344],{4769:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"features/cross-platform","title":"Cross-Platform Support","description":"PMDaemon is designed from the ground up to be truly cross-platform, providing native performance and full feature parity across Linux, Windows, and macOS.","source":"@site/docs/features/cross-platform.md","sourceDirName":"features","slug":"/features/cross-platform","permalink":"/pmdaemon/docs/features/cross-platform","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/features/cross-platform.md","tags":[],"version":"current","frontMatter":{}}');var i=s(4848),l=s(8453);const o={},a="Cross-Platform Support",t={},d=[{value:"Platform Support Matrix",id:"platform-support-matrix",level:2},{value:"Key Advantages",id:"key-advantages",level:2},{value:"\ud83d\ude80 Native Performance",id:"-native-performance",level:3},{value:"\ud83d\udd27 Platform-Specific Optimizations",id:"-platform-specific-optimizations",level:3},{value:"Linux",id:"linux",level:4},{value:"Windows",id:"windows",level:4},{value:"macOS",id:"macos",level:4},{value:"Unified API",id:"unified-api",level:2},{value:"Installation Options",id:"installation-options",level:2},{value:"Pre-built Binaries",id:"pre-built-binaries",level:3},{value:"From Source",id:"from-source",level:3},{value:"Cross-Compilation",id:"cross-compilation",level:3},{value:"Platform Differences",id:"platform-differences",level:2},{value:"Signal Handling",id:"signal-handling",level:3},{value:"File Paths",id:"file-paths",level:3},{value:"Process Management",id:"process-management",level:3},{value:"Development Workflows",id:"development-workflows",level:2},{value:"Cross-Platform Development Teams",id:"cross-platform-development-teams",level:3},{value:"CI/CD Pipelines",id:"cicd-pipelines",level:3},{value:"Migration Benefits",id:"migration-benefits",level:2},{value:"From PM2",id:"from-pm2",level:3},{value:"From Platform-Specific Tools",id:"from-platform-specific-tools",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Use Configuration Files",id:"1-use-configuration-files",level:3},{value:"2. Platform-Agnostic Scripts",id:"2-platform-agnostic-scripts",level:3},{value:"3. Health Checks",id:"3-health-checks",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Platform-Specific Issues",id:"platform-specific-issues",level:3},{value:"Common Solutions",id:"common-solutions",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cross-platform-support",children:"Cross-Platform Support"})}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon is designed from the ground up to be truly cross-platform, providing native performance and full feature parity across Linux, Windows, and macOS."}),"\n",(0,i.jsx)(n.h2,{id:"platform-support-matrix",children:"Platform Support Matrix"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Platform"}),(0,i.jsx)(n.th,{children:"Architecture"}),(0,i.jsx)(n.th,{children:"Status"}),(0,i.jsx)(n.th,{children:"Binary Name"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Linux"})}),(0,i.jsx)(n.td,{children:"x86_64"}),(0,i.jsx)(n.td,{children:"\u2705 Full Support"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pmdaemon-linux-x86_64"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Windows"})}),(0,i.jsx)(n.td,{children:"x86_64"}),(0,i.jsx)(n.td,{children:"\u2705 Full Support"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pmdaemon-windows-x86_64.exe"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"macOS"})}),(0,i.jsx)(n.td,{children:"x86_64 (Intel)"}),(0,i.jsx)(n.td,{children:"\u2705 Full Support"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pmdaemon-macos-x86_64"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"macOS"})}),(0,i.jsx)(n.td,{children:"aarch64 (Apple Silicon)"}),(0,i.jsx)(n.td,{children:"\u2705 Full Support"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pmdaemon-macos-aarch64"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"key-advantages",children:"Key Advantages"}),"\n",(0,i.jsx)(n.h3,{id:"-native-performance",children:"\ud83d\ude80 Native Performance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No runtime dependencies"})," - Single binary, no Node.js required"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Platform-optimized"})," - Uses native OS APIs for best performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Small footprint"})," - ~15MB binary vs ~50MB+ for PM2 + Node.js"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fast startup"})," - ~100ms vs 2-3 seconds for PM2"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-platform-specific-optimizations",children:"\ud83d\udd27 Platform-Specific Optimizations"}),"\n",(0,i.jsx)(n.h4,{id:"linux",children:"Linux"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signal Handling"}),": Full Unix signal support (SIGTERM, SIGINT, SIGUSR1, SIGUSR2, SIGKILL)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process Management"}),": Native ",(0,i.jsx)(n.code,{children:"nix"})," crate integration for optimal performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File System"}),": POSIX-compliant operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Container Ready"}),": Optimized for Docker and Kubernetes deployments"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"windows",children:"Windows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signal Handling"}),": Native Ctrl+C handling and graceful shutdown"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process Management"}),": Windows APIs with ",(0,i.jsx)(n.code,{children:"taskkill"})," integration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File System"}),": Native Windows path handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Terminal Support"}),": Works with PowerShell, Command Prompt, and Windows Terminal"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"macos",children:"macOS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Universal Support"}),": Both Intel and Apple Silicon architectures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signal Handling"}),": Full Unix signal support like Linux"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Native ARM64 performance on M1/M2/M3 Macs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration"}),": Works seamlessly with macOS development workflows"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"unified-api",children:"Unified API"}),"\n",(0,i.jsx)(n.p,{children:"The same commands work identically across all platforms:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# These commands work exactly the same on Linux, Windows, and macOS\r\npmdaemon start app.js --name myapp\r\npmdaemon list\r\npmdaemon stop myapp\r\npmdaemon restart myapp\r\npmdaemon logs myapp\r\npmdaemon delete myapp\n"})}),"\n",(0,i.jsx)(n.h2,{id:"installation-options",children:"Installation Options"}),"\n",(0,i.jsx)(n.h3,{id:"pre-built-binaries",children:"Pre-built Binaries"}),"\n",(0,i.jsx)(n.p,{children:"Download the appropriate binary for your platform:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Linux\r\nwget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-linux-x86_64\r\nchmod +x pmdaemon-linux-x86_64\r\nsudo mv pmdaemon-linux-x86_64 /usr/local/bin/pmdaemon\r\n\r\n# Windows (PowerShell)\r\nInvoke-WebRequest -Uri "https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-windows-x86_64.exe" -OutFile "pmdaemon.exe"\r\n\r\n# macOS Intel\r\nwget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-macos-x86_64\r\nchmod +x pmdaemon-macos-x86_64\r\nsudo mv pmdaemon-macos-x86_64 /usr/local/bin/pmdaemon\r\n\r\n# macOS Apple Silicon\r\nwget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-macos-aarch64\r\nchmod +x pmdaemon-macos-aarch64\r\nsudo mv pmdaemon-macos-aarch64 /usr/local/bin/pmdaemon\n'})}),"\n",(0,i.jsx)(n.h3,{id:"from-source",children:"From Source"}),"\n",(0,i.jsx)(n.p,{children:"Build for your current platform:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/entrepeneur4lyf/pmdaemon.git\r\ncd pmdaemon\r\ncargo build --release\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cross-compilation",children:"Cross-Compilation"}),"\n",(0,i.jsx)(n.p,{children:"Build for other platforms from Linux:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Add targets\r\nrustup target add x86_64-pc-windows-gnu\r\nrustup target add x86_64-apple-darwin\r\nrustup target add aarch64-apple-darwin\r\n\r\n# Build for Windows\r\ncargo build --release --target x86_64-pc-windows-gnu\r\n\r\n# Build for macOS (requires macOS SDK)\r\ncargo build --release --target x86_64-apple-darwin\r\ncargo build --release --target aarch64-apple-darwin\n"})}),"\n",(0,i.jsx)(n.h2,{id:"platform-differences",children:"Platform Differences"}),"\n",(0,i.jsx)(n.h3,{id:"signal-handling",children:"Signal Handling"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Unix (Linux/macOS):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Full signal support\r\npmdaemon stop myapp    # Sends SIGTERM\r\npmdaemon kill myapp    # Sends SIGKILL\r\n# Also supports SIGUSR1, SIGUSR2, SIGINT\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Windows:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmd",children:"# Uses Windows-native termination\r\npmdaemon stop myapp    # Uses taskkill\r\npmdaemon kill myapp    # Uses taskkill /F\r\n# Ctrl+C handling for graceful shutdown\n"})}),"\n",(0,i.jsx)(n.h3,{id:"file-paths",children:"File Paths"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon automatically handles platform-specific paths:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Linux/macOS:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Config: ",(0,i.jsx)(n.code,{children:"~/.config/pmdaemon/"})]}),"\n",(0,i.jsxs)(n.li,{children:["Logs: ",(0,i.jsx)(n.code,{children:"~/.local/share/pmdaemon/logs/"})]}),"\n",(0,i.jsxs)(n.li,{children:["PIDs: ",(0,i.jsx)(n.code,{children:"~/.local/share/pmdaemon/pids/"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Windows:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Config: ",(0,i.jsx)(n.code,{children:"%APPDATA%\\pmdaemon\\"})]}),"\n",(0,i.jsxs)(n.li,{children:["Logs: ",(0,i.jsx)(n.code,{children:"%LOCALAPPDATA%\\pmdaemon\\logs\\"})]}),"\n",(0,i.jsxs)(n.li,{children:["PIDs: ",(0,i.jsx)(n.code,{children:"%LOCALAPPDATA%\\pmdaemon\\pids\\"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"process-management",children:"Process Management"}),"\n",(0,i.jsx)(n.p,{children:"All platforms support the same features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Process lifecycle management"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Auto-restart on crash"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Memory monitoring"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Health checks"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Port management"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Log management"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Configuration files"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"development-workflows",children:"Development Workflows"}),"\n",(0,i.jsx)(n.h3,{id:"cross-platform-development-teams",children:"Cross-Platform Development Teams"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon enables consistent tooling across diverse development environments:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Developer on macOS\r\npmdaemon start --config ecosystem.json\r\n\r\n# Developer on Windows\r\npmdaemon start --config ecosystem.json\r\n\r\n# Developer on Linux\r\npmdaemon start --config ecosystem.json\r\n\r\n# Same config file, same behavior, same output\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cicd-pipelines",children:"CI/CD Pipelines"}),"\n",(0,i.jsx)(n.p,{children:"Use the same PMDaemon commands in all CI environments:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# GitHub Actions example\r\n- name: Start services\r\n  run: pmdaemon start --config ci-ecosystem.json --wait-ready\r\n  # Works on ubuntu-latest, windows-latest, macos-latest\n"})}),"\n",(0,i.jsx)(n.h2,{id:"migration-benefits",children:"Migration Benefits"}),"\n",(0,i.jsx)(n.h3,{id:"from-pm2",children:"From PM2"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Before (PM2):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Requires Node.js on all platforms"}),"\n",(0,i.jsx)(n.li,{children:"Windows support is problematic"}),"\n",(0,i.jsx)(n.li,{children:"Different behavior across platforms"}),"\n",(0,i.jsx)(n.li,{children:"Large resource footprint"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"After (PMDaemon):"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Native binaries for each platform"}),"\n",(0,i.jsx)(n.li,{children:"Consistent behavior everywhere"}),"\n",(0,i.jsx)(n.li,{children:"Better Windows support"}),"\n",(0,i.jsx)(n.li,{children:"Smaller resource usage"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"from-platform-specific-tools",children:"From Platform-Specific Tools"}),"\n",(0,i.jsx)(n.p,{children:"Replace multiple tools with one:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Linux"}),": systemd, supervisor \u2192 PMDaemon"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Windows"}),": Windows Services, NSSM \u2192 PMDaemon"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"macOS"}),": launchd, brew services \u2192 PMDaemon"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-use-configuration-files",children:"1. Use Configuration Files"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "apps": [{\r\n    "name": "myapp",\r\n    "script": "node",\r\n    "args": ["server.js"],\r\n    "instances": 2,\r\n    "port": "auto:3000-3100"\r\n  }]\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-platform-agnostic-scripts",children:"2. Platform-Agnostic Scripts"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\r\n# Works on all platforms with appropriate shell\r\npmdaemon start --config ecosystem.json\r\npmdaemon list\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-health-checks",children:"3. Health Checks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Same health check works everywhere\r\npmdaemon start app.js \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --wait-ready\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"platform-specific-issues",children:"Platform-Specific Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Linux:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure binary has execute permissions: ",(0,i.jsx)(n.code,{children:"chmod +x pmdaemon"})]}),"\n",(0,i.jsx)(n.li,{children:"Check PATH includes installation directory"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Windows:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run as Administrator if needed for system-wide installation"}),"\n",(0,i.jsx)(n.li,{children:"Add to PATH environment variable"}),"\n",(0,i.jsx)(n.li,{children:"Use PowerShell or Command Prompt"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"macOS:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allow binary in Security & Privacy settings"}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"sudo"})," for system-wide installation"]}),"\n",(0,i.jsx)(n.li,{children:"Ensure Xcode Command Line Tools are installed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-solutions",children:"Common Solutions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Permission Denied"}),": Use ",(0,i.jsx)(n.code,{children:"chmod +x"})," on Unix or run as Administrator on Windows"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Command Not Found"}),": Add binary location to PATH"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Port Conflicts"}),": Use PMDaemon's auto port assignment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process Not Starting"}),": Check logs with ",(0,i.jsx)(n.code,{children:"pmdaemon logs <name>"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon's cross-platform design ensures you can use the same powerful process management tool regardless of your operating system, providing consistency and reliability across your entire infrastructure."})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(6540);const i={},l=r.createContext(i);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);