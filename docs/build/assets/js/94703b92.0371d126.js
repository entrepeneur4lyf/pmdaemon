"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[779],{350:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"features/process-management","title":"Process Management","description":"PMDaemon provides comprehensive process lifecycle management with enhanced features that go beyond traditional process managers. This guide covers all aspects of managing processes with PMDaemon.","source":"@site/docs/features/process-management.md","sourceDirName":"features","slug":"/features/process-management","permalink":"/pmdaemon/docs/features/process-management","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/features/process-management.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/pmdaemon/docs/architecture/overview"},"next":{"title":"Port Management","permalink":"/pmdaemon/docs/features/port-management"}}');var i=s(4848),a=s(8453);const t={},o="Process Management",l={},c=[{value:"Process Lifecycle",id:"process-lifecycle",level:2},{value:"Process States",id:"process-states",level:3},{value:"Basic Operations",id:"basic-operations",level:2},{value:"Starting Processes",id:"starting-processes",level:3},{value:"Stopping Processes",id:"stopping-processes",level:3},{value:"Restarting Processes",id:"restarting-processes",level:3},{value:"Graceful Reload",id:"graceful-reload",level:3},{value:"Advanced Process Management",id:"advanced-process-management",level:2},{value:"Clustering",id:"clustering",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Auto-restart Configuration",id:"auto-restart-configuration",level:3},{value:"Enhanced Delete Operations",id:"enhanced-delete-operations",level:2},{value:"Single Process Deletion",id:"single-process-deletion",level:3},{value:"Bulk Deletion",id:"bulk-deletion",level:3},{value:"Status-based Deletion",id:"status-based-deletion",level:3},{value:"Safety Features",id:"safety-features",level:3},{value:"Process Information",id:"process-information",level:2},{value:"Listing Processes",id:"listing-processes",level:3},{value:"Detailed Process Information",id:"detailed-process-information",level:3},{value:"Signal Handling",id:"signal-handling",level:2},{value:"Graceful Shutdown Process",id:"graceful-shutdown-process",level:3},{value:"Custom Signal Handling",id:"custom-signal-handling",level:3},{value:"Configuration Persistence",id:"configuration-persistence",level:2},{value:"Automatic Persistence",id:"automatic-persistence",level:3},{value:"Configuration Locations",id:"configuration-locations",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Standard Variables",id:"standard-variables",level:3},{value:"Custom Variables",id:"custom-variables",level:3},{value:"Working Directory",id:"working-directory",level:2},{value:"Process Monitoring Integration",id:"process-monitoring-integration",level:2},{value:"Real-time Monitoring",id:"real-time-monitoring",level:3},{value:"Log Management",id:"log-management",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Naming Convention",id:"1-naming-convention",level:3},{value:"2. Resource Limits",id:"2-resource-limits",level:3},{value:"3. Health Checks",id:"3-health-checks",level:3},{value:"4. Graceful Shutdowns",id:"4-graceful-shutdowns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"process-management",children:"Process Management"})}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon provides comprehensive process lifecycle management with enhanced features that go beyond traditional process managers. This guide covers all aspects of managing processes with PMDaemon."}),"\n",(0,i.jsx)(n.h2,{id:"process-lifecycle",children:"Process Lifecycle"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon manages processes through a well-defined lifecycle with clear state transitions:"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\r\n    A[Starting] --\x3e B[Online]\r\n    B --\x3e C[Stopping]\r\n    C --\x3e D[Stopped]\r\n    B --\x3e E[Restarting]\r\n    E --\x3e B\r\n    B --\x3e F[Errored]\r\n    F --\x3e E\r\n    D --\x3e A"}),"\n",(0,i.jsx)(n.h3,{id:"process-states",children:"Process States"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"State"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Color"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Starting"})}),(0,i.jsx)(n.td,{children:"Process is being launched"}),(0,i.jsx)(n.td,{children:"\ud83d\udfe1 Yellow"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Online"})}),(0,i.jsx)(n.td,{children:"Process is running normally"}),(0,i.jsx)(n.td,{children:"\ud83d\udfe2 Green"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Stopping"})}),(0,i.jsx)(n.td,{children:"Process is being shut down"}),(0,i.jsx)(n.td,{children:"\ud83d\udfe1 Yellow"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Stopped"})}),(0,i.jsx)(n.td,{children:"Process has exited"}),(0,i.jsx)(n.td,{children:"\ud83d\udd34 Red"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Errored"})}),(0,i.jsx)(n.td,{children:"Process crashed or failed"}),(0,i.jsx)(n.td,{children:"\ud83d\udd34 Red"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Restarting"})}),(0,i.jsx)(n.td,{children:"Process is being restarted"}),(0,i.jsx)(n.td,{children:"\ud83d\udd35 Blue"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"basic-operations",children:"Basic Operations"}),"\n",(0,i.jsx)(n.h3,{id:"starting-processes",children:"Starting Processes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Start a simple process\r\npmdaemon start "node server.js" --name web-app\r\n\r\n# Start with full configuration\r\npmdaemon start "python app.py" \\\r\n  --name python-api \\\r\n  --instances 2 \\\r\n  --port 8000-8001 \\\r\n  --max-memory 512M \\\r\n  --cwd /path/to/app \\\r\n  --env NODE_ENV=production \\\r\n  --env DATABASE_URL=postgres://localhost/db\n'})}),"\n",(0,i.jsx)(n.h3,{id:"stopping-processes",children:"Stopping Processes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Stop a single process\r\npmdaemon stop web-app\r\n\r\n# Stop by process ID\r\npmdaemon stop 0\r\n\r\n# Stop all processes (with confirmation)\r\npmdaemon stop all\n"})}),"\n",(0,i.jsx)(n.h3,{id:"restarting-processes",children:"Restarting Processes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Standard restart\r\npmdaemon restart web-app\r\n\r\n# Restart with port override\r\npmdaemon restart web-app --port 3001\r\n\r\n# Restart all processes\r\npmdaemon restart all\n"})}),"\n",(0,i.jsx)(n.h3,{id:"graceful-reload",children:"Graceful Reload"}),"\n",(0,i.jsx)(n.p,{children:"Zero-downtime restart for production environments:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Graceful reload (SIGUSR2 then SIGTERM)\r\npmdaemon reload web-app\r\n\r\n# Reload with new port configuration\r\npmdaemon reload web-app --port 4000-4003\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-process-management",children:"Advanced Process Management"}),"\n",(0,i.jsx)(n.h3,{id:"clustering",children:"Clustering"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon provides automatic clustering with load balancing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Start 4 instances of the same application\r\npmdaemon start "node server.js" \\\r\n  --name web-cluster \\\r\n  --instances 4 \\\r\n  --port 3000-3003\r\n\r\n# Auto-scale based on CPU cores\r\npmdaemon start "node server.js" \\\r\n  --name web-cluster \\\r\n  --instances max \\\r\n  --port auto:3000-3100\n'})}),"\n",(0,i.jsx)(n.p,{children:"Each instance receives:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Unique PORT environment variable"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PM2_INSTANCE_ID"})," (0, 1, 2, 3...)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NODE_APP_INSTANCE"})," (for Node.js compatibility)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,i.jsx)(n.p,{children:"Automatic restart when processes exceed memory limits:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Set memory limit with automatic restart\r\npmdaemon start "node memory-intensive-app.js" \\\r\n  --name memory-app \\\r\n  --max-memory 1G\r\n\r\n# Different memory formats supported\r\npmdaemon start app.py --max-memory 512M    # 512 megabytes\r\npmdaemon start app.py --max-memory 100K    # 100 kilobytes\r\npmdaemon start app.py --max-memory 2G      # 2 gigabytes\n'})}),"\n",(0,i.jsx)(n.h3,{id:"auto-restart-configuration",children:"Auto-restart Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Configure how processes restart after crashes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Custom restart behavior\r\npmdaemon start "unstable-app.js" \\\r\n  --name unstable \\\r\n  --max-restarts 10 \\\r\n  --min-uptime 5s \\\r\n  --restart-delay 2s\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--max-restarts"}),": Maximum restart attempts (default: 16)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--min-uptime"}),": Minimum uptime before considering stable (default: 1000ms)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--restart-delay"}),": Delay between exit and restart (default: 0ms)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"enhanced-delete-operations",children:"Enhanced Delete Operations"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon provides powerful deletion capabilities beyond simple process removal:"}),"\n",(0,i.jsx)(n.h3,{id:"single-process-deletion",children:"Single Process Deletion"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Delete a specific process (stops if running)\r\npmdaemon delete web-app\r\n\r\n# Force deletion without confirmation\r\npmdaemon delete web-app --force\n"})}),"\n",(0,i.jsx)(n.h3,{id:"bulk-deletion",children:"Bulk Deletion"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Delete all processes\r\npmdaemon delete all\r\n\r\n# Force delete all (no confirmation)\r\npmdaemon delete all --force\n"})}),"\n",(0,i.jsx)(n.h3,{id:"status-based-deletion",children:"Status-based Deletion"}),"\n",(0,i.jsx)(n.p,{children:"Delete processes based on their current state:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Delete all stopped processes\r\npmdaemon delete stopped --status\r\n\r\n# Delete all errored processes\r\npmdaemon delete errored --status --force\r\n\r\n# Delete all starting processes (useful for cleanup)\r\npmdaemon delete starting --status\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Valid statuses for deletion:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"starting"})," - Processes currently starting up"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"online"})," - Running processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stopping"})," - Processes currently shutting down"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stopped"})," - Processes that have exited"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"errored"})," - Processes that crashed or failed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"restarting"})," - Processes currently restarting"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"safety-features",children:"Safety Features"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon includes several safety features for delete operations:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic process shutdown"})," - Running processes are stopped before deletion"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interactive confirmation"})," - Prompts for bulk operations (unless ",(0,i.jsx)(n.code,{children:"--force"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Graceful shutdown"})," - Uses proper signal handling with timeouts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clear feedback"})," - Shows exactly what was stopped vs. deleted"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error resilience"})," - Continues deletion even if stopping fails"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"process-information",children:"Process Information"}),"\n",(0,i.jsx)(n.h3,{id:"listing-processes",children:"Listing Processes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# List all processes with detailed information\r\npmdaemon list\n"})}),"\n",(0,i.jsx)(n.p,{children:"The list command shows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ID"})," - Process identifier"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Name"})," - Process name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status"})," - Current state with color coding"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PID"})," - System process ID"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Port"})," - Assigned port(s)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU"})," - CPU usage percentage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory"})," - Memory usage (RSS)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uptime"})," - How long the process has been running"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Restarts"})," - Number of restarts"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"detailed-process-information",children:"Detailed Process Information"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Get detailed information about a process\r\npmdaemon info web-app\n"})}),"\n",(0,i.jsx)(n.p,{children:"This shows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process configuration"}),"\n",(0,i.jsx)(n.li,{children:"Resource usage statistics"}),"\n",(0,i.jsx)(n.li,{children:"Environment variables"}),"\n",(0,i.jsx)(n.li,{children:"Log file locations"}),"\n",(0,i.jsx)(n.li,{children:"Health check status"}),"\n",(0,i.jsx)(n.li,{children:"Restart history"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"signal-handling",children:"Signal Handling"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon provides robust signal handling for graceful shutdowns:"}),"\n",(0,i.jsx)(n.h3,{id:"graceful-shutdown-process",children:"Graceful Shutdown Process"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SIGTERM"})," sent to process"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Grace period"})," (configurable timeout)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SIGKILL"})," if process doesn't exit"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cleanup"})," of PID files and resources"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Configure shutdown timeout\r\npmdaemon start "node server.js" \\\r\n  --name web-app \\\r\n  --kill-timeout 30s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-signal-handling",children:"Custom Signal Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Send custom signals to processes\r\npmdaemon signal web-app SIGUSR1\r\npmdaemon signal web-app SIGUSR2\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-persistence",children:"Configuration Persistence"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon automatically saves and restores process configurations:"}),"\n",(0,i.jsx)(n.h3,{id:"automatic-persistence",children:"Automatic Persistence"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process configs"})," saved as JSON files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic restoration"})," on PMDaemon restart"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State detection"})," - automatically detects if processes are still running"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-session support"})," - works across different terminal sessions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-locations",children:"Configuration Locations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Linux/macOS\r\n~/.config/pmdaemon/processes/\r\n~/.local/share/pmdaemon/logs/\r\n~/.local/share/pmdaemon/pids/\r\n\r\n# Windows\r\n%APPDATA%\\pmdaemon\\processes\\\r\n%LOCALAPPDATA%\\pmdaemon\\logs\\\r\n%LOCALAPPDATA%\\pmdaemon\\pids\\\n"})}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon automatically injects useful environment variables:"}),"\n",(0,i.jsx)(n.h3,{id:"standard-variables",children:"Standard Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"PORT"})})," - Assigned port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"PM2_INSTANCE_ID"})})," - Instance ID (0-based)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"NODE_APP_INSTANCE"})})," - Instance ID (Node.js compatibility)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"custom-variables",children:"Custom Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Set custom environment variables\r\npmdaemon start "node server.js" \\\r\n  --name web-app \\\r\n  --env NODE_ENV=production \\\r\n  --env DATABASE_URL=postgres://localhost/db \\\r\n  --env API_KEY=secret123\n'})}),"\n",(0,i.jsx)(n.h2,{id:"working-directory",children:"Working Directory"}),"\n",(0,i.jsx)(n.p,{children:"Control where processes run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Set custom working directory\r\npmdaemon start "npm start" \\\r\n  --name frontend \\\r\n  --cwd /path/to/frontend\r\n\r\n# Use relative paths\r\npmdaemon start "./build.sh" \\\r\n  --name builder \\\r\n  --cwd ../build-scripts\n'})}),"\n",(0,i.jsx)(n.h2,{id:"process-monitoring-integration",children:"Process Monitoring Integration"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon integrates process management with monitoring:"}),"\n",(0,i.jsx)(n.h3,{id:"real-time-monitoring",children:"Real-time Monitoring"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Monitor all processes with custom interval\r\npmdaemon monit --interval 2\r\n\r\n# Monitor specific process\r\npmdaemon monit --filter web-app\n"})}),"\n",(0,i.jsx)(n.h3,{id:"log-management",children:"Log Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View recent logs\r\npmdaemon logs web-app --lines 50\r\n\r\n# Follow logs in real-time\r\npmdaemon logs web-app --follow\r\n\r\n# View error logs only\r\npmdaemon logs web-app --error\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-naming-convention",children:"1. Naming Convention"}),"\n",(0,i.jsx)(n.p,{children:"Use descriptive, consistent names:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Good naming\r\npmdaemon start "node api.js" --name api-server-prod\r\npmdaemon start "python worker.py" --name background-worker-dev\r\n\r\n# Avoid generic names\r\npmdaemon start "node app.js" --name app  # Too generic\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-resource-limits",children:"2. Resource Limits"}),"\n",(0,i.jsx)(n.p,{children:"Always set appropriate resource limits:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node memory-intensive.js" \\\r\n  --name heavy-app \\\r\n  --max-memory 2G \\\r\n  --max-restarts 5\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-health-checks",children:"3. Health Checks"}),"\n",(0,i.jsx)(n.p,{children:"Use health checks for critical services:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" \\\r\n  --name critical-api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --health-check-timeout 10s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-graceful-shutdowns",children:"4. Graceful Shutdowns"}),"\n",(0,i.jsx)(n.p,{children:"Configure appropriate shutdown timeouts:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" \\\r\n  --name web-server \\\r\n  --kill-timeout 30s  # Allow time for cleanup\n'})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process won't start"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check logs for errors\r\npmdaemon logs process-name\r\n\r\n# Verify script path and permissions\r\nls -la /path/to/script\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process keeps restarting"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check if hitting memory limit\r\npmdaemon info process-name\r\n\r\n# Increase memory limit or fix memory leaks\r\npmdaemon restart process-name --max-memory 1G\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Can't delete process"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Force deletion\r\npmdaemon delete process-name --force\r\n\r\n# Check if process is stuck\r\npmdaemon info process-name\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/port-management",children:"Port Management"})})," - Advanced port allocation features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/health-checks",children:"Health Checks"})})," - Process health monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/monitoring",children:"Monitoring"})})," - Real-time process monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/features/configuration",children:"Configuration"})})," - Advanced configuration options"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Process management in PMDaemon provides the reliability and features you need for production deployments, with enhancements that go well beyond traditional process managers."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);