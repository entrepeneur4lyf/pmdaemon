"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[1181],{6364:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"cli/exit-codes","title":"Exit Codes","description":"PMDaemon uses standard Unix exit codes for all operations.","source":"@site/docs/cli/exit-codes.md","sourceDirName":"cli","slug":"/cli/exit-codes","permalink":"/pmdaemon/docs/cli/exit-codes","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/cli/exit-codes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables","permalink":"/pmdaemon/docs/cli/environment-variables"},"next":{"title":"Ecosystem Configuration Files","permalink":"/pmdaemon/docs/configuration/ecosystem-files"}}');var i=s(4848),o=s(8453);const c={},l="Exit Codes",d={},t=[{value:"Exit Codes",id:"exit-codes-1",level:2},{value:"<code>0</code> - Success",id:"0---success",level:3},{value:"<code>1</code> - Error",id:"1---error",level:3},{value:"Process Management Error Codes",id:"process-management-error-codes",level:2},{value:"<code>10</code> - Process Not Found",id:"10---process-not-found",level:4},{value:"<code>11</code> - Process Already Exists",id:"11---process-already-exists",level:4},{value:"<code>12</code> - Process Start Failed",id:"12---process-start-failed",level:4},{value:"<code>13</code> - Process Stop Failed",id:"13---process-stop-failed",level:4},{value:"<code>14</code> - Process Restart Failed",id:"14---process-restart-failed",level:4},{value:"Configuration Error Codes",id:"configuration-error-codes",level:2},{value:"<code>20</code> - Configuration File Not Found",id:"20---configuration-file-not-found",level:4},{value:"<code>21</code> - Configuration Parse Error",id:"21---configuration-parse-error",level:4},{value:"<code>22</code> - Configuration Validation Error",id:"22---configuration-validation-error",level:4},{value:"Resource Error Codes",id:"resource-error-codes",level:2},{value:"<code>30</code> - Port Conflict",id:"30---port-conflict",level:4},{value:"<code>31</code> - Memory Limit Exceeded",id:"31---memory-limit-exceeded",level:4},{value:"<code>32</code> - File System Error",id:"32---file-system-error",level:4},{value:"Health Check Error Codes",id:"health-check-error-codes",level:2},{value:"<code>40</code> - Health Check Failed",id:"40---health-check-failed",level:4},{value:"<code>41</code> - Health Check Timeout",id:"41---health-check-timeout",level:4},{value:"Network Error Codes",id:"network-error-codes",level:2},{value:"<code>50</code> - Web Server Start Failed",id:"50---web-server-start-failed",level:4},{value:"<code>51</code> - Network Connection Failed",id:"51---network-connection-failed",level:4},{value:"Permission Error Codes",id:"permission-error-codes",level:2},{value:"<code>60</code> - Permission Denied",id:"60---permission-denied",level:4},{value:"<code>61</code> - Access Denied",id:"61---access-denied",level:4},{value:"System Error Codes",id:"system-error-codes",level:2},{value:"<code>70</code> - System Resource Exhausted",id:"70---system-resource-exhausted",level:4},{value:"<code>71</code> - System Call Failed",id:"71---system-call-failed",level:4},{value:"Using Exit Codes in Scripts",id:"using-exit-codes-in-scripts",level:2},{value:"Basic Error Handling",id:"basic-error-handling",level:3},{value:"Comprehensive Error Handling",id:"comprehensive-error-handling",level:3},{value:"Deployment Script with Health Checks",id:"deployment-script-with-health-checks",level:3},{value:"Monitoring Script",id:"monitoring-script",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Always Check Exit Codes",id:"1-always-check-exit-codes",level:3},{value:"2. Use Specific Error Handling",id:"2-use-specific-error-handling",level:3},{value:"3. Log Exit Codes for Debugging",id:"3-log-exit-codes-for-debugging",level:3},{value:"4. Use Exit Codes in CI/CD",id:"4-use-exit-codes-in-cicd",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"exit-codes",children:"Exit Codes"})}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon uses standard Unix exit codes for all operations."}),"\n",(0,i.jsx)(n.h2,{id:"exit-codes-1",children:"Exit Codes"}),"\n",(0,i.jsxs)(n.h3,{id:"0---success",children:[(0,i.jsx)(n.code,{children:"0"})," - Success"]}),"\n",(0,i.jsx)(n.p,{children:"Command completed successfully."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api\necho $?  # Output: 0\n\npmdaemon stop web-api  \necho $?  # Output: 0\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"1---error",children:[(0,i.jsx)(n.code,{children:"1"})," - Error"]}),"\n",(0,i.jsx)(n.p,{children:"Any error occurred during command execution, including:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Invalid command syntax"}),"\n",(0,i.jsx)(n.li,{children:"Missing required arguments"}),"\n",(0,i.jsx)(n.li,{children:"Process management failures"}),"\n",(0,i.jsx)(n.li,{children:"Configuration errors"}),"\n",(0,i.jsx)(n.li,{children:"Runtime errors"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon invalid-command\necho $?  # Output: 1\n\npmdaemon start  # Missing script\necho $?  # Output: 1\n\npmdaemon stop nonexistent-process\necho $?  # Output: 1\necho $?  # Output: 2\n\npmdaemon start "node server.js" --instances -1  # Invalid instance count\necho $?  # Output: 2\n'})}),"\n",(0,i.jsx)(n.h2,{id:"process-management-error-codes",children:"Process Management Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"10---process-not-found",children:[(0,i.jsx)(n.code,{children:"10"})," - Process Not Found"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Specified process does not exist",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Operations on non-existent processes",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Typo in process name"}),"\n",(0,i.jsx)(n.li,{children:"Process was already deleted"}),"\n",(0,i.jsx)(n.li,{children:"Wrong namespace"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon stop nonexistent-process\necho $?  # Output: 10\n\npmdaemon restart invalid-name\necho $?  # Output: 10\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"11---process-already-exists",children:[(0,i.jsx)(n.code,{children:"11"})," - Process Already Exists"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Attempting to create a process with an existing name",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Starting a process with a duplicate name",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process name conflict"}),"\n",(0,i.jsx)(n.li,{children:"Attempting to start already running process"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api\npmdaemon start "python app.py" --name web-api  # Same name\necho $?  # Output: 11\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"12---process-start-failed",children:[(0,i.jsx)(n.code,{children:"12"})," - Process Start Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Failed to start the specified process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Process startup failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Invalid script path"}),"\n",(0,i.jsx)(n.li,{children:"Permission issues"}),"\n",(0,i.jsx)(n.li,{children:"Resource constraints"}),"\n",(0,i.jsx)(n.li,{children:"Port conflicts"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "nonexistent-script.js" --name test\necho $?  # Output: 12\n\npmdaemon start "node server.js" --name web --port 80  # Permission denied\necho $?  # Output: 12\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"13---process-stop-failed",children:[(0,i.jsx)(n.code,{children:"13"})," - Process Stop Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Failed to stop the specified process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Process shutdown failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process not responding to signals"}),"\n",(0,i.jsx)(n.li,{children:"Permission issues"}),"\n",(0,i.jsx)(n.li,{children:"Process already stopped"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon stop unresponsive-process\necho $?  # Output: 13\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"14---process-restart-failed",children:[(0,i.jsx)(n.code,{children:"14"})," - Process Restart Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Failed to restart the specified process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Process restart failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stop operation failed"}),"\n",(0,i.jsx)(n.li,{children:"Start operation failed"}),"\n",(0,i.jsx)(n.li,{children:"Configuration changes invalid"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon restart broken-process\necho $?  # Output: 14\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-error-codes",children:"Configuration Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"20---configuration-file-not-found",children:[(0,i.jsx)(n.code,{children:"20"})," - Configuration File Not Found"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Specified configuration file does not exist",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Using ",(0,i.jsx)(n.code,{children:"--config"})," with invalid file path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Incorrect file path"}),"\n",(0,i.jsx)(n.li,{children:"File permissions"}),"\n",(0,i.jsx)(n.li,{children:"File deleted"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon --config nonexistent.json start\necho $?  # Output: 20\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"21---configuration-parse-error",children:[(0,i.jsx)(n.code,{children:"21"})," - Configuration Parse Error"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Configuration file contains invalid syntax",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Malformed JSON, YAML, or TOML files",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Syntax errors in configuration"}),"\n",(0,i.jsx)(n.li,{children:"Invalid JSON/YAML/TOML format"}),"\n",(0,i.jsx)(n.li,{children:"Encoding issues"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# ecosystem.json contains invalid JSON\npmdaemon --config ecosystem.json start\necho $?  # Output: 21\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"22---configuration-validation-error",children:[(0,i.jsx)(n.code,{children:"22"})," - Configuration Validation Error"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Configuration contains invalid values",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Valid syntax but invalid configuration values",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Invalid port numbers"}),"\n",(0,i.jsx)(n.li,{children:"Invalid memory formats"}),"\n",(0,i.jsx)(n.li,{children:"Missing required fields"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Configuration has invalid port range\npmdaemon start "node server.js" --name web --instances 4 --port 3000-3001\necho $?  # Output: 22\n'})}),"\n",(0,i.jsx)(n.h2,{id:"resource-error-codes",children:"Resource Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"30---port-conflict",children:[(0,i.jsx)(n.code,{children:"30"})," - Port Conflict"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Requested port is already in use",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Port assignment conflicts",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Port already used by another process"}),"\n",(0,i.jsx)(n.li,{children:"Port already assigned to another PMDaemon process"}),"\n",(0,i.jsx)(n.li,{children:"Insufficient ports in range"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server1.js" --name app1 --port 3000\npmdaemon start "node server2.js" --name app2 --port 3000  # Conflict\necho $?  # Output: 30\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"31---memory-limit-exceeded",children:[(0,i.jsx)(n.code,{children:"31"})," - Memory Limit Exceeded"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Process exceeded memory limits",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Memory constraint violations",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process using too much memory"}),"\n",(0,i.jsx)(n.li,{children:"System memory exhausted"}),"\n",(0,i.jsx)(n.li,{children:"Invalid memory limit format"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "memory-hungry-app" --name app --max-memory 10M\n# If app uses more than 10MB\necho $?  # Output: 31\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"32---file-system-error",children:[(0,i.jsx)(n.code,{children:"32"})," - File System Error"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," File system operation failed",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," File/directory access issues",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Permission denied"}),"\n",(0,i.jsx)(n.li,{children:"Disk space full"}),"\n",(0,i.jsx)(n.li,{children:"Invalid file paths"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web --out-file /root/logs/app.log\necho $?  # Output: 32 (permission denied)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"health-check-error-codes",children:"Health Check Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"40---health-check-failed",children:[(0,i.jsx)(n.code,{children:"40"})," - Health Check Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Process health checks are failing",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Health check validation failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HTTP endpoint not responding"}),"\n",(0,i.jsx)(n.li,{children:"Health check script returning non-zero"}),"\n",(0,i.jsx)(n.li,{children:"Health check timeout"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\n  --health-check-url http://localhost:3000/health \\\n  --wait-ready\n# If health check fails\necho $?  # Output: 40\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"41---health-check-timeout",children:[(0,i.jsx)(n.code,{children:"41"})," - Health Check Timeout"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Health check timed out during blocking start",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," ",(0,i.jsx)(n.code,{children:"--wait-ready"})," timeout exceeded",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process taking too long to start"}),"\n",(0,i.jsx)(n.li,{children:"Health check endpoint not available"}),"\n",(0,i.jsx)(n.li,{children:"Network issues"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "slow-starting-app" --name app \\\n  --health-check-url http://localhost:3000/health \\\n  --wait-ready --wait-timeout 10s\n# If app takes longer than 10s to be healthy\necho $?  # Output: 41\n'})}),"\n",(0,i.jsx)(n.h2,{id:"network-error-codes",children:"Network Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"50---web-server-start-failed",children:[(0,i.jsx)(n.code,{children:"50"})," - Web Server Start Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Failed to start web monitoring server",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Web server startup failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Port already in use"}),"\n",(0,i.jsx)(n.li,{children:"Permission denied"}),"\n",(0,i.jsx)(n.li,{children:"Invalid host/port configuration"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon web --port 80  # Permission denied\necho $?  # Output: 50\n\npmdaemon web --port 3000  # Port in use\necho $?  # Output: 50\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"51---network-connection-failed",children:[(0,i.jsx)(n.code,{children:"51"})," - Network Connection Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Network operation failed",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Network connectivity issues",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Health check URL unreachable"}),"\n",(0,i.jsx)(n.li,{children:"Web API connection failed"}),"\n",(0,i.jsx)(n.li,{children:"DNS resolution failed"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\n  --health-check-url http://unreachable-host/health\necho $?  # Output: 51\n'})}),"\n",(0,i.jsx)(n.h2,{id:"permission-error-codes",children:"Permission Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"60---permission-denied",children:[(0,i.jsx)(n.code,{children:"60"})," - Permission Denied"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Insufficient permissions for operation",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Permission-related failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cannot write to log directory"}),"\n",(0,i.jsx)(n.li,{children:"Cannot bind to privileged port"}),"\n",(0,i.jsx)(n.li,{children:"Cannot execute script"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web --port 80\necho $?  # Output: 60 (need root for port 80)\n\npmdaemon start "script.sh" --name script --out-file /root/app.log\necho $?  # Output: 60 (cannot write to /root)\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"61---access-denied",children:[(0,i.jsx)(n.code,{children:"61"})," - Access Denied"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Access denied to required resources",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Resource access failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"File/directory access denied"}),"\n",(0,i.jsx)(n.li,{children:"Process access denied"}),"\n",(0,i.jsx)(n.li,{children:"System resource access denied"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"system-error-codes",children:"System Error Codes"}),"\n",(0,i.jsxs)(n.h4,{id:"70---system-resource-exhausted",children:[(0,i.jsx)(n.code,{children:"70"})," - System Resource Exhausted"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," System resources exhausted",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," System resource limitations",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Out of memory"}),"\n",(0,i.jsx)(n.li,{children:"Too many open files"}),"\n",(0,i.jsx)(n.li,{children:"Process limit reached"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# System out of memory\npmdaemon start "memory-intensive-app" --name app\necho $?  # Output: 70\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"71---system-call-failed",children:[(0,i.jsx)(n.code,{children:"71"})," - System Call Failed"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," System call operation failed",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"When returned:"})," Low-level system operation failures",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Common causes:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Signal delivery failed"}),"\n",(0,i.jsx)(n.li,{children:"Process creation failed"}),"\n",(0,i.jsx)(n.li,{children:"System API errors"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"using-exit-codes-in-scripts",children:"Using Exit Codes in Scripts"}),"\n",(0,i.jsx)(n.h3,{id:"basic-error-handling",children:"Basic Error Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# Start a process and check result\npmdaemon start "node server.js" --name web-api --port 3000\nif [ $? -eq 0 ]; then\n    echo "\u2705 Process started successfully"\nelse\n    echo "\u274c Failed to start process"\n    exit 1\nfi\n'})}),"\n",(0,i.jsx)(n.h3,{id:"comprehensive-error-handling",children:"Comprehensive Error Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nstart_process() {\n    local name=$1\n    local script=$2\n    local port=$3\n    \n    pmdaemon start "$script" --name "$name" --port "$port"\n    local exit_code=$?\n    \n    case $exit_code in\n        0)\n            echo "\u2705 Process \'$name\' started successfully"\n            ;;\n        11)\n            echo "\u26a0\ufe0f  Process \'$name\' already exists, restarting..."\n            pmdaemon restart "$name"\n            ;;\n        30)\n            echo "\u274c Port $port is already in use"\n            return 1\n            ;;\n        12)\n            echo "\u274c Failed to start process \'$name\' - check script path"\n            return 1\n            ;;\n        *)\n            echo "\u274c Unknown error (exit code: $exit_code)"\n            return 1\n            ;;\n    esac\n}\n\n# Usage\nstart_process "web-api" "node server.js" 3000\nstart_process "worker" "python worker.py" 8000\n'})}),"\n",(0,i.jsx)(n.h3,{id:"deployment-script-with-health-checks",children:"Deployment Script with Health Checks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\ndeploy_service() {\n    local name=$1\n    local script=$2\n    local health_url=$3\n    \n    echo "Deploying $name..."\n    \n    pmdaemon start "$script" --name "$name" \\\n        --health-check-url "$health_url" \\\n        --wait-ready --wait-timeout 60s\n    \n    local exit_code=$?\n    \n    case $exit_code in\n        0)\n            echo "\u2705 $name deployed and healthy"\n            ;;\n        40)\n            echo "\u274c $name started but health checks failed"\n            pmdaemon logs "$name" --lines 20\n            return 1\n            ;;\n        41)\n            echo "\u274c $name health check timed out"\n            pmdaemon logs "$name" --lines 20\n            return 1\n            ;;\n        *)\n            echo "\u274c Failed to deploy $name (exit code: $exit_code)"\n            return 1\n            ;;\n    esac\n}\n\n# Deploy services\ndeploy_service "api" "node api.js" "http://localhost:3000/health"\ndeploy_service "worker" "python worker.py" "http://localhost:8000/health"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-script",children:"Monitoring Script"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\ncheck_process_health() {\n    local name=$1\n    \n    pmdaemon info "$name" > /dev/null 2>&1\n    local exit_code=$?\n    \n    case $exit_code in\n        0)\n            echo "\u2705 $name is running"\n            ;;\n        10)\n            echo "\u274c $name not found - restarting..."\n            pmdaemon start "node server.js" --name "$name"\n            ;;\n        *)\n            echo "\u26a0\ufe0f  $name status unknown (exit code: $exit_code)"\n            ;;\n    esac\n}\n\n# Monitor critical processes\ncheck_process_health "web-api"\ncheck_process_health "worker"\ncheck_process_health "database"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-always-check-exit-codes",children:"1. Always Check Exit Codes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Good: Check exit codes\npmdaemon start "node server.js" --name web-api\nif [ $? -ne 0 ]; then\n    echo "Failed to start process"\n    exit 1\nfi\n\n# Avoid: Ignoring exit codes\npmdaemon start "node server.js" --name web-api\n# Continue regardless of success/failure\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-use-specific-error-handling",children:"2. Use Specific Error Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Good: Handle specific error codes\ncase $? in\n    0) echo "Success" ;;\n    11) echo "Process already exists" ;;\n    30) echo "Port conflict" ;;\n    *) echo "Unknown error" ;;\nesac\n\n# Avoid: Generic error handling\nif [ $? -ne 0 ]; then\n    echo "Something went wrong"\nfi\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-log-exit-codes-for-debugging",children:"3. Log Exit Codes for Debugging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Good: Log exit codes\npmdaemon start "node server.js" --name web-api\nEXIT_CODE=$?\necho "$(date): pmdaemon start exited with code $EXIT_CODE" >> deployment.log\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-exit-codes-in-cicd",children:"4. Use Exit Codes in CI/CD"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# GitHub Actions example\n - name: Deploy application\n   run: |\n    set -e\n     pmdaemon start "node server.js" --name web-api \\\n       --health-check-url http://localhost:3000/health \\\n       --wait-ready\n    exit_code=$?\n    if [ $exit_code -ne 0 ]; then\n       echo "Deployment failed"\n      echo "Exit code: $exit_code"\n      echo "Checking logs..."\n      pmdaemon logs web-api --lines 50 || true\n       exit 1\n     fi\n    echo "Deployment successful"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/cli/commands",children:"Commands"})})," - Complete command reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/cli/configuration-options",children:"Configuration Options"})})," - CLI options reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/advanced/troubleshooting",children:"Troubleshooting"})})," - Common issues and solutions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/examples/deployment-examples",children:"Examples"})})," - Real-world deployment scripts"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var r=s(6540);const i={},o=r.createContext(i);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);