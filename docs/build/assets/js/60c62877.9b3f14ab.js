"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[6610],{54:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cli/configuration-options","title":"Configuration Options","description":"This comprehensive reference covers all CLI configuration options available in PMDaemon. Each option includes its purpose, default value, accepted formats, and practical examples.","source":"@site/docs/cli/configuration-options.md","sourceDirName":"cli","slug":"/cli/configuration-options","permalink":"/pmdaemon/docs/cli/configuration-options","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/cli/configuration-options.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CLI Commands Reference","permalink":"/pmdaemon/docs/cli/commands"},"next":{"title":"Environment Variables","permalink":"/pmdaemon/docs/cli/environment-variables"}}');var i=r(4848),o=r(8453);const t={},l="Configuration Options",a={},c=[{value:"Global Options",id:"global-options",level:2},{value:"<code>--config &lt;path&gt;</code>",id:"--config-path",level:3},{value:"<code>--verbose</code> / <code>-v</code>",id:"--verbose---v",level:3},{value:"Process Identification",id:"process-identification",level:2},{value:"<code>--name &lt;name&gt;</code>",id:"--name-name",level:3},{value:"Process Execution",id:"process-execution",level:2},{value:"<code>--args &lt;arguments&gt;</code>",id:"--args-arguments",level:3},{value:"<code>--cwd &lt;directory&gt;</code>",id:"--cwd-directory",level:3},{value:"<code>--instances &lt;count&gt;</code>",id:"--instances-count",level:3},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"<code>--env &lt;KEY=VALUE&gt;</code>",id:"--env-keyvalue",level:3},{value:"<code>--env-file &lt;path&gt;</code>",id:"--env-file-path",level:3},{value:"Port Management",id:"port-management",level:2},{value:"<code>--port &lt;port_config&gt;</code>",id:"--port-port_config",level:3},{value:"Resource Limits",id:"resource-limits",level:2},{value:"<code>--max-memory &lt;size&gt;</code>",id:"--max-memory-size",level:3},{value:"Process Control",id:"process-control",level:2},{value:"<code>--autorestart &lt;boolean&gt;</code>",id:"--autorestart-boolean",level:3},{value:"<code>--max-restarts &lt;count&gt;</code>",id:"--max-restarts-count",level:3},{value:"<code>--min-uptime &lt;duration&gt;</code>",id:"--min-uptime-duration",level:3},{value:"<code>--restart-delay &lt;duration&gt;</code>",id:"--restart-delay-duration",level:3},{value:"<code>--kill-timeout &lt;duration&gt;</code>",id:"--kill-timeout-duration",level:3},{value:"Logging Configuration",id:"logging-configuration",level:2},{value:"<code>--out-file &lt;path&gt;</code>",id:"--out-file-path",level:3},{value:"<code>--error-file &lt;path&gt;</code>",id:"--error-file-path",level:3},{value:"<code>--log-file &lt;path&gt;</code>",id:"--log-file-path",level:3},{value:"<code>--pid-file &lt;path&gt;</code>",id:"--pid-file-path",level:3},{value:"Health Checks",id:"health-checks",level:2},{value:"<code>--health-check-url &lt;url&gt;</code>",id:"--health-check-url-url",level:3},{value:"<code>--health-check-script &lt;path&gt;</code>",id:"--health-check-script-path",level:3},{value:"<code>--health-check-timeout &lt;duration&gt;</code>",id:"--health-check-timeout-duration",level:3},{value:"<code>--health-check-interval &lt;duration&gt;</code>",id:"--health-check-interval-duration",level:3},{value:"<code>--health-check-retries &lt;count&gt;</code>",id:"--health-check-retries-count",level:3},{value:"Blocking Start Options",id:"blocking-start-options",level:2},{value:"<code>--wait-ready</code>",id:"--wait-ready",level:3},{value:"<code>--wait-timeout &lt;duration&gt;</code>",id:"--wait-timeout-duration",level:3},{value:"Monitoring Options",id:"monitoring-options",level:2},{value:"<code>--interval &lt;duration&gt;</code>",id:"--interval-duration",level:3},{value:"<code>--lines &lt;count&gt;</code>",id:"--lines-count",level:3},{value:"<code>--follow</code>",id:"--follow",level:3},{value:"Delete Command Options",id:"delete-command-options",level:2},{value:"<code>--status</code>",id:"--status",level:3},{value:"<code>--force</code> / <code>-f</code>",id:"--force---f",level:3},{value:"Web Server Options",id:"web-server-options",level:2},{value:"<code>--port &lt;port&gt;</code> (for <code>web</code> command)",id:"--port-port-for-web-command",level:3},{value:"<code>--host &lt;address&gt;</code> (for <code>web</code> command)",id:"--host-address-for-web-command",level:3},{value:"Advanced Options",id:"advanced-options",level:2},{value:"<code>--namespace &lt;name&gt;</code>",id:"--namespace-name",level:3},{value:"<code>--exec-mode &lt;mode&gt;</code>",id:"--exec-mode-mode",level:3},{value:"Configuration File Options",id:"configuration-file-options",level:2},{value:"Option Precedence",id:"option-precedence",level:2},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration-options",children:"Configuration Options"})}),"\n",(0,i.jsx)(n.p,{children:"This comprehensive reference covers all CLI configuration options available in PMDaemon. Each option includes its purpose, default value, accepted formats, and practical examples."}),"\n",(0,i.jsx)(n.h2,{id:"global-options",children:"Global Options"}),"\n",(0,i.jsx)(n.p,{children:"These options apply to all PMDaemon commands:"}),"\n",(0,i.jsx)(n.h3,{id:"--config-path",children:(0,i.jsx)(n.code,{children:"--config <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Path to configuration file",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," None",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path (JSON, YAML, or TOML)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon --config ecosystem.json start\r\npmdaemon --config /etc/pmdaemon/production.yaml start --name web-api\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"--verbose---v",children:[(0,i.jsx)(n.code,{children:"--verbose"})," / ",(0,i.jsx)(n.code,{children:"-v"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Enable verbose logging",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"false"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Boolean flag",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon --verbose start "node server.js" --name web-api\r\npmdaemon -v list\n'})}),"\n",(0,i.jsx)(n.h2,{id:"process-identification",children:"Process Identification"}),"\n",(0,i.jsx)(n.h3,{id:"--name-name",children:(0,i.jsx)(n.code,{children:"--name <name>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Unique process name identifier",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Required for most commands",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," String (alphanumeric, hyphens, underscores)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api\r\npmdaemon start "python worker.py" --name background-worker\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Naming conventions:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use descriptive names: ",(0,i.jsx)(n.code,{children:"web-api"}),", ",(0,i.jsx)(n.code,{children:"user-service"}),", ",(0,i.jsx)(n.code,{children:"data-processor"})]}),"\n",(0,i.jsx)(n.li,{children:"Avoid spaces and special characters"}),"\n",(0,i.jsx)(n.li,{children:"Use consistent naming patterns across your infrastructure"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"process-execution",children:"Process Execution"}),"\n",(0,i.jsx)(n.h3,{id:"--args-arguments",children:(0,i.jsx)(n.code,{children:"--args <arguments>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Command line arguments for the process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Empty array",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Space-separated arguments",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --args "--port 3000 --env production"\r\npmdaemon start "python app.py" --name api --args "-m uvicorn main:app --host 0.0.0.0"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--cwd-directory",children:(0,i.jsx)(n.code,{children:"--cwd <directory>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Working directory for the process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Current directory",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Absolute or relative path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "npm start" --name frontend --cwd /var/www/frontend\r\npmdaemon start "./run.sh" --name service --cwd /opt/myservice\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--instances-count",children:(0,i.jsx)(n.code,{children:"--instances <count>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Number of process instances (cluster mode)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"1"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Positive integer",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-cluster --instances 4\r\npmdaemon start "python worker.py" --name workers --instances 2\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Special values:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"max"})," - Use all available CPU cores"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," - Disable the process (useful for configuration files)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"--env-keyvalue",children:(0,i.jsx)(n.code,{children:"--env <KEY=VALUE>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Set environment variables",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Inherits from parent process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," ",(0,i.jsx)(n.code,{children:"KEY=VALUE"})," pairs (can be used multiple times)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api \\\r\n  --env NODE_ENV=production \\\r\n  --env DATABASE_URL=postgres://localhost/mydb \\\r\n  --env API_KEY=secret123\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--env-file-path",children:(0,i.jsx)(n.code,{children:"--env-file <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Load environment variables from file",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," None",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path (.env format)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --env-file .env.production\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:".env file format:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"NODE_ENV=production\r\nDATABASE_URL=postgres://localhost/mydb\r\nAPI_KEY=secret123\r\nPORT=3000\n"})}),"\n",(0,i.jsx)(n.h2,{id:"port-management",children:"Port Management"}),"\n",(0,i.jsx)(n.h3,{id:"--port-port_config",children:(0,i.jsx)(n.code,{children:"--port <port_config>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Port assignment configuration",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," No port assigned",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Various formats supported"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Single port:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --port 3000\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Port range (for clusters):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-cluster --instances 4 --port 3000-3003\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Auto-assignment:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node worker.js" --name workers --instances 3 --port auto:5000-5100\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Environment variables set:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PORT"})," - Assigned port number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PM2_INSTANCE_ID"})," - Instance ID (0-based)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NODE_APP_INSTANCE"})," - Instance ID (Node.js compatibility)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resource-limits",children:"Resource Limits"}),"\n",(0,i.jsx)(n.h3,{id:"--max-memory-size",children:(0,i.jsx)(n.code,{children:"--max-memory <size>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Memory limit before automatic restart",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Unlimited",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Size with unit (K, M, G) or raw bytes",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --max-memory 512M\r\npmdaemon start "python app.py" --name api --max-memory 1G\r\npmdaemon start "java -jar app.jar" --name java-app --max-memory 2048M\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Supported formats:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"100K"})," or ",(0,i.jsx)(n.code,{children:"100KB"})," - Kilobytes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"512M"})," or ",(0,i.jsx)(n.code,{children:"512MB"})," - Megabytes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2G"})," or ",(0,i.jsx)(n.code,{children:"2GB"})," - Gigabytes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1073741824"})," - Raw bytes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"process-control",children:"Process Control"}),"\n",(0,i.jsx)(n.h3,{id:"--autorestart-boolean",children:(0,i.jsx)(n.code,{children:"--autorestart <boolean>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Automatically restart process on crash",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"true"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --autorestart true\r\npmdaemon start "python script.py" --name one-time --autorestart false\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--max-restarts-count",children:(0,i.jsx)(n.code,{children:"--max-restarts <count>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Maximum number of restart attempts",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"16"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Positive integer or ",(0,i.jsx)(n.code,{children:"unlimited"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --max-restarts 10\r\npmdaemon start "python worker.py" --name worker --max-restarts unlimited\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--min-uptime-duration",children:(0,i.jsx)(n.code,{children:"--min-uptime <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Minimum uptime before considering process stable",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"1000ms"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (ms, s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --min-uptime 5s\r\npmdaemon start "java -jar app.jar" --name java-app --min-uptime 30s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--restart-delay-duration",children:(0,i.jsx)(n.code,{children:"--restart-delay <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Delay between process exit and restart",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"0ms"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (ms, s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --restart-delay 1s\r\npmdaemon start "python worker.py" --name worker --restart-delay 5s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--kill-timeout-duration",children:(0,i.jsx)(n.code,{children:"--kill-timeout <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Time to wait for graceful shutdown before force kill",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"1600ms"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (ms, s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --kill-timeout 30s\r\npmdaemon start "python app.py" --name api --kill-timeout 10s\n'})}),"\n",(0,i.jsx)(n.h2,{id:"logging-configuration",children:"Logging Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"--out-file-path",children:(0,i.jsx)(n.code,{children:"--out-file <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," File path for stdout logs",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Auto-generated (",(0,i.jsx)(n.code,{children:"{name}-{instance}-out.log"}),")",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --out-file /var/log/web-api.out\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--error-file-path",children:(0,i.jsx)(n.code,{children:"--error-file <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," File path for stderr logs",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Auto-generated (",(0,i.jsx)(n.code,{children:"{name}-{instance}-err.log"}),")",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --error-file /var/log/web-api.err\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--log-file-path",children:(0,i.jsx)(n.code,{children:"--log-file <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," File path for combined stdout/stderr logs",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Auto-generated (",(0,i.jsx)(n.code,{children:"{name}-{instance}.log"}),")",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --log-file /var/log/web-api.log\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--pid-file-path",children:(0,i.jsx)(n.code,{children:"--pid-file <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," File path for process ID file",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," Auto-generated (",(0,i.jsx)(n.code,{children:"{name}-{instance}.pid"}),")",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api --pid-file /var/run/web-api.pid\n'})}),"\n",(0,i.jsx)(n.h2,{id:"health-checks",children:"Health Checks"}),"\n",(0,i.jsx)(n.h3,{id:"--health-check-url-url",children:(0,i.jsx)(n.code,{children:"--health-check-url <url>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," HTTP endpoint for health checks",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," None",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," HTTP/HTTPS URL",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web-api \\\r\n  --port 3000 \\\r\n  --health-check-url http://localhost:3000/health\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--health-check-script-path",children:(0,i.jsx)(n.code,{children:"--health-check-script <path>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Script to run for health validation",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," None",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," File path to executable script",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "python worker.py" --name worker \\\r\n  --health-check-script ./scripts/health-check.sh\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--health-check-timeout-duration",children:(0,i.jsx)(n.code,{children:"--health-check-timeout <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Timeout for individual health checks",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"30s"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --health-check-timeout 10s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--health-check-interval-duration",children:(0,i.jsx)(n.code,{children:"--health-check-interval <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Interval between health checks",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"60s"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --health-check-interval 30s\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--health-check-retries-count",children:(0,i.jsx)(n.code,{children:"--health-check-retries <count>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Number of retries before marking unhealthy",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"3"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Positive integer",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --health-check-retries 5\n'})}),"\n",(0,i.jsx)(n.h2,{id:"blocking-start-options",children:"Blocking Start Options"}),"\n",(0,i.jsx)(n.h3,{id:"--wait-ready",children:(0,i.jsx)(n.code,{children:"--wait-ready"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Block start command until health checks pass",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"false"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Boolean flag",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api \\\r\n  --health-check-url http://localhost:3000/health \\\r\n  --wait-ready\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--wait-timeout-duration",children:(0,i.jsx)(n.code,{children:"--wait-timeout <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Maximum time to wait for process to be ready",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"30s"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "java -jar app.jar" --name java-app \\\r\n  --health-check-url http://localhost:8080/health \\\r\n  --wait-ready \\\r\n  --wait-timeout 120s\n'})}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-options",children:"Monitoring Options"}),"\n",(0,i.jsx)(n.h3,{id:"--interval-duration",children:(0,i.jsx)(n.code,{children:"--interval <duration>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Update interval for monitoring commands",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"1s"})," (for ",(0,i.jsx)(n.code,{children:"monit"})," command)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Duration with unit (s, m, h)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon monit --interval 5s\r\npmdaemon monit --interval 30s\n"})}),"\n",(0,i.jsx)(n.h3,{id:"--lines-count",children:(0,i.jsx)(n.code,{children:"--lines <count>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Number of log lines to display",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"20"})," (for ",(0,i.jsx)(n.code,{children:"logs"})," command)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Positive integer",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon logs web-api --lines 100\r\npmdaemon logs worker --lines 50\n"})}),"\n",(0,i.jsx)(n.h3,{id:"--follow",children:(0,i.jsx)(n.code,{children:"--follow"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Follow logs in real-time",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"false"})," (for ",(0,i.jsx)(n.code,{children:"logs"})," command)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Boolean flag",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon logs web-api --follow\r\npmdaemon logs worker --follow --lines 0  # Only new logs\n"})}),"\n",(0,i.jsx)(n.h2,{id:"delete-command-options",children:"Delete Command Options"}),"\n",(0,i.jsx)(n.h3,{id:"--status",children:(0,i.jsx)(n.code,{children:"--status"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Delete processes by status instead of name",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"false"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Boolean flag",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon delete stopped --status\r\npmdaemon delete errored --status\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Valid status values:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"starting"})," - Processes currently starting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"online"})," - Running processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stopping"})," - Processes shutting down"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stopped"})," - Stopped processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"errored"})," - Failed processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"restarting"})," - Processes restarting"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"--force---f",children:[(0,i.jsx)(n.code,{children:"--force"})," / ",(0,i.jsx)(n.code,{children:"-f"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Skip confirmation prompts",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"false"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Boolean flag",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon delete all --force\r\npmdaemon delete stopped --status --force\n"})}),"\n",(0,i.jsx)(n.h2,{id:"web-server-options",children:"Web Server Options"}),"\n",(0,i.jsxs)(n.h3,{id:"--port-port-for-web-command",children:[(0,i.jsx)(n.code,{children:"--port <port>"})," (for ",(0,i.jsx)(n.code,{children:"web"})," command)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Port for web monitoring server",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"9615"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," Port number (1-65535)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon web --port 8080\r\npmdaemon web --port 9000\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"--host-address-for-web-command",children:[(0,i.jsx)(n.code,{children:"--host <address>"})," (for ",(0,i.jsx)(n.code,{children:"web"})," command)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Host address to bind web server",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"127.0.0.1"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," IP address or hostname",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pmdaemon web --host 0.0.0.0        # All interfaces\r\npmdaemon web --host 192.168.1.100  # Specific IP\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-options",children:"Advanced Options"}),"\n",(0,i.jsx)(n.h3,{id:"--namespace-name",children:(0,i.jsx)(n.code,{children:"--namespace <name>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Logical grouping for processes",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:'"default"'}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," String identifier",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node api.js" --name api --namespace production\r\npmdaemon start "node worker.js" --name worker --namespace production\r\npmdaemon list --namespace production\n'})}),"\n",(0,i.jsx)(n.h3,{id:"--exec-mode-mode",children:(0,i.jsx)(n.code,{children:"--exec-mode <mode>"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Execution mode for the process",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"fork"})," (auto-detects ",(0,i.jsx)(n.code,{children:"cluster"})," when instances > 1)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Format:"})," ",(0,i.jsx)(n.code,{children:"fork"})," or ",(0,i.jsx)(n.code,{children:"cluster"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Example:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pmdaemon start "node server.js" --name web --exec-mode cluster --instances 4\n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-file-options",children:"Configuration File Options"}),"\n",(0,i.jsx)(n.p,{children:"When using configuration files, all CLI options can be specified in the file format:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"JSON format:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "name": "web-api",\r\n  "script": "node",\r\n  "args": ["server.js"],\r\n  "instances": 2,\r\n  "port": "3000-3001",\r\n  "max_memory_restart": "512M",\r\n  "autorestart": true,\r\n  "max_restarts": 10,\r\n  "min_uptime": "5s",\r\n  "restart_delay": "1s",\r\n  "kill_timeout": "30s",\r\n  "env": {\r\n    "NODE_ENV": "production"\r\n  },\r\n  "health_check": {\r\n    "check_type": "http",\r\n    "url": "http://localhost:3000/health",\r\n    "timeout": 10,\r\n    "interval": 30,\r\n    "retries": 3\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"option-precedence",children:"Option Precedence"}),"\n",(0,i.jsx)(n.p,{children:"When the same option is specified in multiple places, PMDaemon uses this precedence order:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CLI arguments"})," (highest priority)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Environment variables"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Configuration file"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default values"})," (lowest priority)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Configuration file specifies port 3000\r\n# CLI override takes precedence\r\npmdaemon --config ecosystem.json start --name web-api --port 3001\r\n# Process will use port 3001, not 3000\n"})}),"\n",(0,i.jsx)(n.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon validates all configuration options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Required fields:"})," ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"script"})," are always required"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type validation:"})," Numeric options must be valid numbers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Range validation:"})," Ports must be 1-65535, instances must be positive"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Format validation:"})," Memory sizes, durations, and URLs must be valid"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Conflict detection:"})," Process names and ports must be unique"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/cli/commands",children:"Commands"})})," - Complete command reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/cli/environment-variables",children:"Environment Variables"})})," - Environment configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/cli/exit-codes",children:"Exit Codes"})})," - Error code reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/pmdaemon/docs/examples/deployment-examples",children:"Examples"})})," - Real-world usage examples"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var s=r(6540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);