"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[5289],{213:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"getting-started/introduction","title":"Introduction","description":"PMDaemon is a high-performance process manager built in Rust, inspired by PM2 with innovative features that exceed the original. It\'s designed for modern application deployment with advanced port management, real-time monitoring, and production-ready web APIs.","source":"@site/docs/getting-started/introduction.md","sourceDirName":"getting-started","slug":"/getting-started/introduction","permalink":"/pmdaemon/docs/getting-started/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/getting-started/introduction.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Installation","permalink":"/pmdaemon/docs/getting-started/installation"}}');var t=s(4848),i=s(8453);const o={},l="Introduction",a={},c=[{value:"What is PMDaemon?",id:"what-is-pmdaemon",level:2},{value:"Key Advantages Over PM2",id:"key-advantages-over-pm2",level:2},{value:"\ud83c\udfaf <strong>Advanced Port Management</strong>",id:"-advanced-port-management",level:3},{value:"\ud83c\udfe5 <strong>Health Checks &amp; Blocking Start</strong>",id:"-health-checks--blocking-start",level:3},{value:"\u26a1 <strong>Rust Performance</strong>",id:"-rust-performance",level:3},{value:"\ud83d\udd27 <strong>Enhanced Operations</strong>",id:"-enhanced-operations",level:3},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"<strong>Development</strong>",id:"development",level:3},{value:"<strong>Production</strong>",id:"production",level:3},{value:"<strong>DevOps &amp; CI/CD</strong>",id:"devops--cicd",level:3},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Community &amp; Support",id:"community--support",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(n.p,{children:"PMDaemon is a high-performance process manager built in Rust, inspired by PM2 with innovative features that exceed the original. It's designed for modern application deployment with advanced port management, real-time monitoring, and production-ready web APIs."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-pmdaemon",children:"What is PMDaemon?"}),"\n",(0,t.jsxs)(n.p,{children:["PMDaemon is a ",(0,t.jsx)(n.strong,{children:"general-purpose process manager"})," that helps you:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start, stop, restart, and monitor"})," applications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scale applications"})," with clustering and load balancing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manage ports"})," with advanced allocation and conflict detection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor health"})," with HTTP and script-based checks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Access remotely"})," via REST API and WebSocket connections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Persist configurations"})," across system restarts"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-advantages-over-pm2",children:"Key Advantages Over PM2"}),"\n",(0,t.jsxs)(n.p,{children:["PMDaemon isn't just a PM2 clone\u2014it's PM2 ",(0,t.jsx)(n.strong,{children:"evolved"})," with features that the original lacks:"]}),"\n",(0,t.jsxs)(n.h3,{id:"-advanced-port-management",children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Advanced Port Management"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Port range distribution"})," - Automatically assign consecutive ports to cluster instances"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-assignment"})," - Find first available port in specified ranges"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Conflict detection"})," - Prevent port conflicts at the process manager level"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Runtime overrides"})," - Change ports during restart without modifying saved config"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-health-checks--blocking-start",children:["\ud83c\udfe5 ",(0,t.jsx)(n.strong,{children:"Health Checks & Blocking Start"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HTTP health checks"})," - Monitor endpoints with configurable timeouts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Script-based checks"})," - Custom validation logic for complex scenarios"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blocking start"})," - Wait for processes to be healthy before returning"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-restart on failure"})," - Automatic recovery when health checks fail"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-rust-performance",children:["\u26a1 ",(0,t.jsx)(n.strong,{children:"Rust Performance"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory safety"})," - No segfaults or memory leaks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blazing performance"})," - Efficient async/await architecture"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Low resource usage"})," - Minimal overhead compared to Node.js-based tools"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-enhanced-operations",children:["\ud83d\udd27 ",(0,t.jsx)(n.strong,{children:"Enhanced Operations"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Bulk deletion"})," - Delete all processes or filter by status"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configurable monitoring"})," - Customize update intervals for different needs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Professional display"})," - Beautiful tables with color-coded status indicators"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-time log following"})," - ",(0,t.jsx)(n.code,{children:"tail -f"})," functionality built-in"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsx)(n.p,{children:"PMDaemon follows a modern, layered architecture designed for performance, security, and maintainability:"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\r\n    A[CLI Interface] --\x3e B[Process Manager Core]\r\n    C[Web API + Auth] --\x3e B\r\n    D[WebSocket] --\x3e B\r\n    B --\x3e E[Process Orchestrator]\r\n    E --\x3e F[Process Execution]\r\n    E --\x3e G[Health Monitor]\r\n    E --\x3e H[Port Manager]\r\n    E --\x3e I[Configuration Service]\r\n    F --\x3e J[System Processes]\r\n    G --\x3e F\r\n    H --\x3e F\r\n    I --\x3e K[Config Files<br>JSON/YAML/TOML]"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key architectural features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udd12 Security-first design"})," with API key authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u26a1 High-performance async architecture"})," built on Tokio"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83c\udfd7\ufe0f Layered design"})," with clear separation of concerns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udd04 Real-time monitoring"})," with WebSocket support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83c\udf10 Cross-platform compatibility"})," (Linux, Windows, macOS)"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udcd6 ",(0,t.jsx)(n.strong,{children:"For detailed architecture information"}),", see ",(0,t.jsx)(n.a,{href:"/pmdaemon/docs/architecture/overview",children:"Architecture Overview"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(n.p,{children:"PMDaemon is perfect for:"}),"\n",(0,t.jsx)(n.h3,{id:"development",children:(0,t.jsx)(n.strong,{children:"Development"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Running multiple microservices locally"}),"\n",(0,t.jsx)(n.li,{children:"Hot-reloading applications during development"}),"\n",(0,t.jsx)(n.li,{children:"Managing different environments (dev, staging, prod)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"production",children:(0,t.jsx)(n.strong,{children:"Production"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Deploying Node.js, Python, Rust, or any executable"}),"\n",(0,t.jsx)(n.li,{children:"Load balancing with automatic clustering"}),"\n",(0,t.jsx)(n.li,{children:"Health monitoring and automatic recovery"}),"\n",(0,t.jsx)(n.li,{children:"Remote monitoring and management"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"devops--cicd",children:(0,t.jsx)(n.strong,{children:"DevOps & CI/CD"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Deployment scripts that wait for services to be ready"}),"\n",(0,t.jsx)(n.li,{children:"Automated testing with health check validation"}),"\n",(0,t.jsx)(n.li,{children:"Container orchestration and service management"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,t.jsx)(n.p,{children:"Ready to get started? Here's your path:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/getting-started/installation",children:"Installation"})})," - Install PMDaemon on your system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/getting-started/quick-start",children:"Quick Start"})})," - Get up and running in 5 minutes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/getting-started/migration-from-pm2",children:"Migration from PM2"})})," - Transition from PM2 seamlessly"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Or dive deeper into specific features:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/features/process-management",children:"Process Management"})})," - Core lifecycle operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/features/port-management",children:"Port Management"})})," - Advanced port allocation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/features/health-checks",children:"Health Checks"})})," - Monitoring and validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/pmdaemon/docs/cli/commands",children:"CLI Reference"})})," - Complete command documentation"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"community--support",children:"Community & Support"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitHub"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon",children:"entrepeneur4lyf/pmdaemon"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/issues",children:"Report bugs or request features"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Discussions"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/discussions",children:"Community discussions"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Crates.io"}),": ",(0,t.jsx)(n.a,{href:"https://crates.io/crates/pmdaemon",children:"pmdaemon"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PMDaemon"})," - Process management, evolved. \ud83d\ude80"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);