"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[7929],{2696:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api/rest-api","title":"REST API Reference","description":"PMDaemon provides a comprehensive REST API for remote process management and monitoring. The API is PM2-compatible and includes additional features unique to PMDaemon.","source":"@site/docs/api/rest-api.md","sourceDirName":"api","slug":"/api/rest-api","permalink":"/pmdaemon/docs/api/rest-api","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/api/rest-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Schema Validation","permalink":"/pmdaemon/docs/configuration/schema-validation"},"next":{"title":"WebSocket API","permalink":"/pmdaemon/docs/api/websocket-api"}}');var t=n(4848),i=n(8453);const l={},c="REST API Reference",d={},a=[{value:"Getting Started",id:"getting-started",level:2},{value:"Start the Web Server",id:"start-the-web-server",level:3},{value:"Base URL",id:"base-url",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Using API Authentication",id:"using-api-authentication",level:4},{value:"Security Recommendations",id:"security-recommendations",level:4},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Root Endpoint",id:"root-endpoint",level:3},{value:"Response",id:"response",level:4},{value:"Process Management",id:"process-management",level:2},{value:"List Processes",id:"list-processes",level:3},{value:"Query Parameters",id:"query-parameters",level:4},{value:"Response",id:"response-1",level:4},{value:"Get Process Details",id:"get-process-details",level:3},{value:"Path Parameters",id:"path-parameters",level:4},{value:"Response",id:"response-2",level:4},{value:"Process Management",id:"process-management-1",level:3},{value:"Stop Process",id:"stop-process",level:3},{value:"Response",id:"response-3",level:4},{value:"Restart Process",id:"restart-process",level:3},{value:"Request Body (Optional)",id:"request-body-optional",level:4},{value:"Response",id:"response-4",level:4},{value:"Reload Process",id:"reload-process",level:3},{value:"Request Body (Optional)",id:"request-body-optional-1",level:4},{value:"Response",id:"response-5",level:4},{value:"Delete Process",id:"delete-process",level:3},{value:"Response",id:"response-6",level:4},{value:"Get Process Logs",id:"get-process-logs",level:3},{value:"Query Parameters",id:"query-parameters-1",level:4},{value:"Response",id:"response-7",level:4},{value:"System Information",id:"system-information",level:2},{value:"System Metrics",id:"system-metrics",level:3},{value:"Response",id:"response-8",level:4},{value:"Status Check",id:"status-check",level:3},{value:"Response",id:"response-9",level:4},{value:"Error Responses",id:"error-responses",level:2},{value:"Error Format",id:"error-format",level:3},{value:"HTTP Status Codes",id:"http-status-codes",level:3},{value:"Common Error Codes",id:"common-error-codes",level:3},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"CORS Support",id:"cors-support",level:2},{value:"Examples",id:"examples",level:2},{value:"Using curl",id:"using-curl",level:3},{value:"Using JavaScript (fetch)",id:"using-javascript-fetch",level:3},{value:"Using Python (requests)",id:"using-python-requests",level:3},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"rest-api-reference",children:"REST API Reference"})}),"\n",(0,t.jsx)(s.p,{children:"PMDaemon provides a comprehensive REST API for remote process management and monitoring. The API is PM2-compatible and includes additional features unique to PMDaemon."}),"\n",(0,t.jsx)(s.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(s.h3,{id:"start-the-web-server",children:"Start the Web Server"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Start with default settings (localhost:9615)\npmdaemon web\n\n# Custom host and port\npmdaemon web --host 0.0.0.0 --port 8080\n\n# With API key authentication (recommended for production)\npmdaemon web --api-key "your-secret-api-key"\n'})}),"\n",(0,t.jsx)(s.h3,{id:"base-url",children:"Base URL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"http://localhost:9615\n"})}),"\n",(0,t.jsx)(s.h3,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsx)(s.p,{children:"PMDaemon API supports optional API key authentication for security:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Start with API key authentication\npmdaemon web --api-key "your-secret-api-key"\n'})}),"\n",(0,t.jsx)(s.h4,{id:"using-api-authentication",children:"Using API Authentication"}),"\n",(0,t.jsxs)(s.p,{children:["When an API key is configured, all API endpoints (except root ",(0,t.jsx)(s.code,{children:"/"})," and WebSocket ",(0,t.jsx)(s.code,{children:"/ws"}),") require authentication."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Authorization Header (Bearer Token):"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'curl -H "Authorization: Bearer your-secret-api-key" \\\n     http://localhost:9615/api/processes\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"X-API-Key Header:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'curl -H "X-API-Key: your-secret-api-key" \\\n     http://localhost:9615/api/processes\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"ApiKey Header:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'curl -H "Authorization: ApiKey your-secret-api-key" \\\n     http://localhost:9615/api/processes\n'})}),"\n",(0,t.jsx)(s.h4,{id:"security-recommendations",children:"Security Recommendations"}),"\n",(0,t.jsx)(s.p,{children:"For production deployments:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Always use API key authentication"})," (",(0,t.jsx)(s.code,{children:"--api-key"}),")"]}),"\n",(0,t.jsx)(s.li,{children:"Run behind a reverse proxy with HTTPS"}),"\n",(0,t.jsx)(s.li,{children:"Use firewall rules to restrict access"}),"\n",(0,t.jsxs)(s.li,{children:["Bind to localhost only (",(0,t.jsx)(s.code,{children:"--host 127.0.0.1"}),") if not using a reverse proxy"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,t.jsx)(s.h3,{id:"root-endpoint",children:"Root Endpoint"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET"})," ",(0,t.jsx)(s.code,{children:"/"})]}),"\n",(0,t.jsx)(s.p,{children:"Get API information and available endpoints."}),"\n",(0,t.jsx)(s.h4,{id:"response",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "name": "PMDaemon",\n  "version": "0.1.1",\n  "description": "A feature-rich PM2 clone in Rust with advanced capabilities",\n  "status": "running",\n  "endpoints": {\n    "processes": "/api/processes",\n    "system": "/api/system",\n    "status": "/api/status",\n    "websocket": "/ws"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"process-management",children:"Process Management"}),"\n",(0,t.jsx)(s.h3,{id:"list-processes",children:"List Processes"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET"})," ",(0,t.jsx)(s.code,{children:"/api/processes"})]}),"\n",(0,t.jsx)(s.p,{children:"Get list of all processes with their current status."}),"\n",(0,t.jsx)(s.h4,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Example"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"status"})}),(0,t.jsx)(s.td,{children:"String"}),(0,t.jsx)(s.td,{children:"Filter by process status"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"?status=online"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"name"})}),(0,t.jsx)(s.td,{children:"String"}),(0,t.jsx)(s.td,{children:"Filter by process name"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"?name=web-app"})})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"response-1",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'[\n  {\n    "id": 0,\n    "name": "web-app",\n    "status": "online",\n    "pid": 1234,\n    "port": "3000",\n    "cpu_usage": 2.5,\n    "memory_usage": 47448064,\n    "uptime": "2h 15m 30s",\n    "restarts": 0,\n    "health_status": "healthy"\n  },\n  {\n    "id": 1,\n    "name": "api-server",\n    "status": "online",\n    "pid": 1235,\n    "port": "8000",\n    "cpu_usage": 1.8,\n    "memory_usage": 33554432,\n    "uptime": "1h 45m 12s",\n    "restarts": 1,\n    "health_status": "healthy"\n  }\n]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"get-process-details",children:"Get Process Details"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}"})]}),"\n",(0,t.jsx)(s.p,{children:"Get detailed information about a specific process."}),"\n",(0,t.jsx)(s.h4,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"id"})}),(0,t.jsx)(s.td,{children:"String"}),(0,t.jsx)(s.td,{children:"Process ID or name"})]})})]}),"\n",(0,t.jsx)(s.h4,{id:"response-2",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "id": 0,\n  "name": "web-app",\n  "status": "online",\n  "pid": 1234,\n  "port": "3000",\n  "cpu_usage": 2.5,\n  "memory_usage": 47448064,\n  "uptime": "2h 15m 30s",\n  "restarts": 0,\n  "config": {\n    "script": "node",\n    "args": ["server.js"],\n    "instances": 1,\n    "max_memory_restart": 536870912,\n    "port": "3000",\n    "env": {\n      "NODE_ENV": "production",\n      "PORT": "3000"\n    }\n  },\n  "health_check": {\n    "enabled": true,\n    "check_type": "http",\n    "url": "http://localhost:3000/health",\n    "status": "healthy",\n    "last_check": "2024-01-15T10:30:00Z",\n    "response_time": 45\n  },\n  "logs": {\n    "out_file": "/home/user/.local/share/pmdaemon/logs/web-app-0.out",\n    "error_file": "/home/user/.local/share/pmdaemon/logs/web-app-0.err"\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"process-management-1",children:"Process Management"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"})," PMDaemon API only allows management of existing processes for security reasons. New processes must be created via the CLI:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# Create processes via CLI\npmdaemon start "node server.js" --name "my-app"\n\n# Then manage via API\ncurl -H "X-API-Key: your-key" http://localhost:9615/api/processes\n'})}),"\n",(0,t.jsx)(s.h3,{id:"stop-process",children:"Stop Process"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"POST"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}/stop"})]}),"\n",(0,t.jsx)(s.p,{children:"Stop a running process."}),"\n",(0,t.jsx)(s.h4,{id:"response-3",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process stopped successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"restart-process",children:"Restart Process"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"POST"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}/restart"})]}),"\n",(0,t.jsx)(s.p,{children:"Restart a process with optional port override."}),"\n",(0,t.jsx)(s.h4,{id:"request-body-optional",children:"Request Body (Optional)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "port": "3001"\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"response-4",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process restarted successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"reload-process",children:"Reload Process"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"POST"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}/reload"})]}),"\n",(0,t.jsx)(s.p,{children:"Gracefully reload a process (zero-downtime restart)."}),"\n",(0,t.jsx)(s.h4,{id:"request-body-optional-1",children:"Request Body (Optional)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "port": "4000-4003"\n}\n'})}),"\n",(0,t.jsx)(s.h4,{id:"response-5",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process reloaded successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"delete-process",children:"Delete Process"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"DELETE"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}"})]}),"\n",(0,t.jsx)(s.p,{children:"Delete a process (stops if running)."}),"\n",(0,t.jsx)(s.h4,{id:"response-6",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Process deleted successfully"\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"get-process-logs",children:"Get Process Logs"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET"})," ",(0,t.jsx)(s.code,{children:"/api/processes/{id}/logs"})]}),"\n",(0,t.jsx)(s.p,{children:"Get process logs with optional filtering."}),"\n",(0,t.jsx)(s.h4,{id:"query-parameters-1",children:"Query Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Default"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"lines"})}),(0,t.jsx)(s.td,{children:"Number"}),(0,t.jsx)(s.td,{children:"Number of lines to return"}),(0,t.jsx)(s.td,{children:"20"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"type"})}),(0,t.jsx)(s.td,{children:"String"}),(0,t.jsxs)(s.td,{children:["Log type (",(0,t.jsx)(s.code,{children:"out"}),", ",(0,t.jsx)(s.code,{children:"error"}),", ",(0,t.jsx)(s.code,{children:"all"}),")"]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"all"})})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"response-7",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "logs": [\n    {\n      "timestamp": "2024-01-15T10:30:00Z",\n      "type": "out",\n      "message": "Server started on port 3000"\n    },\n    {\n      "timestamp": "2024-01-15T10:30:01Z",\n      "type": "out",\n      "message": "Database connected successfully"\n    }\n  ],\n  "total_lines": 156\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"system-information",children:"System Information"}),"\n",(0,t.jsx)(s.h3,{id:"system-metrics",children:"System Metrics"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET"})," ",(0,t.jsx)(s.code,{children:"/api/system"})]}),"\n",(0,t.jsx)(s.p,{children:"Get system metrics and resource usage."}),"\n",(0,t.jsx)(s.h4,{id:"response-8",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "hostname": "server-01",\n  "platform": "linux",\n  "arch": "x86_64",\n  "uptime": "5d 12h 30m",\n  "cpu": {\n    "cores": 8,\n    "usage": 15.2,\n    "load_average": [1.2, 1.5, 1.8]\n  },\n  "memory": {\n    "total": 16777216000,\n    "used": 8388608000,\n    "free": 8388608000,\n    "usage_percent": 50.0\n  },\n  "disk": {\n    "total": 1000000000000,\n    "used": 500000000000,\n    "free": 500000000000,\n    "usage_percent": 50.0\n  },\n  "processes": {\n    "total": 3,\n    "online": 2,\n    "stopped": 1,\n    "errored": 0\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"status-check",children:"Status Check"}),"\n",(0,t.jsxs)("div",{class:"api-endpoint",children:[(0,t.jsx)("span",{class:"api-method get",children:"GET"}),(0,t.jsx)("span",{class:"api-path",children:"/api/status"})]}),"\n",(0,t.jsx)(s.p,{children:"Simple health check endpoint for load balancers."}),"\n",(0,t.jsx)(s.h4,{id:"response-9",children:"Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "status": "ok",\n  "timestamp": "2024-01-15T10:30:00Z",\n  "version": "0.1.1"\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,t.jsx)(s.p,{children:"All endpoints return consistent error responses:"}),"\n",(0,t.jsx)(s.h3,{id:"error-format",children:"Error Format"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "PROCESS_NOT_FOUND",\n    "message": "Process with ID \'invalid-id\' not found",\n    "details": {\n      "requested_id": "invalid-id",\n      "available_processes": ["web-app", "api-server"]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Code"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Example"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"200"}),(0,t.jsx)(s.td,{children:"Success"}),(0,t.jsx)(s.td,{children:"Request completed successfully"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"201"}),(0,t.jsx)(s.td,{children:"Created"}),(0,t.jsx)(s.td,{children:"Process started successfully"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"Bad Request"}),(0,t.jsx)(s.td,{children:"Invalid request parameters"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"404"}),(0,t.jsx)(s.td,{children:"Not Found"}),(0,t.jsx)(s.td,{children:"Process not found"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"409"}),(0,t.jsx)(s.td,{children:"Conflict"}),(0,t.jsx)(s.td,{children:"Process name already exists"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"500"}),(0,t.jsx)(s.td,{children:"Internal Error"}),(0,t.jsx)(s.td,{children:"Server error"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"common-error-codes",children:"Common Error Codes"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Code"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"PROCESS_NOT_FOUND"})}),(0,t.jsx)(s.td,{children:"Specified process doesn't exist"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"PROCESS_ALREADY_EXISTS"})}),(0,t.jsx)(s.td,{children:"Process name already in use"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"INVALID_CONFIGURATION"})}),(0,t.jsx)(s.td,{children:"Invalid process configuration"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"OPERATION_FAILED"})}),(0,t.jsx)(s.td,{children:"Process operation failed"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"PERMISSION_DENIED"})}),(0,t.jsx)(s.td,{children:"Insufficient permissions"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,t.jsx)(s.p,{children:"The API includes basic rate limiting:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"100 requests per minute"})," per IP address"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Burst limit"}),": 20 requests in 10 seconds"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Headers included"})," in responses:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"X-RateLimit-Limit"}),": Request limit"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"X-RateLimit-Remaining"}),": Remaining requests"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"X-RateLimit-Reset"}),": Reset timestamp"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"cors-support",children:"CORS Support"}),"\n",(0,t.jsx)(s.p,{children:"The API includes CORS headers for browser access:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Allowed Origins"}),": Configurable (default: all)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Allowed Methods"}),": GET, POST, PUT, DELETE, OPTIONS"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Allowed Headers"}),": Content-Type, Authorization"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(s.h3,{id:"using-curl",children:"Using curl"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'# List all processes\ncurl http://localhost:9615/api/processes\n\n# Start a new process\ncurl -X POST http://localhost:9615/api/processes \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "test-app",\n    "script": "node",\n    "args": ["server.js"],\n    "port": "3000"\n  }\'\n\n# Get process details\ncurl http://localhost:9615/api/processes/test-app\n\n# Stop a process\ncurl -X POST http://localhost:9615/api/processes/test-app/stop\n\n# Get system metrics\ncurl http://localhost:9615/api/system\n'})}),"\n",(0,t.jsx)(s.h3,{id:"using-javascript-fetch",children:"Using JavaScript (fetch)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// List processes (with authentication)\nconst processes = await fetch('http://localhost:9615/api/processes', {\n  headers: { 'X-API-Key': 'your-secret-api-key' }\n}).then(res => res.json());\n\n// Stop a process\nconst result = await fetch('http://localhost:9615/api/processes/my-app/stop', {\n  method: 'POST',\n  headers: { 'X-API-Key': 'your-secret-api-key' }\n}).then(res => res.json());\n\n// Get system metrics\nconst system = await fetch('http://localhost:9615/api/system')\n  .then(res => res.json());\n"})}),"\n",(0,t.jsx)(s.h3,{id:"using-python-requests",children:"Using Python (requests)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"import requests\n\n# List processes (with authentication)\nheaders = {'X-API-Key': 'your-secret-api-key'}\nresponse = requests.get('http://localhost:9615/api/processes', headers=headers)\nprocesses = response.json()\n\n# Restart a process\nresponse = requests.post(\n    'http://localhost:9615/api/processes/python-app/restart',\n    headers=headers\n)\nresult = response.json()\n"})}),"\n",(0,t.jsx)(s.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/api/websocket-api",children:"WebSocket API"})})," - Real-time updates via WebSocket"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/api/library-usage",children:"Library Usage"})})," - Using PMDaemon as a Rust library"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/pmdaemon/docs/api/error-handling",children:"Error Handling"})})," - Comprehensive error handling guide"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.p,{children:"The REST API provides full programmatic access to PMDaemon's process management capabilities, making it easy to integrate with monitoring systems, deployment tools, and custom applications."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var r=n(6540);const t={},i=r.createContext(t);function l(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);