"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[5863],{6264:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"architecture/overview","title":"Architecture Overview","description":"GitHub Stars","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/pmdaemon/docs/architecture/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/architecture/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Migration from PM2","permalink":"/pmdaemon/docs/getting-started/migration-from-pm2"},"next":{"title":"Process Management","permalink":"/pmdaemon/docs/features/process-management"}}');var i=r(4848),t=r(8453);const o={},l="Architecture Overview",c={},a=[{value:"System Architecture",id:"system-architecture",level:2},{value:"Design Principles",id:"design-principles",level:2},{value:"\ud83c\udfd7\ufe0f <strong>Layered Architecture</strong>",id:"\ufe0f-layered-architecture",level:3},{value:"\ud83d\udd12 <strong>Security-First Design</strong>",id:"-security-first-design",level:3},{value:"\u26a1 <strong>High Performance</strong>",id:"-high-performance",level:3},{value:"Core Components",id:"core-components",level:2},{value:"Web Layer",id:"web-layer",level:3},{value:"Web API Server (Axum)",id:"web-api-server-axum",level:4},{value:"API Key Authentication",id:"api-key-authentication",level:4},{value:"WebSocket Handler",id:"websocket-handler",level:4},{value:"Core Management Layer",id:"core-management-layer",level:3},{value:"Process Manager",id:"process-manager",level:4},{value:"Port Manager",id:"port-manager",level:4},{value:"Configuration Service",id:"configuration-service",level:4},{value:"Monitoring &amp; Health Layer",id:"monitoring--health-layer",level:3},{value:"Health Monitor",id:"health-monitor",level:4},{value:"System Monitor",id:"system-monitor",level:4},{value:"Process Monitor",id:"process-monitor",level:4},{value:"Process Execution Layer",id:"process-execution-layer",level:3},{value:"Process Execution",id:"process-execution",level:4},{value:"Signal Handler",id:"signal-handler",level:4},{value:"Log Manager",id:"log-manager",level:4},{value:"Data Flow",id:"data-flow",level:2},{value:"1. <strong>Command Execution Flow</strong>",id:"1-command-execution-flow",level:3},{value:"2. <strong>Web API Request Flow</strong>",id:"2-web-api-request-flow",level:3},{value:"3. <strong>Monitoring Data Flow</strong>",id:"3-monitoring-data-flow",level:3},{value:"4. <strong>Configuration Flow</strong>",id:"4-configuration-flow",level:3},{value:"Security Architecture",id:"security-architecture",level:2},{value:"Authentication Flow",id:"authentication-flow",level:3},{value:"Security Layers",id:"security-layers",level:3},{value:"Performance Characteristics",id:"performance-characteristics",level:2},{value:"Scalability",id:"scalability",level:3},{value:"Reliability",id:"reliability",level:3},{value:"Technology Stack",id:"technology-stack",level:2},{value:"Core Technologies",id:"core-technologies",level:3},{value:"Development Tools",id:"development-tools",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"architecture-overview",children:"Architecture Overview"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/stargazers",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/stars/entrepeneur4lyf/pmdaemon?style=flat-square",alt:"GitHub Stars"})}),"\n",(0,i.jsx)(n.a,{href:"https://crates.io/crates/pmdaemon",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/crates/v/pmdaemon?style=flat-square",alt:"Crates.io Version"})}),"\n",(0,i.jsx)(n.a,{href:"https://crates.io/crates/pmdaemon",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/crates/d/pmdaemon?style=flat-square",alt:"Crates.io Downloads"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/blob/main/LICENSE-MIT",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/license-MIT-blue?style=flat-square",alt:"License"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/actions/workflows/ci.yml?query=branch%3Amain",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/actions/workflow/status/entrepeneur4lyf/pmdaemon/ci.yml?branch=main&style=flat-square",alt:"Build Status"})}),"\n",(0,i.jsx)(n.a,{href:"https://www.rust-lang.org",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/rust-1.70+-orange.svg?style=flat-square",alt:"Rust"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/tests-272%20passing-brightgreen.svg?style=flat-square",alt:"Test Coverage"})})]}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon is built with a modern, layered architecture that provides high performance, security, and maintainability. This document outlines the system's design principles and component interactions."}),"\n",(0,i.jsx)(n.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,i.jsx)(n.mermaid,{value:'graph TD\n\n    User["User<br>External Actor"]\n    subgraph PMDaemon["PMDaemon Application<br>Rust"]\n        CLI["CLI Entry Point<br>Rust"]\n        \n        subgraph WebLayer["Web Layer"]\n            WebAPI["Web API Server<br>Axum / HTTP"]\n            Auth["API Key Authentication<br>Middleware"]\n            WebSocket["WebSocket Handler<br>Real-time Updates"]\n        end\n        \n        subgraph CoreLayer["Core Management Layer"]\n            ProcessManager["Process Manager<br>Core Orchestrator"]\n            PortManager["Port Manager<br>Allocation & Conflicts"]\n            ConfigService["Configuration Service<br>JSON/YAML/TOML"]\n        end\n        \n        subgraph MonitoringLayer["Monitoring & Health Layer"]\n            HealthMonitor["Health Monitor<br>HTTP & Script Checks"]\n            SystemMonitor["System Monitor<br>CPU/Memory/Load"]\n            ProcessMonitor["Process Monitor<br>Individual Process Metrics"]\n        end\n        \n        subgraph ProcessLayer["Process Execution Layer"]\n            ProcessExecution["Process Execution<br>Spawn & Control"]\n            SignalHandler["Signal Handler<br>OS Signal Management"]\n            LogManager["Log Manager<br>stdout/stderr Capture"]\n        end\n        \n        %% Web Layer Connections\n        WebAPI --\x3e|Authenticates via| Auth\n        Auth --\x3e|Authorized requests to| ProcessManager\n        WebAPI --\x3e|Real-time updates via| WebSocket\n        WebSocket --\x3e|Broadcasts from| SystemMonitor\n        \n        %% CLI Connections\n        CLI --\x3e|Direct commands to| ProcessManager\n        \n        %% Core Layer Connections\n        ProcessManager --\x3e|Manages ports via| PortManager\n        ProcessManager --\x3e|Loads/saves config via| ConfigService\n        ProcessManager --\x3e|Controls processes via| ProcessExecution\n        ProcessManager --\x3e|Coordinates monitoring via| HealthMonitor\n        ProcessManager --\x3e|Gets metrics from| SystemMonitor\n        \n        %% Monitoring Connections\n        HealthMonitor --\x3e|Checks health of| ProcessExecution\n        ProcessMonitor --\x3e|Monitors individual| ProcessExecution\n        SystemMonitor --\x3e|Aggregates data from| ProcessMonitor\n        \n        %% Process Layer Connections\n        ProcessExecution --\x3e|Handles signals via| SignalHandler\n        ProcessExecution --\x3e|Captures logs via| LogManager\n        ProcessExecution --\x3e|Uses config from| ConfigService\n        ProcessExecution --\x3e|Reports to| ProcessMonitor\n    end\n    \n    %% External Connections\n    User --\x3e|CLI Commands| CLI\n    User --\x3e|HTTP/WebSocket| WebAPI\n    \n    %% External Systems\n    ProcessExecution --\x3e|Spawns & Controls| SystemProcesses["System Processes<br>Managed Applications"]\n    ConfigService --\x3e|Persists to| ConfigFiles["Config Files<br>JSON/YAML/TOML"]\n    LogManager --\x3e|Writes to| LogFiles["Log Files<br>stdout/stderr"]'}),"\n",(0,i.jsx)(n.h2,{id:"design-principles",children:"Design Principles"}),"\n",(0,i.jsxs)(n.h3,{id:"\ufe0f-layered-architecture",children:["\ud83c\udfd7\ufe0f ",(0,i.jsx)(n.strong,{children:"Layered Architecture"})]}),"\n",(0,i.jsx)(n.p,{children:"PMDaemon follows a clean layered architecture pattern:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Presentation Layer"})," - CLI and Web API interfaces"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security Layer"})," - Authentication and authorization middleware"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Business Logic Layer"})," - Core process management and orchestration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring Layer"})," - Health checks and metrics collection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Access Layer"})," - Configuration and log management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System Layer"})," - Direct OS process interaction"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"-security-first-design",children:["\ud83d\udd12 ",(0,i.jsx)(n.strong,{children:"Security-First Design"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Key Authentication"})," - Optional but recommended for production"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Middleware-based Security"})," - Clean separation of security concerns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Input Validation"})," - All user inputs are validated and sanitized"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Principle of Least Privilege"})," - Minimal required permissions"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"-high-performance",children:["\u26a1 ",(0,i.jsx)(n.strong,{children:"High Performance"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Async/Await"})," - Non-blocking I/O throughout the system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Efficient Resource Management"})," - Minimal memory footprint"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimized Monitoring"})," - Cached metrics with configurable intervals"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Zero-Copy Operations"})," - Where possible to reduce allocations"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,i.jsx)(n.h3,{id:"web-layer",children:"Web Layer"}),"\n",(0,i.jsx)(n.h4,{id:"web-api-server-axum",children:"Web API Server (Axum)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": HTTP REST API for remote process management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Technology"}),": Axum web framework for high performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": CORS support, security headers, JSON responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoints"}),": Process management, system info, logs access"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"api-key-authentication",children:"API Key Authentication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Secure access control for production environments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementation"}),": Middleware-based authentication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Formats"}),": Bearer token, ApiKey header, X-API-Key header"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Configurable, optional for development"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"websocket-handler",children:"WebSocket Handler"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Real-time updates and monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Live process status, system metrics streaming"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protocol"}),": WebSocket with JSON message format"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Efficient broadcasting to multiple clients"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"core-management-layer",children:"Core Management Layer"}),"\n",(0,i.jsx)(n.h4,{id:"process-manager",children:"Process Manager"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Central orchestrator for all process operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Responsibilities"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Process lifecycle management (start, stop, restart)"}),"\n",(0,i.jsx)(n.li,{children:"Clustering and instance management"}),"\n",(0,i.jsx)(n.li,{children:"Configuration coordination"}),"\n",(0,i.jsx)(n.li,{children:"Resource allocation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Thread-safe with async operations"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"port-manager",children:"Port Manager"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Advanced port allocation and conflict prevention"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automatic port assignment"}),"\n",(0,i.jsx)(n.li,{children:"Range-based allocation"}),"\n",(0,i.jsx)(n.li,{children:"Conflict detection and resolution"}),"\n",(0,i.jsx)(n.li,{children:"Runtime port overrides"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Innovation"}),": Goes beyond PM2's basic port handling"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"configuration-service",children:"Configuration Service"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Multi-format configuration management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Formats"}),": JSON, YAML, TOML ecosystem files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Validation and error handling"}),"\n",(0,i.jsx)(n.li,{children:"Hot reloading capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Environment variable substitution"}),"\n",(0,i.jsx)(n.li,{children:"Schema validation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"monitoring--health-layer",children:"Monitoring & Health Layer"}),"\n",(0,i.jsx)(n.h4,{id:"health-monitor",children:"Health Monitor"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Application health verification"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),": HTTP endpoint checks, custom script execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Configurable intervals, retry logic, failure thresholds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration"}),": Automatic restart on health check failures"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"system-monitor",children:"System Monitor"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": System-wide resource monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Metrics"}),": CPU usage, memory consumption, load averages"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Efficient system calls with caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": Continuous monitoring with WebSocket broadcasting"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"process-monitor",children:"Process Monitor"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Individual process metrics collection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Metrics"}),": Per-process CPU, memory, uptime, restart count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Efficiency"}),": Batch processing for multiple processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accuracy"}),": Handles edge cases and invalid data gracefully"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"process-execution-layer",children:"Process Execution Layer"}),"\n",(0,i.jsx)(n.h4,{id:"process-execution",children:"Process Execution"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Low-level process spawning and control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cross-platform process management"}),"\n",(0,i.jsx)(n.li,{children:"Environment variable injection"}),"\n",(0,i.jsx)(n.li,{children:"Working directory control"}),"\n",(0,i.jsx)(n.li,{children:"Resource limit enforcement"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"signal-handler",children:"Signal Handler"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": OS signal management and forwarding"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Platforms"}),": Unix signals (Linux/macOS) and Windows process control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Safety"}),": Graceful shutdown handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reliability"}),": Signal forwarding to child processes"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"log-manager",children:"Log Manager"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Process output capture and management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Separate stdout/stderr streams"}),"\n",(0,i.jsx)(n.li,{children:"Log rotation and archival"}),"\n",(0,i.jsx)(n.li,{children:"Real-time log following"}),"\n",(0,i.jsx)(n.li,{children:"Structured log formatting"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,i.jsxs)(n.h3,{id:"1-command-execution-flow",children:["1. ",(0,i.jsx)(n.strong,{children:"Command Execution Flow"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User \u2192 CLI \u2192 Process Manager \u2192 Process Execution \u2192 System Process\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"2-web-api-request-flow",children:["2. ",(0,i.jsx)(n.strong,{children:"Web API Request Flow"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User \u2192 Web API \u2192 Authentication \u2192 Process Manager \u2192 Response\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"3-monitoring-data-flow",children:["3. ",(0,i.jsx)(n.strong,{children:"Monitoring Data Flow"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"System Process \u2192 Process Monitor \u2192 System Monitor \u2192 WebSocket \u2192 User\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"4-configuration-flow",children:["4. ",(0,i.jsx)(n.strong,{children:"Configuration Flow"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Config Files \u2192 Configuration Service \u2192 Process Manager \u2192 Process Execution\n"})}),"\n",(0,i.jsx)(n.h2,{id:"security-architecture",children:"Security Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request Reception"})," - Web API receives HTTP request"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication Check"})," - Middleware validates API key"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authorization"})," - Verified requests proceed to core system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"})," - Secure response with appropriate headers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"security-layers",children:"Security Layers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transport Security"})," - HTTPS recommended for production"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication"})," - API key validation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Input Validation"})," - All inputs sanitized"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Output Sanitization"})," - Secure response formatting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"})," - No sensitive information in error messages"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,i.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concurrent Processes"})," - Handles hundreds of managed processes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory Efficiency"})," - Low overhead per managed process"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU Optimization"})," - Efficient monitoring with minimal system impact"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"reliability",children:"Reliability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault Tolerance"})," - Graceful handling of process failures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Recovery"})," - Automatic restart capabilities"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Persistence"})," - Configuration and state preservation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Platform"})," - Consistent behavior across operating systems"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,i.jsx)(n.h3,{id:"core-technologies",children:"Core Technologies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Language"}),": Rust (memory safety, performance)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Async Runtime"}),": Tokio (high-performance async I/O)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web Framework"}),": Axum (modern, fast HTTP server)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Serialization"}),": Serde (JSON, YAML, TOML support)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System Interface"}),": sysinfo, nix (cross-platform system calls)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"development-tools",children:"Development Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testing"}),": Comprehensive test suite with 272 tests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": docs.rs integration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CI/CD"}),": GitHub Actions for automated testing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": cargo-audit for vulnerability scanning"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This architecture enables PMDaemon to provide enterprise-grade process management with the performance and safety benefits of Rust, while maintaining ease of use and PM2 compatibility."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);