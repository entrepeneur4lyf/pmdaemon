"use strict";(self.webpackChunkpmdaemon_docs=self.webpackChunkpmdaemon_docs||[]).push([[7924],{7668:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"PMDaemon is fully cross-platform and can be installed on Linux, Windows, and macOS through multiple methods. Choose the one that works best for your environment.","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/pmdaemon/docs/getting-started/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/entrepeneur4lyf/pmdaemon/tree/main/docs/docs/getting-started/installation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/pmdaemon/docs/getting-started/introduction"},"next":{"title":"Quick Start","permalink":"/pmdaemon/docs/getting-started/quick-start"}}');var a=s(4848),i=s(8453);const o={},r="Installation",d={},t=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Method 1: Install from Crates.io (Recommended)",id:"method-1-install-from-cratesio-recommended",level:2},{value:"Verify Installation",id:"verify-installation",level:3},{value:"Method 2: Build from Source",id:"method-2-build-from-source",level:2},{value:"Cross-Platform Building",id:"cross-platform-building",level:3},{value:"Development Build",id:"development-build",level:3},{value:"Method 3: Pre-built Binaries",id:"method-3-pre-built-binaries",level:2},{value:"Linux (x86_64)",id:"linux-x86_64",level:3},{value:"Windows (x86_64)",id:"windows-x86_64",level:3},{value:"macOS Intel (x86_64)",id:"macos-intel-x86_64",level:3},{value:"macOS Apple Silicon (aarch64)",id:"macos-apple-silicon-aarch64",level:3},{value:"Method 4: Package Managers",id:"method-4-package-managers",level:2},{value:"Package Managers (Not Yet Available)",id:"package-managers-not-yet-available",level:3},{value:"Configuration Setup",id:"configuration-setup",level:2},{value:"Verify Installation",id:"verify-installation-1",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Command Not Found",id:"command-not-found",level:3},{value:"Permission Denied",id:"permission-denied",level:3},{value:"Build Errors",id:"build-errors",level:3},{value:"Updating PMDaemon",id:"updating-pmdaemon",level:2},{value:"From Crates.io",id:"from-cratesio",level:3},{value:"From Source",id:"from-source",level:3},{value:"Uninstalling",id:"uninstalling",level:2},{value:"Cargo Installation",id:"cargo-installation",level:3},{value:"Manual Installation",id:"manual-installation",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,a.jsxs)(n.p,{children:["PMDaemon is ",(0,a.jsx)(n.strong,{children:"fully cross-platform"})," and can be installed on Linux, Windows, and macOS through multiple methods. Choose the one that works best for your environment."]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Rust 1.70+"})," (for building from source)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Operating System"}),": Linux, macOS, or Windows (full native support)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Architecture"}),": x86_64 or ARM64 (Apple Silicon supported)"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"method-1-install-from-cratesio-recommended",children:"Method 1: Install from Crates.io (Recommended)"}),"\n",(0,a.jsx)(n.p,{children:"The easiest way to install PMDaemon is using Cargo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo install pmdaemon\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Download and compile the latest stable version"}),"\n",(0,a.jsxs)(n.li,{children:["Install the ",(0,a.jsx)(n.code,{children:"pmdaemon"})," binary to ",(0,a.jsx)(n.code,{children:"~/.cargo/bin/"})]}),"\n",(0,a.jsx)(n.li,{children:"Make it available in your PATH (if Cargo is configured correctly)"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pmdaemon --version\n# Output: pmdaemon 0.1.2\n"})}),"\n",(0,a.jsx)(n.h2,{id:"method-2-build-from-source",children:"Method 2: Build from Source"}),"\n",(0,a.jsx)(n.p,{children:"For the latest development version or custom builds (works on all platforms):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/entrepeneur4lyf/pmdaemon.git\ncd pmdaemon\n\n# Build in release mode (native platform)\ncargo build --release\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Platform-specific installation:"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Linux/macOS:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo cp target/release/pmdaemon /usr/local/bin/\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Windows:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmd",children:"copy target\\release\\pmdaemon.exe C:\\Windows\\System32\\\n"})}),"\n",(0,a.jsx)(n.h3,{id:"cross-platform-building",children:"Cross-Platform Building"}),"\n",(0,a.jsx)(n.p,{children:"You can also build for other platforms:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Add cross-compilation targets\nrustup target add x86_64-pc-windows-gnu\nrustup target add x86_64-apple-darwin\nrustup target add aarch64-apple-darwin\n\n# Build for Windows (from Linux)\ncargo build --release --target x86_64-pc-windows-gnu\n\n# Build for macOS (requires macOS machine)\ncargo build --release --target x86_64-apple-darwin\ncargo build --release --target aarch64-apple-darwin\n"})}),"\n",(0,a.jsx)(n.h3,{id:"development-build",children:"Development Build"}),"\n",(0,a.jsx)(n.p,{children:"For development or testing:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Build in debug mode (faster compilation)\ncargo build\n\n# Run directly\n./target/debug/pmdaemon --help\n"})}),"\n",(0,a.jsx)(n.h2,{id:"method-3-pre-built-binaries",children:"Method 3: Pre-built Binaries"}),"\n",(0,a.jsxs)(n.p,{children:["Download platform-specific pre-built binaries from the ",(0,a.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/releases",children:"GitHub Releases"})," page:"]}),"\n",(0,a.jsx)(n.h3,{id:"linux-x86_64",children:"Linux (x86_64)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-linux-x86_64\nchmod +x pmdaemon-linux-x86_64\nsudo mv pmdaemon-linux-x86_64 /usr/local/bin/pmdaemon\n"})}),"\n",(0,a.jsx)(n.h3,{id:"windows-x86_64",children:"Windows (x86_64)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cmd",children:"# Download pmdaemon-windows-x86_64.exe\n# Place in a directory in your PATH, or:\ncopy pmdaemon-windows-x86_64.exe C:\\Windows\\System32\\pmdaemon.exe\n"})}),"\n",(0,a.jsx)(n.h3,{id:"macos-intel-x86_64",children:"macOS Intel (x86_64)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-macos-x86_64\nchmod +x pmdaemon-macos-x86_64\nsudo mv pmdaemon-macos-x86_64 /usr/local/bin/pmdaemon\n"})}),"\n",(0,a.jsx)(n.h3,{id:"macos-apple-silicon-aarch64",children:"macOS Apple Silicon (aarch64)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/entrepeneur4lyf/pmdaemon/releases/latest/download/pmdaemon-macos-aarch64\nchmod +x pmdaemon-macos-aarch64\nsudo mv pmdaemon-macos-aarch64 /usr/local/bin/pmdaemon\n"})}),"\n",(0,a.jsx)(n.h2,{id:"method-4-package-managers",children:"Method 4: Package Managers"}),"\n",(0,a.jsx)(n.h3,{id:"package-managers-not-yet-available",children:"Package Managers (Not Yet Available)"}),"\n",(0,a.jsx)(n.p,{children:"PMDaemon is currently pre-1.0 and not yet available through package managers. Use the binary downloads or build from source above."}),"\n",(0,a.jsx)(n.h2,{id:"configuration-setup",children:"Configuration Setup"}),"\n",(0,a.jsx)(n.p,{children:"After installation, PMDaemon will create its configuration directories on first run:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Linux/macOS\n~/.config/pmdaemon/\n~/.local/share/pmdaemon/logs/\n~/.local/share/pmdaemon/pids/\n\n# Windows\n%APPDATA%\\pmdaemon\\\n%LOCALAPPDATA%\\pmdaemon\\logs\\\n%LOCALAPPDATA%\\pmdaemon\\pids\\\n"})}),"\n",(0,a.jsx)(n.h2,{id:"verify-installation-1",children:"Verify Installation"}),"\n",(0,a.jsx)(n.p,{children:"Test that PMDaemon is working correctly:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check version\npmdaemon --version\n\n# View help\npmdaemon --help\n\n# Start a simple process\npmdaemon start \"echo 'Hello PMDaemon'\" --name test\n\n# List processes\npmdaemon list\n\n# Clean up\npmdaemon delete test\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"command-not-found",children:"Command Not Found"}),"\n",(0,a.jsxs)(n.p,{children:["If you get ",(0,a.jsx)(n.code,{children:"command not found: pmdaemon"}),":"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Check Cargo bin directory is in PATH"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'echo $PATH | grep -q "$HOME/.cargo/bin" && echo "\u2713 Cargo bin in PATH" || echo "\u2717 Add ~/.cargo/bin to PATH"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Add to PATH"})," (add to your shell profile):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'export PATH="$HOME/.cargo/bin:$PATH"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Reload shell"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"source ~/.bashrc  # or ~/.zshrc\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"permission-denied",children:"Permission Denied"}),"\n",(0,a.jsx)(n.p,{children:"If you get permission errors:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Make binary executable\nchmod +x /path/to/pmdaemon\n\n# Or install to user directory\nmkdir -p ~/.local/bin\ncp pmdaemon ~/.local/bin/\nexport PATH="$HOME/.local/bin:$PATH"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"build-errors",children:"Build Errors"}),"\n",(0,a.jsx)(n.p,{children:"Common build issues:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Rust version too old"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"rustup update\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Missing system dependencies"})," (Linux):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Ubuntu/Debian\nsudo apt update\nsudo apt install build-essential pkg-config libssl-dev\n\n# CentOS/RHEL\nsudo yum groupinstall "Development Tools"\nsudo yum install openssl-devel\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Windows build tools"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Install ",(0,a.jsx)(n.a,{href:"https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2022",children:"Visual Studio Build Tools"})]}),"\n",(0,a.jsxs)(n.li,{children:["Or use ",(0,a.jsx)(n.a,{href:"https://rustup.rs/",children:"rustup-init.exe"})," which handles this automatically"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"updating-pmdaemon",children:"Updating PMDaemon"}),"\n",(0,a.jsx)(n.h3,{id:"from-cratesio",children:"From Crates.io"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo install pmdaemon --force\n"})}),"\n",(0,a.jsx)(n.h3,{id:"from-source",children:"From Source"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd pmdaemon\ngit pull origin main\ncargo build --release\nsudo cp target/release/pmdaemon /usr/local/bin/\n"})}),"\n",(0,a.jsx)(n.h2,{id:"uninstalling",children:"Uninstalling"}),"\n",(0,a.jsx)(n.h3,{id:"cargo-installation",children:"Cargo Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo uninstall pmdaemon\n"})}),"\n",(0,a.jsx)(n.h3,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Remove binary\nsudo rm /usr/local/bin/pmdaemon\n\n# Remove configuration (optional)\nrm -rf ~/.config/pmdaemon\nrm -rf ~/.local/share/pmdaemon\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"Now that PMDaemon is installed:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"/pmdaemon/docs/getting-started/quick-start",children:"Quick Start"})})," - Get up and running in 5 minutes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"/pmdaemon/docs/cli/commands",children:"CLI Commands"})})," - Learn the available commands"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"/pmdaemon/docs/configuration/ecosystem-files",children:"Configuration"})})," - Set up configuration files"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.p,{children:["Need help? Check the ",(0,a.jsx)(n.a,{href:"/pmdaemon/docs/advanced/troubleshooting",children:"troubleshooting guide"})," or ",(0,a.jsx)(n.a,{href:"https://github.com/entrepeneur4lyf/pmdaemon/issues",children:"open an issue"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var l=s(6540);const a={},i=l.createContext(a);function o(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);