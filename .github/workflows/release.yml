name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: tag_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: PMDaemon v${{ steps.tag_version.outputs.VERSION }}
          body: |
            See [RELEASE.md](https://github.com/${{ github.repository }}/blob/main/RELEASE.md) for detailed release notes.

            ## Installation

            ### From Binary
            Download the appropriate binary for your platform from the assets below.

            ### From Source
            ```bash
            git clone https://github.com/${{ github.repository }}
            cd pmdaemon
            cargo install --path .
            ```

            ### Using Cargo
            ```bash
            cargo install pmdaemon
            ```
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: pmdaemon
            asset_name: pmdaemon-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: pmdaemon.exe
            asset_name: pmdaemon-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: pmdaemon
            asset_name: pmdaemon-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: pmdaemon
            asset_name: pmdaemon-macos-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.binary_name }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
