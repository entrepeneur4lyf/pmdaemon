name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: pmdaemon
            asset_name: pmdaemon-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: pmdaemon.exe
            asset_name: pmdaemon-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: pmdaemon
            asset_name: pmdaemon-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: pmdaemon
            asset_name: pmdaemon-macos-aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.binary_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: PMDaemon ${{ github.event.inputs.tag }}
          files: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          body: |
            See [RELEASE.md](https://github.com/${{ github.repository }}/blob/main/RELEASE.md) for detailed release notes.

            ## Installation

            ### From Binary
            Download the appropriate binary for your platform from the assets below.

            ### From Source
            ```bash
            git clone https://github.com/${{ github.repository }}
            cd pmdaemon
            cargo install --path .
            ```

            ### Using Cargo
            ```bash
            cargo install pmdaemon
            ```
